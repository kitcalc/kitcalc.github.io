/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI570425369 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643478 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306373 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1207959557 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI788529161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1207959556 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306374 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI805306371 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI805306372 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI855638085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529177 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529176 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529175 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529174 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529172 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529167 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529166 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529165 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529164 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529163 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529657 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643445 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI704643445.base = NTI33554449;
var NNI788529657 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI788529657.node = NNI788529657;
var NNI788529162 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI788529163, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI788529164, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI788529165, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI788529166, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI788529167, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI788529172, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI788529174, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI788529175, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI788529176, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI788529177, name: "flushImpl", sons: null}]};
NTI788529162.node = NNI788529162;
NTI788529162.base = NTI33555173;
NTI788529657.base = NTI788529162;
var NNI855638085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI855638085.node = NNI855638085;
NTI805306371.base = NTI33554449;
NTI805306374.base = NTI33554449;
var NNI805306372 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI805306371, name: "row", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "sep", len: 0, typ: NTI33554448, name: "sep", sons: null}, 
{kind: 1, offset: "quote", len: 0, typ: NTI33554448, name: "quote", sons: null}, 
{kind: 1, offset: "esc", len: 0, typ: NTI33554448, name: "esc", sons: null}, 
{kind: 1, offset: "skipWhite", len: 0, typ: NTI33554466, name: "skipWhite", sons: null}, 
{kind: 1, offset: "currRow", len: 0, typ: NTI33554435, name: "currRow", sons: null}, 
{kind: 1, offset: "headers", len: 0, typ: NTI805306374, name: "headers", sons: null}]};
NTI805306372.node = NNI805306372;
NTI788529161.base = NTI788529162;
NTI1207959557.base = NTI33554448;
var NNI1207959556 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI788529161, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1207959557, name: "refillChars", sons: null}]};
NTI1207959556.node = NNI1207959556;
NTI1207959556.base = NTI33555173;
NTI805306372.base = NTI1207959556;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI805306373 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI805306373.node = NNI805306373;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217736.base = NTI33555179;
NTI805306373.base = NTI134217736;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
NTI134217746.base = NTI33555179;
NTI704643478.base = NTI33554449;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
NTI570425369.base = NTI33554449;

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function subInt64(a_33557076, b_33557077) {
        var result = a_33557076 - b_33557077;
    checkOverflowInt64(result);
    return result;
  

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet2 = setConstr(13, 10);
var ConstSet3 = setConstr(32, 9);

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet4 = setConstr(13, 10, 0);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
                var expectedFormat_570425423 = [[70,105,108,101,84,121,112,101], [82,97,99,107,70,105,108,101], [50]];
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
                    var colors_570425617 = [[34,82,71,66,40,49,51,50,44,49,57,51,44,50,52,49,41,34], [34,82,71,66,40,49,54,56,44,50,53,53,44,50,50,50,41,34], [34,82,71,66,40,50,50,51,44,50,50,49,44,49,52,50,41,34], [34,82,71,66,40,50,52,55,44,50,53,53,44,49,54,56,41,34], [34,82,71,66,40,49,56,48,44,50,53,53,44,48,41,34], [34,82,71,66,40,50,53,53,44,50,48,52,44,49,53,51,41,34], [34,82,71,66,40,50,53,51,44,49,51,56,44,56,56,41,34], [34,82,71,66,40,50,49,51,44,50,52,52,44,49,54,53,41,34], [34,82,71,66,40,57,54,44,50,53,53,44,49,54,48,41,34]];

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}
          var cb64safe_721420293 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);
            var cb64_721420292 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570425909 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570425909 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570425909;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570425909 = addInt(i_570425909, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nsuEndsWith(s_704644546, suffix_704644547) {
  var result_704644548 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_704644554 = (suffix_704644547).length;
    var sLenHEX60gensym153_704644555 = (s_704644546).length;
    var iHEX60gensym153_704644556 = 0;
    var jHEX60gensym153_704644557 = subInt(sLenHEX60gensym153_704644555, suffixLenHEX60gensym153_704644554);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557)) && (addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557) < sLenHEX60gensym153_704644555))) break Label2;
          if (!((s_704644546[chckIndx(addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557), 0, (s_704644546).length - 1)] == suffix_704644547[chckIndx(iHEX60gensym153_704644556, 0, (suffix_704644547).length - 1)]))) {
          result_704644548 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_704644556 = addInt(iHEX60gensym153_704644556, 1);
        }
    };
    if ((suffixLenHEX60gensym153_704644554 <= iHEX60gensym153_704644556)) {
    result_704644548 = true;
    break BeforeRet;
    }
    
  };

  return result_704644548;

}

function nsuRemoveSuffixString(s_704644618, s_704644618_Idx, suffix_704644619) {
    var newLen_704644620 = (s_704644618[s_704644618_Idx]).length;
    if (nsuEndsWith(s_704644618[s_704644618_Idx], suffix_704644619)) {
    newLen_704644620 = subInt(newLen_704644620, (suffix_704644619).length);
    if (s_704644618[s_704644618_Idx].length < chckRange(newLen_704644620, 0, 2147483647)) { for (var i = s_704644618[s_704644618_Idx].length; i < chckRange(newLen_704644620, 0, 2147483647); ++i) s_704644618[s_704644618_Idx].push(0); }
         else {s_704644618[s_704644618_Idx].length = chckRange(newLen_704644620, 0, 2147483647); };
    }
    

  
}

function checkOverflowInt64(a_33557070) {
        if (a_33557070 > 9223372036854775807n || a_33557070 < -9223372036854775808n) raiseOverflow();
  

  
}

function substr_33558084(s_33558085, first_33558086, last_33558087) {
  var result_33558088 = [];

    var first_33558089 = nimMax(first_33558086, 0);
    var L_33558090 = nimMax(addInt(subInt(nimMin(last_33558087, (s_33558085).length - 1), first_33558089), 1), 0);
    result_33558088 = nimCopy(null, mnewString(chckRange(L_33558090, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558095 = 0;
      var colontmp__570425386 = 0;
      colontmp__570425386 = subInt(L_33558090, 1);
      var res_570425387 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570425387 <= colontmp__570425386)) break Label3;
            i_33558095 = res_570425387;
            result_33558088[chckIndx(i_33558095, 0, (result_33558088).length - 1)] = s_33558085[chckIndx(addInt(i_33558095, first_33558089), 0, (s_33558085).length - 1)];
            res_570425387 = addInt(res_570425387, 1);
          }
      };
    };

  return result_33558088;

}

function nsuSplitChar(s_704643617, sep_704643618, maxsplit_704643619) {
  var result_704643620 = [];

    result_704643620 = nimCopy(null, [], NTI704643445);
    Label1: {
      var xHEX60gensym67_704643626 = [];
      var lastHEX60gensym34_570425915 = 0;
      var splitsHEX60gensym34_570425916 = maxsplit_704643619;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym34_570425915 <= (s_704643617).length)) break Label3;
            var firstHEX60gensym34_570425918 = lastHEX60gensym34_570425915;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym34_570425915 < (s_704643617).length) && !((s_704643617[chckIndx(lastHEX60gensym34_570425915, 0, (s_704643617).length - 1)] == sep_704643618)))) break Label5;
                  lastHEX60gensym34_570425915 = addInt(lastHEX60gensym34_570425915, 1);
                }
            };
            if ((splitsHEX60gensym34_570425916 == 0)) {
            lastHEX60gensym34_570425915 = (s_704643617).length;
            }
            
            xHEX60gensym67_704643626 = substr_33558084(s_704643617, firstHEX60gensym34_570425918, subInt(lastHEX60gensym34_570425915, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_704643626, NTI33554449);
            result_704643620.push(Temporary6);;
            if ((splitsHEX60gensym34_570425916 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_570425916 = subInt(splitsHEX60gensym34_570425916, 1);
            lastHEX60gensym34_570425915 = addInt(lastHEX60gensym34_570425915, 1);
          }
      };
    };

  return result_704643620;

}

function nsuJoinSep(a_704644651, sep_704644652) {
  var result_704644653 = [];

    if ((0 < (a_704644651).length)) {
    var L_704644660 = mulInt((sep_704644652).length, subInt((a_704644651).length, 1));
    Label1: {
      var i_704644668 = 0;
      var colontmp__570425921 = 0;
      colontmp__570425921 = (a_704644651).length - 1;
      var res_570425922 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570425922 <= colontmp__570425921)) break Label3;
            i_704644668 = res_570425922;
            L_704644660 = addInt(L_704644660, (a_704644651[chckIndx(i_704644668, 0, (a_704644651).length - 1)]).length);
            res_570425922 = addInt(res_570425922, 1);
          }
      };
    };
    result_704644653 = nimCopy(null, mnewString(0), NTI33554449);
    result_704644653.push.apply(result_704644653, a_704644651[chckIndx(0, 0, (a_704644651).length - 1)]);;
    Label4: {
      var i_704644681 = 0;
      var colontmp__570425925 = 0;
      colontmp__570425925 = (a_704644651).length - 1;
      var res_570425926 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_570425926 <= colontmp__570425925)) break Label6;
            i_704644681 = res_570425926;
            result_704644653.push.apply(result_704644653, sep_704644652);;
            result_704644653.push.apply(result_704644653, a_704644651[chckIndx(i_704644681, 0, (a_704644651).length - 1)]);;
            res_570425926 = addInt(res_570425926, 1);
          }
      };
    };
    }
    else {
      result_704644653 = nimCopy(null, [], NTI33554449);
    }
    

  return result_704644653;

}

function linkFileName_570425556(file_570425557) {
    var Temporary1;

  var result_570425558 = [];

    var trimmed_570425559 = [nimCopy(null, file_570425557, NTI33554449)];
    nsuRemoveSuffixString(trimmed_570425559, 0, [46,99,115,118]);
    var dateUtc_570425560 = new Date();
    var offset_570425561 = dateUtc_570425560.getTimezoneOffset();
    var dateObj_570425562 = new Date(Number(subInt64(BigInt(dateUtc_570425560.getTime()), BigInt(mulInt(mulInt(offset_570425561, 60), 1000)))));
    var dateStr_570425563 = cstrToNimstr(dateObj_570425562.toISOString());
    var dateSplit_570425564 = nsuSplitChar(dateStr_570425563, 84, (-1));
    var rawDate_570425565 = nimCopy(null, dateSplit_570425564[chckIndx(0, 0, (dateSplit_570425564).length - 1)], NTI33554449);
    var date_570425566 = nsuJoinSep(nsuSplitChar(rawDate_570425565, 45, (-1)), []);
    var rawTime_570425567 = nimCopy(null, (Temporary1 = nsuSplitChar(dateSplit_570425564[chckIndx(1, 0, (dateSplit_570425564).length - 1)], 46, (-1)), Temporary1)[chckIndx(0, 0, (Temporary1).length - 1)], NTI33554449);
    var time_570425568 = nsuJoinSep(nsuSplitChar(rawTime_570425567, 58, (-1)), []);
    result_570425558 = nimCopy(null, (trimmed_570425559[0] || []).concat([95] || [],date_570425566 || [],[95] || [],time_570425568 || [],[46,116,120,116] || []), NTI33554449);

  return result_570425558;

}

function ssClose_788530277(s_788530278) {
    var s_788530279 = s_788530278;
    s_788530279.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_788529924(s_788529925) {
  var result_788529926 = false;

  BeforeRet: {
    var s_788529927 = s_788529925;
    result_788529926 = ((s_788529927.data).length <= s_788529927.pos);
    break BeforeRet;
  };

  return result_788529926;

}

function clamp_788529964(x_788529966, a_788529967, b_788529968) {
  var result_788529969 = 0;

  BeforeRet: {
    if ((x_788529966 < a_788529967)) {
    result_788529969 = a_788529967;
    break BeforeRet;
    }
    
    if ((b_788529968 < x_788529966)) {
    result_788529969 = b_788529968;
    break BeforeRet;
    }
    
    result_788529969 = x_788529966;
    break BeforeRet;
  };

  return result_788529969;

}

function ssSetPosition_788529960(s_788529961, pos_788529962) {
    var s_788529963 = s_788529961;
    s_788529963.pos = clamp_788529964(pos_788529962, 0, (s_788529963.data).length);

  
}

function ssGetPosition_788529970(s_788529971) {
  var result_788529972 = 0;

  BeforeRet: {
    var s_788529973 = s_788529971;
    result_788529972 = s_788529973.pos;
    break BeforeRet;
  };

  return result_788529972;

}

function HEX5BHEX5DHEX3D_704644243(s_704644246, s_704644246_Idx, x_704644247, b_704644248) {
    var a_704644250 = x_704644247.a;
    var L_704644252 = addInt(subInt(x_704644247.b, a_704644250), 1);
    if ((L_704644252 == (b_704644248).length)) {
    Label1: {
      var i_704644257 = 0;
      var i_570425933 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425933 < L_704644252)) break Label3;
            i_704644257 = i_570425933;
            s_704644246[s_704644246_Idx][chckIndx(addInt(i_704644257, a_704644250), 0, (s_704644246[s_704644246_Idx]).length - 1)] = b_704644248[chckIndx(i_704644257, 0, (b_704644248).length - 1)];
            i_570425933 = addInt(i_570425933, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_704644263 = subInt((b_704644248).length, nimMax(0, L_704644252));
      var newLenHEX60gensym109_704644264 = addInt((s_704644246[s_704644246_Idx]).length, shiftHEX60gensym109_704644263);
      if ((0 < shiftHEX60gensym109_704644263)) {
      if (s_704644246[s_704644246_Idx].length < chckRange(newLenHEX60gensym109_704644264, 0, 2147483647)) { for (var i = s_704644246[s_704644246_Idx].length; i < chckRange(newLenHEX60gensym109_704644264, 0, 2147483647); ++i) s_704644246[s_704644246_Idx].push(0); }
         else {s_704644246[s_704644246_Idx].length = chckRange(newLenHEX60gensym109_704644264, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_704644270 = 0;
        var colontmp__570425936 = 0;
        var colontmp__570425937 = 0;
        colontmp__570425936 = subInt(newLenHEX60gensym109_704644264, 1);
        colontmp__570425937 = addInt(a_704644250, (b_704644248).length);
        var res_570425938 = colontmp__570425936;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__570425937 <= res_570425938)) break Label6;
              iHEX60gensym109_704644270 = res_570425938;
              s_704644246[s_704644246_Idx][chckIndx(iHEX60gensym109_704644270, 0, (s_704644246[s_704644246_Idx]).length - 1)] = s_704644246[s_704644246_Idx][chckIndx(subInt(iHEX60gensym109_704644270, shiftHEX60gensym109_704644263), 0, (s_704644246[s_704644246_Idx]).length - 1)];
              res_570425938 = subInt(res_570425938, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_704644276 = 0;
          var colontmp__570425941 = 0;
          var colontmp__570425942 = 0;
          colontmp__570425941 = addInt(a_704644250, (b_704644248).length);
          colontmp__570425942 = subInt(newLenHEX60gensym109_704644264, 1);
          var res_570425944 = colontmp__570425941;
          Label8: {
              Label9: while (true) {
              if (!(res_570425944 <= colontmp__570425942)) break Label9;
                iHEX60gensym109_704644276 = res_570425944;
                s_704644246[s_704644246_Idx][chckIndx(iHEX60gensym109_704644276, 0, (s_704644246[s_704644246_Idx]).length - 1)] = s_704644246[s_704644246_Idx][chckIndx(subInt(iHEX60gensym109_704644276, shiftHEX60gensym109_704644263), 0, (s_704644246[s_704644246_Idx]).length - 1)];
                res_570425944 = addInt(res_570425944, 1);
              }
          };
        };
        if (s_704644246[s_704644246_Idx].length < chckRange(newLenHEX60gensym109_704644264, 0, 2147483647)) { for (var i = s_704644246[s_704644246_Idx].length; i < chckRange(newLenHEX60gensym109_704644264, 0, 2147483647); ++i) s_704644246[s_704644246_Idx].push(0); }
         else {s_704644246[s_704644246_Idx].length = chckRange(newLenHEX60gensym109_704644264, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_704644281 = 0;
        var colontmp__570425947 = 0;
        colontmp__570425947 = (b_704644248).length;
        var i_570425948 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_570425948 < colontmp__570425947)) break Label12;
              iHEX60gensym109_704644281 = i_570425948;
              s_704644246[s_704644246_Idx][chckIndx(addInt(a_704644250, iHEX60gensym109_704644281), 0, (s_704644246[s_704644246_Idx]).length - 1)] = b_704644248[chckIndx(iHEX60gensym109_704644281, 0, (b_704644248).length - 1)];
              i_570425948 = addInt(i_570425948, 1);
            }
        };
      };
    }
    

  
}

function HEX2EHEX2E_1124073520(a_1124073523, b_1124073524) {
  var result_1124073525 = ({a: 0, b: 0});

    result_1124073525 = nimCopy(result_1124073525, {a: a_1124073523, b: b_1124073524}, NTI855638085);

  return result_1124073525;

}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570425951 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425951 < L_704644360)) break Label3;
            i_704644365 = i_570425951;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570425951 = addInt(i_570425951, 1);
          }
      };
    };

  return result_704644356;

}

function ssReadDataStr_788529974(s_788529975, buffer_788529976, buffer_788529976_Idx, slice_788529978) {
  var result_788529979 = 0;

    var s_788529980 = s_788529975;
    result_788529979 = nimMin(subInt(addInt(slice_788529978.b, 1), slice_788529978.a), subInt((s_788529980.data).length, s_788529980.pos));
    if ((0 < result_788529979)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_704644243(buffer_788529976, buffer_788529976_Idx, HEX2EHEX2E_1124073520(slice_788529978.a, subInt(addInt(slice_788529978.a, result_788529979), 1)), HEX5BHEX5D_704644351(s_788529980.data, HEX2EHEX2E_1124073520(s_788529980.pos, subInt(addInt(s_788529980.pos, result_788529979), 1))));
    s_788529980.pos = addInt(s_788529980.pos, result_788529979);
    }
    else {
      result_788529979 = 0;
    }
    

  return result_788529979;

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556446 = null;

    if (isNimException_33556443()) {
    result_33556446 = lastJSError;
    }
    

  return result_33556446;

}

function ssReadData_788530076(s_788530077, buffer_788530078, buffer_788530078_Idx, bufLen_788530079) {
  var result_788530080 = 0;

    var s_788530081 = s_788530077;
    result_788530080 = nimMin(bufLen_788530079, subInt((s_788530081.data).length, s_788530081.pos));
    if ((0 < result_788530080)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_704644243(buffer_788530078, buffer_788530078_Idx, HEX2EHEX2E_1124073520(0, subInt(result_788530080, 1)), HEX5BHEX5D_704644351(s_788530081.data, HEX2EHEX2E_1124073520(s_788530081.pos, subInt(addInt(s_788530081.pos, result_788530080), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_788530081.pos = addInt(s_788530081.pos, result_788530080);
    }
    else {
      result_788530080 = 0;
    }
    

  return result_788530080;

}

function ssPeekData_788530169(s_788530170, buffer_788530171, buffer_788530171_Idx, bufLen_788530172) {
  var result_788530173 = 0;

    var s_788530174 = s_788530170;
    result_788530173 = nimMin(bufLen_788530172, subInt((s_788530174.data).length, s_788530174.pos));
    if ((0 < result_788530173)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_704644243(buffer_788530171, buffer_788530171_Idx, HEX2EHEX2E_1124073520(0, subInt(result_788530173, 1)), HEX5BHEX5D_704644351(s_788530174.data, HEX2EHEX2E_1124073520(s_788530174.pos, subInt(addInt(s_788530174.pos, result_788530173), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_788530173 = 0;
    }
    

  return result_788530173;

}

function ssWriteData_788530221(s_788530222, buffer_788530223, buffer_788530223_Idx, bufLen_788530224) {
    var Temporary1;

  BeforeRet: {
    var s_788530225 = s_788530222;
    if ((bufLen_788530224 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_788530225.data).length < addInt(s_788530225.pos, bufLen_788530224))) {
    if (s_788530225.data.length < (Temporary1 = chckRange(addInt(s_788530225.pos, bufLen_788530224), 0, 2147483647), Temporary1)) { for (var i = s_788530225.data.length; i < Temporary1; ++i) s_788530225.data.push(0); }
         else {s_788530225.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_704644243(s_788530225, "data", HEX2EHEX2E_1124073520(s_788530225.pos, subInt(addInt(s_788530225.pos, bufLen_788530224), 1)), HEX5BHEX5D_704644351(buffer_788530223[buffer_788530223_Idx], HEX2EHEX2E_1124073520(0, subInt(bufLen_788530224, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555178, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_788530225.pos = addInt(s_788530225.pos, bufLen_788530224);
  };

  
}

function newStringStream_788530280(s_788530281) {
  var result_788530282 = null;

    result_788530282 = ({m_type: NTI788529657, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_788530282.data = nimCopy(null, s_788530281, NTI33554449);
    result_788530282.pos = 0;
    result_788530282.closeImpl = ssClose_788530277;
    result_788530282.atEndImpl = ssAtEnd_788529924;
    result_788530282.setPositionImpl = ssSetPosition_788529960;
    result_788530282.getPositionImpl = ssGetPosition_788529970;
    result_788530282.readDataStrImpl = ssReadDataStr_788529974;
    result_788530282.readDataImpl = ssReadData_788530076;
    result_788530282.peekDataImpl = ssPeekData_788530169;
    result_788530282.writeDataImpl = ssWriteData_788530221;

  return result_788530282;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function readData_788529230(s_788529231, buffer_788529232, buffer_788529232_Idx, bufLen_788529233) {
  var result_788529234 = 0;

    result_788529234 = s_788529231.readDataImpl(s_788529231, buffer_788529232, buffer_788529232_Idx, bufLen_788529233);

  return result_788529234;

}

function readDataStr_788529236(s_788529237, buffer_788529238, buffer_788529238_Idx, slice_788529240) {
  var result_788529241 = 0;

    if (!((s_788529237.readDataStrImpl == null))) {
    result_788529241 = s_788529237.readDataStrImpl(s_788529237, buffer_788529238, buffer_788529238_Idx, slice_788529240);
    }
    else {
      result_788529241 = readData_788529230(s_788529237, buffer_788529238[buffer_788529238_Idx], chckIndx(slice_788529240.a, 0, (buffer_788529238[buffer_788529238_Idx]).length - 1), subInt(addInt(slice_788529240.b, 1), slice_788529240.a));
    }
    

  return result_788529241;

}

function fillBuffer_1207959568(L_1207959569) {
              var Temporary8;

    var charsRead_1207959570 = 0;
    var toCopy_1207959571 = 0;
    var s_1207959572 = 0;
    var oldBufLen_1207959573 = 0;
    if (!((addInt(L_1207959569.sentinel, 1) <= (L_1207959569.buf).length))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1207959571 = subInt((L_1207959569.buf).length, addInt(L_1207959569.sentinel, 1));
    if (!((0 <= toCopy_1207959571))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1207959571)) {
    Label1: {
      var i_1207959588 = 0;
      var i_570425954 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425954 < toCopy_1207959571)) break Label3;
            i_1207959588 = i_570425954;
            L_1207959569.buf[chckIndx(i_1207959588, 0, (L_1207959569.buf).length - 1)] = L_1207959569.buf[chckIndx(addInt(addInt(L_1207959569.sentinel, 1), i_1207959588), 0, (L_1207959569.buf).length - 1)];
            i_570425954 = addInt(i_570425954, 1);
          }
      };
    };
    }
    
    charsRead_1207959570 = readDataStr_788529236(L_1207959569.input, L_1207959569, "buf", HEX2EHEX2E_1124073520(toCopy_1207959571, subInt(addInt(addInt(toCopy_1207959571, L_1207959569.sentinel), 1), 1)));
    s_1207959572 = addInt(toCopy_1207959571, charsRead_1207959570);
    if ((charsRead_1207959570 < addInt(L_1207959569.sentinel, 1))) {
    L_1207959569.buf[chckIndx(s_1207959572, 0, (L_1207959569.buf).length - 1)] = 0;
    L_1207959569.sentinel = s_1207959572;
    }
    else {
      s_1207959572 = subInt(s_1207959572, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1207959572 < (L_1207959569.buf).length))) {
            failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1207959572) && !((L_1207959569.refillChars[L_1207959569.buf[chckIndx(s_1207959572, 0, (L_1207959569.buf).length - 1)]] != undefined)))) break Label7;
                  s_1207959572 = subInt(s_1207959572, 1);
                }
            };
            if ((0 <= s_1207959572)) {
            L_1207959569.sentinel = s_1207959572;
            break Label4;
            }
            else {
              oldBufLen_1207959573 = (L_1207959569.buf).length;
              if (L_1207959569.buf.length < (Temporary8 = chckRange(mulInt((L_1207959569.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1207959569.buf.length; i < Temporary8; ++i) L_1207959569.buf.push(0); }
         else {L_1207959569.buf.length = Temporary8; };
              charsRead_1207959570 = readDataStr_788529236(L_1207959569.input, L_1207959569, "buf", HEX2EHEX2E_1124073520(oldBufLen_1207959573, subInt((L_1207959569.buf).length, 1)));
              if ((charsRead_1207959570 < oldBufLen_1207959573)) {
              L_1207959569.buf[chckIndx(addInt(oldBufLen_1207959573, charsRead_1207959570), 0, (L_1207959569.buf).length - 1)] = 0;
              L_1207959569.sentinel = addInt(oldBufLen_1207959573, charsRead_1207959570);
              break Label4;
              }
              
              s_1207959572 = subInt((L_1207959569.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1207959684(L_1207959685) {
    if ((((L_1207959685.buf[chckIndx(0, 0, (L_1207959685.buf).length - 1)] == 239) && (L_1207959685.buf[chckIndx(1, 0, (L_1207959685.buf).length - 1)] == 187)) && (L_1207959685.buf[chckIndx(2, 0, (L_1207959685.buf).length - 1)] == 191))) {
    L_1207959685.bufpos = addInt(L_1207959685.bufpos, 3);
    L_1207959685.lineStart = addInt(L_1207959685.lineStart, 3);
    }
    

  
}

function open_1207959696(L_1207959697, input_1207959698, bufLen_1207959699, refillChars_1207959700) {
    if (!((0 < bufLen_1207959699))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1207959698 == null)))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1207959697.input = input_1207959698;
    L_1207959697.bufpos = 0;
    L_1207959697.offsetBase = 0;
    L_1207959697.refillChars = nimCopy(L_1207959697.refillChars, refillChars_1207959700, NTI1207959557);
    L_1207959697.buf = nimCopy(null, mnewString(chckRange(bufLen_1207959699, 0, 2147483647)), NTI33554449);
    L_1207959697.sentinel = subInt(bufLen_1207959699, 1);
    L_1207959697.lineStart = 0;
    L_1207959697.lineNumber = 1;
    fillBuffer_1207959568(L_1207959697);
    skipUtf8Bom_1207959684(L_1207959697);

  
}

function open_805306485(self_805306486, input_805306487, filename_805306488, separator_805306489, quote_805306490, escape_805306491, skipInitialSpace_805306492) {
    open_1207959696(self_805306486, input_805306487, 8192, ConstSet2);
    self_805306486.filename = nimCopy(null, filename_805306488, NTI33554449);
    self_805306486.sep = separator_805306489;
    self_805306486.quote = quote_805306490;
    self_805306486.esc = escape_805306491;
    self_805306486.skipWhite = skipInitialSpace_805306492;

  
}

function fillBaseLexer_1207959630(L_1207959631, pos_1207959632) {
  var result_1207959633 = 0;

    if (!((pos_1207959632 <= L_1207959631.sentinel))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1207959632 < L_1207959631.sentinel)) {
    result_1207959633 = addInt(pos_1207959632, 1);
    }
    else {
      fillBuffer_1207959568(L_1207959631);
      L_1207959631.offsetBase = addInt(L_1207959631.offsetBase, pos_1207959632);
      L_1207959631.bufpos = 0;
      result_1207959633 = 0;
    }
    

  return result_1207959633;

}

function handleCR_1207959643(L_1207959644, pos_1207959645) {
  var result_1207959646 = 0;

    if (!((L_1207959644.buf[chckIndx(pos_1207959645, 0, (L_1207959644.buf).length - 1)] == 13))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1207959644.lineNumber = addInt(L_1207959644.lineNumber, 1);
    result_1207959646 = fillBaseLexer_1207959630(L_1207959644, pos_1207959645);
    if ((L_1207959644.buf[chckIndx(result_1207959646, 0, (L_1207959644.buf).length - 1)] == 10)) {
    result_1207959646 = fillBaseLexer_1207959630(L_1207959644, result_1207959646);
    }
    
    L_1207959644.lineStart = result_1207959646;

  return result_1207959646;

}

function handleLF_1207959657(L_1207959658, pos_1207959659) {
  var result_1207959660 = 0;

    if (!((L_1207959658.buf[chckIndx(pos_1207959659, 0, (L_1207959658.buf).length - 1)] == 10))) {
    failedAssertImpl_268435541([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1207959658.lineNumber = addInt(L_1207959658.lineNumber, 1);
    result_1207959660 = fillBaseLexer_1207959630(L_1207959658, pos_1207959659);
    L_1207959658.lineStart = result_1207959660;

  return result_1207959660;

}

function raiseEInvalidCsv_805306382(filename_805306383, line_805306384, col_805306385, msg_805306386) {
    var e_805306387 = null;
    e_805306387 = ({m_type: NTI805306373, parent: null, name: null, message: [], trace: [], up: null});
    if (((filename_805306383).length == 0)) {
    e_805306387.message = nimCopy(null, ([69,114,114,111,114,58,32] || []).concat(msg_805306386 || []), NTI33554449);
    }
    else {
      e_805306387.message = nimCopy(null, (filename_805306383 || []).concat([40] || [],HEX24_385875976(line_805306384) || [],[44,32] || [],HEX24_385875976(col_805306385) || [],[41,32,69,114,114,111,114,58,32] || [],msg_805306386 || []), NTI33554449);
    }
    
    raiseException(e_805306387, "CsvError");

  
}

function getColNumber_1207959715(L_1207959716, pos_1207959717) {
  var result_1207959718 = 0;

    result_1207959718 = absInt(subInt(pos_1207959717, L_1207959716.lineStart));

  return result_1207959718;

}

function error_805306427(self_805306428, pos_805306429, msg_805306430) {
    raiseEInvalidCsv_805306382(self_805306428.filename, self_805306428.lineNumber, getColNumber_1207959715(self_805306428, pos_805306429), msg_805306430);

  
}

function parseField_805306505(self_805306506, a_805306507, a_805306507_Idx) {
    var pos_805306508 = self_805306506.bufpos;
    if (self_805306506.skipWhite) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet3[self_805306506.buf[chckIndx(pos_805306508, 0, (self_805306506.buf).length - 1)]] != undefined)) break Label2;
          pos_805306508 = addInt(pos_805306508, 1);
        }
    };
    }
    
    if (a_805306507[a_805306507_Idx].length < 0) { for (var i = a_805306507[a_805306507_Idx].length; i < 0; ++i) a_805306507[a_805306507_Idx].push(0); }
         else {a_805306507[a_805306507_Idx].length = 0; };
    if (((self_805306506.buf[chckIndx(pos_805306508, 0, (self_805306506.buf).length - 1)] == self_805306506.quote) && !((self_805306506.quote == 0)))) {
    pos_805306508 = addInt(pos_805306508, 1);
    Label3: {
        Label4: while (true) {
        if (!true) break Label4;
          var c_805306523 = self_805306506.buf[chckIndx(pos_805306508, 0, (self_805306506.buf).length - 1)];
          if ((c_805306523 == 0)) {
          self_805306506.bufpos = pos_805306508;
          error_805306427(self_805306506, pos_805306508, [self_805306506.quote].concat([32,101,120,112,101,99,116,101,100] || []));
          break Label3;
          }
          else {
          if ((c_805306523 == self_805306506.quote)) {
          if (((self_805306506.esc == 0) && (self_805306506.buf[chckIndx(addInt(pos_805306508, 1), 0, (self_805306506.buf).length - 1)] == self_805306506.quote))) {
          addChar(a_805306507[a_805306507_Idx], self_805306506.quote);;
          pos_805306508 = addInt(pos_805306508, 2);
          }
          else {
            pos_805306508 = addInt(pos_805306508, 1);
            break Label3;
          }
          
          }
          else {
          if ((c_805306523 == self_805306506.esc)) {
          addChar(a_805306507[a_805306507_Idx], self_805306506.buf[chckIndx(addInt(pos_805306508, 1), 0, (self_805306506.buf).length - 1)]);;
          pos_805306508 = addInt(pos_805306508, 2);
          }
          else {
            switch (c_805306523) {
            case 13:
              pos_805306508 = handleCR_1207959643(self_805306506, pos_805306508);
              a_805306507[a_805306507_Idx].push.apply(a_805306507[a_805306507_Idx], [10]);;
              break;
            case 10:
              pos_805306508 = handleLF_1207959657(self_805306506, pos_805306508);
              a_805306507[a_805306507_Idx].push.apply(a_805306507[a_805306507_Idx], [10]);;
              break;
            default: 
              addChar(a_805306507[a_805306507_Idx], c_805306523);;
              pos_805306508 = addInt(pos_805306508, 1);
              break;
            }
          }
          }}
        }
    };
    }
    else {
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            var c_805306544 = self_805306506.buf[chckIndx(pos_805306508, 0, (self_805306506.buf).length - 1)];
            if ((c_805306544 == self_805306506.sep)) {
            break Label5;
            }
            
            if ((ConstSet4[c_805306544] != undefined)) {
            break Label5;
            }
            
            addChar(a_805306507[a_805306507_Idx], c_805306544);;
            pos_805306508 = addInt(pos_805306508, 1);
          }
      };
    }
    
    self_805306506.bufpos = pos_805306508;

  
}

function readRow_805306557(self_805306558, columns_805306559) {
          var Temporary5;

  var result_805306560 = false;

    var col_805306561 = 0;
    var oldpos_805306562 = self_805306558.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (self_805306558.buf[chckIndx(self_805306558.bufpos, 0, (self_805306558.buf).length - 1)]) {
          case 13:
            self_805306558.bufpos = handleCR_1207959643(self_805306558, self_805306558.bufpos);
            break;
          case 10:
            self_805306558.bufpos = handleLF_1207959657(self_805306558, self_805306558.bufpos);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    Label3: {
        Label4: while (true) {
        if (!!((self_805306558.buf[chckIndx(self_805306558.bufpos, 0, (self_805306558.buf).length - 1)] == 0))) break Label4;
          var oldlen_805306566 = (self_805306558.row).length;
          if ((oldlen_805306566 < addInt(col_805306561, 1))) {
          if (self_805306558.row.length < (Temporary5 = chckRange(addInt(col_805306561, 1), 0, 2147483647), Temporary5)) { for (var i = self_805306558.row.length ; i < Temporary5 ; ++i) self_805306558.row.push([]); }
               else { self_805306558.row.length = Temporary5; };
          self_805306558.row[chckIndx(col_805306561, 0, (self_805306558.row).length - 1)] = nimCopy(null, [], NTI33554449);
          }
          
          parseField_805306505(self_805306558, self_805306558.row, chckIndx(col_805306561, 0, (self_805306558.row).length - 1));
          col_805306561 = addInt(col_805306561, 1);
          if ((self_805306558.buf[chckIndx(self_805306558.bufpos, 0, (self_805306558.buf).length - 1)] == self_805306558.sep)) {
          self_805306558.bufpos = addInt(self_805306558.bufpos, 1);
          }
          else {
            switch (self_805306558.buf[chckIndx(self_805306558.bufpos, 0, (self_805306558.buf).length - 1)]) {
            case 13:
            case 10:
              Label6: {
                  Label7: while (true) {
                  if (!true) break Label7;
                    switch (self_805306558.buf[chckIndx(self_805306558.bufpos, 0, (self_805306558.buf).length - 1)]) {
                    case 13:
                      self_805306558.bufpos = handleCR_1207959643(self_805306558, self_805306558.bufpos);
                      break;
                    case 10:
                      self_805306558.bufpos = handleLF_1207959657(self_805306558, self_805306558.bufpos);
                      break;
                    default: 
                      break Label6;
                      break;
                    }
                  }
              };
              break;
            case 0:
              break;
            default: 
              error_805306427(self_805306558, self_805306558.bufpos, [self_805306558.sep].concat([32,101,120,112,101,99,116,101,100] || []));
              break;
            }
            break Label3;
          }
          
        }
    };
    if (self_805306558.row.length < chckRange(col_805306561, 0, 2147483647)) { for (var i = self_805306558.row.length ; i < chckRange(col_805306561, 0, 2147483647) ; ++i) self_805306558.row.push([]); }
               else { self_805306558.row.length = chckRange(col_805306561, 0, 2147483647); };
    result_805306560 = (0 < col_805306561);
    if (((result_805306560 && !((col_805306561 == columns_805306559))) && (0 < columns_805306559))) {
    error_805306427(self_805306558, addInt(oldpos_805306562, 1), (HEX24_385875976(columns_805306559) || []).concat([32,99,111,108,117,109,110,115,32,101,120,112,101,99,116,101,100,44,32,98,117,116,32,102,111,117,110,100,32] || [],HEX24_385875976(col_805306561) || [],[32,99,111,108,117,109,110,115] || []));
    }
    
    self_805306558.currRow = addInt(self_805306558.currRow, 1);

  return result_805306560;

}

function processedRows_805306554(self_805306555) {
  var result_805306556 = 0;

    result_805306556 = self_805306555.currRow;

  return result_805306556;

}

function HEX3DHEX3D_570425456(x_570425458, y_570425459) {
  var result_570425460 = false;

  BeforeRet: {
    var sameObject_570425467 = false;
    sameObject_570425467 = x_570425458 === y_570425459
    if (sameObject_570425467) {
    result_570425460 = true;
    break BeforeRet;
    }
    
    if (!(((x_570425458).length == (y_570425459).length))) {
    result_570425460 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_570425481 = 0;
      var colontmp__570425965 = 0;
      colontmp__570425965 = subInt((x_570425458).length, 1);
      var res_570425966 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570425966 <= colontmp__570425965)) break Label3;
            i_570425481 = res_570425966;
            if (!(eqStrings(x_570425458[chckIndx(i_570425481, 0, (x_570425458).length - 1)], y_570425459[chckIndx(i_570425481, 0, (y_570425459).length - 1)]))) {
            result_570425460 = false;
            break BeforeRet;
            }
            
            res_570425966 = addInt(res_570425966, 1);
          }
      };
    };
    result_570425460 = true;
    break BeforeRet;
  };

  return result_570425460;

}

function HEX5BHEX5D_570425436(s_570425440, x_570425441) {
  var result_570425442 = [];

    var a_570425444 = x_570425441.a;
    var L_570425446 = addInt(subInt(x_570425441.b, a_570425444), 1);
    result_570425442 = new Array(chckRange(L_570425446, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_570425446, 0, 2147483647) ; ++i) { result_570425442[i] = []; }    Label1: {
      var i_570425455 = 0;
      var i_570425969 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425969 < L_570425446)) break Label3;
            i_570425455 = i_570425969;
            result_570425442[chckIndx(i_570425455, 0, (result_570425442).length - 1)] = nimCopy(null, s_570425440[chckIndx(addInt(i_570425455, a_570425444), 0, (s_570425440).length - 1)], NTI33554449);
            i_570425969 = addInt(i_570425969, 1);
          }
      };
    };

  return result_570425442;

}

function outputAndRaise_570425361(error_570425362) {
    document.getElementById("showcontent").innerHTML = toJSStr(([60,98,62,70,101,108,32,118,105,100,32,105,110,108,195,164,115,110,105,110,103,32,97,118,32,102,105,108,101,110,58,32,60,47,98,62] || []).concat(error_570425362 || []));
    raiseException({message: nimCopy(null, error_570425362, NTI33554449), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function addEscapedChar_33558024(s_33558025, s_33558025_Idx, c_33558026) {
    switch (c_33558026) {
    case 7:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,97]);;
      break;
    case 8:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,98]);;
      break;
    case 9:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,116]);;
      break;
    case 10:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,110]);;
      break;
    case 11:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,118]);;
      break;
    case 12:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,102]);;
      break;
    case 13:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,114]);;
      break;
    case 27:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,101]);;
      break;
    case 92:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,92]);;
      break;
    case 39:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,39]);;
      break;
    case 34:
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33558025[s_33558025_Idx], c_33558026);;
      break;
    default: 
      s_33558025[s_33558025_Idx].push.apply(s_33558025[s_33558025_Idx], [92,120]);;
      var n_33558036 = c_33558026;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33558036 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33558025[s_33558025_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33558036 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_570425504(s_570425506, s_570425506_Idx, x_570425507) {
    s_570425506[s_570425506_Idx].push.apply(s_570425506[s_570425506_Idx], [34]);;
    Label1: {
      var c_570425508 = 0;
      var i_570425977 = 0;
      var L_570425978 = (x_570425507).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425977 < L_570425978)) break Label3;
            c_570425508 = x_570425507[chckIndx(i_570425977, 0, (x_570425507).length - 1)];
            if ((c_570425508 <= 127)) {
            addEscapedChar_33558024(s_570425506, s_570425506_Idx, c_570425508);
            }
            else {
            addChar(s_570425506[s_570425506_Idx], c_570425508);;
            }
            
            i_570425977 += 1;
            if (!(((x_570425507).length == L_570425978))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_570425506[s_570425506_Idx].push.apply(s_570425506[s_570425506_Idx], [34]);;

  
}

function collectionToString_570425489(x_570425491, prefix_570425492, separator_570425493, suffix_570425494) {
  var result_570425495 = [[]];

    result_570425495[0] = nimCopy(null, prefix_570425492, NTI33554449);
    var firstElement_570425496 = true;
    Label1: {
      var value_570425500 = [];
      var i_570425972 = 0;
      var L_570425973 = (x_570425491).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425972 < L_570425973)) break Label3;
            value_570425500 = x_570425491[i_570425972];
            if (firstElement_570425496) {
            firstElement_570425496 = false;
            }
            else {
            result_570425495[0].push.apply(result_570425495[0], separator_570425493);;
            }
            
            addQuoted_570425504(result_570425495, 0, value_570425500);
            i_570425972 += 1;
            if (!(((x_570425491).length == L_570425973))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570425495[0].push.apply(result_570425495[0], suffix_570425494);;

  return result_570425495[0];

}

function HEX24_570425485(x_570425487) {
  var result_570425488 = [];

    result_570425488 = nimCopy(null, collectionToString_570425489(x_570425487, [64,91], [44,32], [93]), NTI33554449);

  return result_570425488;

}

function substrEq_704643327(s_704643328, pos_704643329, substr_704643330) {
    var Temporary1;

  var result_704643331 = false;

    var length_704643332 = (substr_704643330).length;
    if ((0 < length_704643332)) {
    var i_704643333 = 0;
    Label2: {
        Label3: while (true) {
        if (!(((i_704643333 < length_704643332) && (addInt(pos_704643329, i_704643333) < (s_704643328).length)) && (s_704643328[chckIndx(addInt(pos_704643329, i_704643333), 0, (s_704643328).length - 1)] == substr_704643330[chckIndx(i_704643333, 0, (substr_704643330).length - 1)]))) break Label3;
          i_704643333 = addInt(i_704643333, 1);
        }
    };
    Temporary1 = (i_704643333 == length_704643332);
    }
    else {
    Temporary1 = false;
    }
    
    result_704643331 = Temporary1;

  return result_704643331;

}

function nsuSplitString(s_704643647, sep_704643648, maxsplit_704643649) {
      var Temporary2;

  var result_704643650 = [];

    result_704643650 = nimCopy(null, [], NTI704643478);
    Label1: {
      var xHEX60gensym69_704643656 = [];
      if (((sep_704643648).length == 0)) {
      Temporary2 = 1;
      }
      else {
      Temporary2 = (sep_704643648).length;
      }
      
      var sepLen_570425983 = Temporary2;
      var lastHEX60gensym41_570425984 = 0;
      var splitsHEX60gensym41_570425985 = maxsplit_704643649;
      Label3: {
          Label4: while (true) {
          if (!(lastHEX60gensym41_570425984 <= (s_704643647).length)) break Label4;
            var firstHEX60gensym41_570425987 = lastHEX60gensym41_570425984;
            Label5: {
                Label6: while (true) {
                if (!((lastHEX60gensym41_570425984 < (s_704643647).length) && !(substrEq_704643327(s_704643647, lastHEX60gensym41_570425984, sep_704643648)))) break Label6;
                  lastHEX60gensym41_570425984 = addInt(lastHEX60gensym41_570425984, 1);
                }
            };
            if ((splitsHEX60gensym41_570425985 == 0)) {
            lastHEX60gensym41_570425984 = (s_704643647).length;
            }
            
            xHEX60gensym69_704643656 = substr_33558084(s_704643647, firstHEX60gensym41_570425987, subInt(lastHEX60gensym41_570425984, 1));
            var Temporary7 = nimCopy(null, xHEX60gensym69_704643656, NTI33554449);
            result_704643650.push(Temporary7);;
            if ((splitsHEX60gensym41_570425985 == 0)) {
            break Label3;
            }
            
            splitsHEX60gensym41_570425985 = subInt(splitsHEX60gensym41_570425985, 1);
            lastHEX60gensym41_570425984 = addInt(lastHEX60gensym41_570425984, sepLen_570425983);
          }
      };
    };

  return result_704643650;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_822083909() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_822083947(s_822083948, b_822083949, b_822083949_Idx) {
      var Temporary1;
          var Temporary4;

  var result_822083950 = 0;

    var sign_822083951 = (-1n);
    var i_822083952 = 0;
    if ((i_822083952 < (s_822083948).length)) {
    if ((s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 43)) {
    i_822083952 += 1;
    }
    else {
    if ((s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 45)) {
    i_822083952 += 1;
    sign_822083951 = 1n;
    }
    }
    }
    
      if (!(i_822083952 < (s_822083948).length)) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)]] != undefined);      }    if (Temporary1) {
    b_822083949[b_822083949_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_822083952 < (s_822083948).length)) Temporary4 = false; else {            Temporary4 = (ConstSet6[s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_822083986 = (s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_822083986)) / 10n <= b_822083949[b_822083949_Idx])) {
          b_822083949[b_822083949_Idx] = ((b_822083949[b_822083949_Idx] * 10n) - BigInt(c_822083986));
          }
          else {
          integerOutOfRangeError_822083909();
          }
          
          i_822083952 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_822083952 < (s_822083948).length) && (s_822083948[chckIndx(i_822083952, 0, (s_822083948).length - 1)] == 95))) break Label6;
                i_822083952 += 1;
              }
          };
        }
    };
    if (((sign_822083951 == (-1n)) && (b_822083949[b_822083949_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_822083909();
    }
    else {
      b_822083949[b_822083949_Idx] = (b_822083949[b_822083949_Idx] * sign_822083951);
      result_822083950 = i_822083952;
    }
    
    }
    

  return result_822083950;

}

function npuParseBiggestInt(s_822084009, number_822084010, number_822084010_Idx) {
  var result_822084011 = 0;

    var res_822084012 = [0n];
    result_822084011 = rawParseInt_822083947(s_822084009, res_822084012, 0);
    if (!((result_822084011 == 0))) {
    number_822084010[number_822084010_Idx] = res_822084012[0];
    }
    

  return result_822084011;

}

function npuParseInt(s_822084014, number_822084015, number_822084015_Idx) {
  var result_822084016 = 0;

    var res_822084017 = [0n];
    result_822084016 = npuParseBiggestInt(s_822084014, res_822084017, 0);
    if (((res_822084017[0] < (-2147483648n)) || (2147483647n < res_822084017[0]))) {
    integerOutOfRangeError_822083909();
    }
    
    if (!((result_822084016 == 0))) {
    number_822084015[number_822084015_Idx] = chckRange(Number(res_822084017[0]), (-2147483648), 2147483647);
    }
    

  return result_822084016;

}

function parseInt_822084527(s_822084528, number_822084529, number_822084529_Idx, start_822084530) {
  var result_822084531 = 0;

    result_822084531 = npuParseInt((s_822084528.slice(start_822084530, (s_822084528).length - 1 + 1)), number_822084529, number_822084529_Idx);

  return result_822084531;

}

function nsuParseInt(s_704643929) {
  var result_704643930 = [0];

    result_704643930[0] = 0;
    var L_704643931 = parseInt_822084527(s_704643929, result_704643930, 0, 0);
    if ((!((L_704643931 == (s_704643929).length)) || (L_704643931 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_704643929 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643930[0];

}

function close_788529209(s_788529210) {
    if ((!((s_788529210 == null)) && !((s_788529210.closeImpl == null)))) {
    s_788529210.closeImpl(s_788529210);
    }
    

  
}

function close_1207959566(L_1207959567) {
    close_788529209(L_1207959567.input);

  
}

function close_805306590(self_805306591) {
    close_1207959566(self_805306591);

  
}

function parseRackFile_570425412(contents_570425413, filename_570425414) {
  var result_570425415 = [[[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []]];

    var stream_570425416 = newStringStream_788530280(contents_570425413);
    var dataRows_570425417 = false;
    var parser_570425418 = [({m_type: NTI805306372, row: [], filename: [], sep: 0, quote: 0, esc: 0, skipWhite: false, currRow: 0, headers: [], bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
    open_805306485(parser_570425418[0], stream_570425416, filename_570425414, 59, 34, 0, false);
    try {
    Label2: {
        Label3: while (true) {
        if (!readRow_805306557(parser_570425418[0], 0)) break Label3;
          Label4: {
            if (            processedRows_805306554(parser_570425418[0]) == 1            ){              if (((2 < (parser_570425418[0].row).length) && !(HEX3DHEX3D_570425456(HEX5BHEX5D_570425436(parser_570425418[0].row, HEX2EHEX2E_1124073520(0, 2)), expectedFormat_570425423)))) {
              outputAndRaise_570425361(makeNimstrLit("ok\xC3\xA4nt filformat: f\xC3\xB6rsta raden f\xC3\xB6rv\xC3\xA4ntas vara \"FileType\";\"RackFile\";\"2\""));
              }
              
              }
            else{
              if (!(dataRows_570425417)) {
              if (eqStrings(parser_570425418[0].row[chckIndx(0, 0, (parser_570425418[0].row).length - 1)], [83,97,109,112,108,101,73,68])) {
              dataRows_570425417 = true;
              }
              
              break Label4;
              }
              
              if (!(((parser_570425418[0].row).length == 13))) {
              outputAndRaise_570425361(([102,101,108,32,97,110,116,97,108,32,102,195,164,108,116,32,112,195,165,32,114,97,100,32] || []).concat(HEX24_570425485(parser_570425418[0].row) || [],[58,32] || [],HEX24_385875976((parser_570425418[0].row).length) || []));
              }
              
              var sampleId_570425512 = nimCopy(null, parser_570425418[0].row[chckIndx(0, 0, (parser_570425418[0].row).length - 1)], NTI33554449);
              if (((sampleId_570425512).length == 0)) {
              break Label4;
              }
              
              var position_570425513 = nsuSplitString(parser_570425418[0].row[chckIndx(2, 0, (parser_570425418[0].row).length - 1)], [58], (-1));
              var row_570425514 = chckRange(position_570425513[chckIndx(0, 0, (position_570425513).length - 1)][chckIndx(0, 0, (position_570425513[chckIndx(0, 0, (position_570425513).length - 1)]).length - 1)], 65, 72);
              var col_570425515 = chckRange(nsuParseInt(position_570425513[chckIndx(1, 0, (position_570425513).length - 1)]), 1, 12);
              result_570425415[chckIndx(row_570425514, 65, (result_570425415).length + (65) - 1) - (65)][chckIndx(col_570425515, 1, (result_570425415[chckIndx(row_570425514, 65, (result_570425415).length + (65) - 1) - (65)]).length + (1) - 1) - (1)] = nimCopy(null, sampleId_570425512, NTI33554449);
              }
          };
        }
    };
    } finally {
    close_805306590(parser_570425418[0]);
    }

  return result_570425415;

}

function nsuFindChar(s_704644771, sub_704644772, start_704644773, last_704644774) {
    var Temporary1;

  var result_704644775 = 0;

  BeforeRet: {
    result_704644775 = (-1);
    if ((last_704644774 < 0)) {
    Temporary1 = (s_704644771).length - 1;
    }
    else {
    Temporary1 = last_704644774;
    }
    
    var last_704644776 = Temporary1;
    Label2: {
      var iHEX60gensym176_704644790 = 0;
      var colontmp__570425999 = 0;
      colontmp__570425999 = start_704644773;
      var res_570426000 = colontmp__570425999;
      Label3: {
          Label4: while (true) {
          if (!(res_570426000 <= last_704644776)) break Label4;
            iHEX60gensym176_704644790 = res_570426000;
            if ((s_704644771[chckIndx(iHEX60gensym176_704644790, 0, (s_704644771).length - 1)] == sub_704644772)) {
            result_704644775 = iHEX60gensym176_704644790;
            break BeforeRet;
            }
            
            res_570426000 = addInt(res_570426000, 1);
          }
      };
    };
  };

  return result_704644775;

}

function substr_33558096(s_33558097, first_33558098) {
  var result_33558099 = [];

    result_33558099 = nimCopy(null, substr_33558084(s_33558097, first_33558098, (s_33558097).length - 1), NTI33554449);

  return result_33558099;

}

function fill_704644694(a_704644696, value_704644697) {
    var xHEX60gensym172_704644703 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_704644703 <= (a_704644696).length - 1)) break Label2;
          a_704644696[chckIndx(xHEX60gensym172_704644703, 0, (a_704644696).length - 1)] = value_704644697;
          xHEX60gensym172_704644703 = addInt(xHEX60gensym172_704644703, 1);
        }
    };

  
}

function nsuInitSkipTable(a_704644691, sub_704644692) {
    var m_704644693 = (sub_704644692).length;
    fill_704644694(a_704644691, m_704644693);
    Label1: {
      var i_704644713 = 0;
      var colontmp__570426003 = 0;
      colontmp__570426003 = subInt(m_704644693, 1);
      var i_570426004 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426004 < colontmp__570426003)) break Label3;
            i_704644713 = i_570426004;
            a_704644691[chckIndx(sub_704644692[chckIndx(i_704644713, 0, (sub_704644692).length - 1)], 0, (a_704644691).length - 1)] = subInt(subInt(m_704644693, 1), i_704644713);
            i_570426004 = addInt(i_570426004, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_704644746) {
  var result_704644747 = [new Int32Array(256)];

    nsuInitSkipTable(result_704644747[0], sub_704644746);

  return result_704644747[0];

}

function nsuFindStrA(a_704644749, s_704644750, sub_704644751, start_704644752, last_704644753) {
    var Temporary1;

  var result_704644754 = 0;

  BeforeRet: {
    if ((last_704644753 < 0)) {
    Temporary1 = (s_704644750).length - 1;
    }
    else {
    Temporary1 = last_704644753;
    }
    
    var last_704644755 = Temporary1;
    var subLast_704644756 = subInt((sub_704644751).length, 1);
    if ((subLast_704644756 == (-1))) {
    result_704644754 = start_704644752;
    break BeforeRet;
    }
    
    result_704644754 = (-1);
    var skip_704644757 = start_704644752;
    Label2: {
        Label3: while (true) {
        if (!(subLast_704644756 <= subInt(last_704644755, skip_704644757))) break Label3;
          var i_704644758 = subLast_704644756;
          Label4: {
              Label5: while (true) {
              if (!(s_704644750[chckIndx(addInt(skip_704644757, i_704644758), 0, (s_704644750).length - 1)] == sub_704644751[chckIndx(i_704644758, 0, (sub_704644751).length - 1)])) break Label5;
                if ((i_704644758 == 0)) {
                result_704644754 = skip_704644757;
                break BeforeRet;
                }
                
                i_704644758 = subInt(i_704644758, 1);
              }
          };
          skip_704644757 = addInt(skip_704644757, a_704644749[chckIndx(s_704644750[chckIndx(addInt(skip_704644757, subLast_704644756), 0, (s_704644750).length - 1)], 0, (a_704644749).length - 1)]);
        }
    };
  };

  return result_704644754;

}

function nsuReplaceStr(s_704644959, sub_704644960, by_704644961) {
  var result_704644962 = [];

    result_704644962 = nimCopy(null, [], NTI33554449);
    var subLen_704644963 = (sub_704644960).length;
    if ((subLen_704644963 == 0)) {
    result_704644962 = nimCopy(null, s_704644959, NTI33554449);
    }
    else {
    if ((subLen_704644963 == 1)) {
    var c_704644964 = sub_704644960[chckIndx(0, 0, (sub_704644960).length - 1)];
    var last_704644965 = (s_704644959).length - 1;
    var i_704644966 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_704644967 = nsuFindChar(s_704644959, c_704644964, chckRange(i_704644966, 0, 2147483647), last_704644965);
          if ((j_704644967 < 0)) {
          break Label1;
          }
          
          result_704644962.push.apply(result_704644962, substr_33558084(s_704644959, i_704644966, subInt(j_704644967, 1)));;
          result_704644962.push.apply(result_704644962, by_704644961);;
          i_704644966 = addInt(j_704644967, subLen_704644963);
        }
    };
    result_704644962.push.apply(result_704644962, substr_33558096(s_704644959, i_704644966));;
    }
    else {
      var a_704644968 = nsuInitNewSkipTable(sub_704644960);
      var last_704644969 = (s_704644959).length - 1;
      var i_704644970 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_704644971 = nsuFindStrA(a_704644968, s_704644959, sub_704644960, chckRange(i_704644970, 0, 2147483647), last_704644969);
            if ((j_704644971 < 0)) {
            break Label3;
            }
            
            result_704644962.push.apply(result_704644962, substr_33558084(s_704644959, i_704644970, subInt(j_704644971, 1)));;
            result_704644962.push.apply(result_704644962, by_704644961);;
            i_704644970 = addInt(j_704644971, subLen_704644963);
          }
      };
      result_704644962.push.apply(result_704644962, substr_33558096(s_704644959, i_704644970));;
    }
    }

  return result_704644962;

}

function plateSample_570425586(sample_570425587, position_570425588, color_570425589) {
  var result_570425590 = [];

    var gapdhLine_570425599 = [nimCopy(null, position_570425588, NTI33554449), nimCopy(null, sample_570425587, NTI33554449), nimCopy(null, color_570425589, NTI33554449), [], [], [71,65,80,68,72], [34,82,71,66,40,50,48,56,44,50,52,51,44,57,56,41,34], [85,78,75,78,79,87,78], [86,73,67], [78,70,81,45,77,71,66], [], []];
    var rhdLine_570425600 = [nimCopy(null, position_570425588, NTI33554449), nimCopy(null, sample_570425587, NTI33554449), nimCopy(null, color_570425589, NTI33554449), [], [], [82,72,68], [34,82,71,66,40,49,51,57,44,49,56,57,44,50,52,57,41,34], [85,78,75,78,79,87,78], [70,65,77], [78,70,81,45,77,71,66], [], []];
    result_570425590 = nimCopy(null, (nsuJoinSep(gapdhLine_570425599, [9]) || []).concat([10] || [],nsuJoinSep(rhdLine_570425600, [9]) || [],[10] || []), NTI33554449);

  return result_570425590;

}

function toPlateSetup_570425618(plate_570425619) {
  var result_570425620 = [];

    result_570425620 = nimCopy(null, makeNimstrLit("* Block Type = 96alum\x0A* Chemistry = TAQMAN\x0A* Experiment File Name = D:\\Users\\INSTR-USER\\Desktop\\Devyser RHD template 7500 v2_3 20200831.edt\x0A* Experiment Run End Time = Not Started\x0A* Instrument Type = sds7500\x0A* Passive Reference = ROX\x0A\x0A[Sample Setup]\x0AWell\x09Sample Name\x09Sample Color\x09Biogroup Name\x09Biogroup Color\x09Target Name\x09Target Color\x09Task\x09Reporter\x09Quencher\x09Quantity\x09Comments\x0A"), NTI33554449);
    var lastSampleId_570425621 = [];
    var colorId_570425622 = 0;
    Label1: {
      var row_570425642 = 0;
      var res_570426015 = 65;
      Label2: {
          Label3: while (true) {
          if (!(res_570426015 <= 72)) break Label3;
            row_570425642 = res_570426015;
            Label4: {
              var col_570425662 = 0;
              var res_570426012 = 1;
              Label5: {
                  Label6: while (true) {
                  if (!(res_570426012 <= 12)) break Label6;
                    col_570425662 = res_570426012;
                    var sample_570425663 = nimCopy(null, plate_570425619[chckIndx(row_570425642, 65, (plate_570425619).length + (65) - 1) - (65)][chckIndx(col_570425662, 1, (plate_570425619[chckIndx(row_570425642, 65, (plate_570425619).length + (65) - 1) - (65)]).length + (1) - 1) - (1)], NTI33554449);
                    var pos_570425664 = (nimCharToStr(row_570425642) || []).concat(HEX24_385875976(col_570425662) || []);
                    if (!(eqStrings(sample_570425663, lastSampleId_570425621))) {
                    colorId_570425622 = modInt(addInt(colorId_570425622, 1), 9);
                    lastSampleId_570425621 = nimCopy(null, sample_570425663, NTI33554449);
                    }
                    
                    var samplecolor_570425672 = nimCopy(null, colors_570425617[chckIndx(colorId_570425622, 0, (colors_570425617).length - 1)], NTI33554449);
                    result_570425620.push.apply(result_570425620, plateSample_570425586(sample_570425663, pos_570425664, samplecolor_570425672));;
                    res_570426012 = addInt(res_570426012, 1);
                  }
              };
            };
            res_570426015 = addInt(res_570426015, 1);
          }
      };
    };

  return result_570425620;

}

function encode_721420330(s_721420332, safe_721420333) {
    var Temporary1;
      var Temporary4;

  var result_721420334 = [];

    if (safe_721420333) {
    if (result_721420334.length < (Temporary1 = chckRange(addInt(divInt(mulInt((s_721420332).length, 4), 3), 6), 0, 2147483647), Temporary1)) { for (var i = result_721420334.length; i < Temporary1; ++i) result_721420334.push(0); }
         else {result_721420334.length = Temporary1; };
    var paddingHEX60gensym4_721420350 = modInt((s_721420332).length, 3);
    var inputEndsHEX60gensym4_721420354 = subInt((s_721420332).length, paddingHEX60gensym4_721420350);
    var inputIndexHEX60gensym4_721420355 = 0;
    var outputIndexHEX60gensym4_721420356 = 0;
    var nHEX60gensym4_721420357 = 0;
    var bHEX60gensym4_721420358 = 0;
    Label2: {
        Label3: while (true) {
        if (!!((inputIndexHEX60gensym4_721420355 == inputEndsHEX60gensym4_721420354))) break Label3;
          bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
          nHEX60gensym4_721420357 = ((bHEX60gensym4_721420358 << 16) >>> 0);
          inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
          bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
          nHEX60gensym4_721420357 = ((nHEX60gensym4_721420357 | ((bHEX60gensym4_721420358 << 8) >>> 0)) >>> 0);
          inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
          bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
          nHEX60gensym4_721420357 = ((nHEX60gensym4_721420357 | ((bHEX60gensym4_721420358 << 0) >>> 0)) >>> 0);
          inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
          result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 18) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
          outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
          result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 12) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
          outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
          result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 6) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
          outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
          result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 0) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
          outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
        }
    };
    if ((paddingHEX60gensym4_721420350 == 1)) {
    bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
    nHEX60gensym4_721420357 = ((bHEX60gensym4_721420358 << 16) >>> 0);
    inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 18) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 12) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = 61;
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = 61;
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    }
    else {
    if ((paddingHEX60gensym4_721420350 == 2)) {
    bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
    nHEX60gensym4_721420357 = ((bHEX60gensym4_721420358 << 16) >>> 0);
    inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
    bHEX60gensym4_721420358 = s_721420332[chckIndx(inputIndexHEX60gensym4_721420355, 0, (s_721420332).length - 1)];
    nHEX60gensym4_721420357 = ((nHEX60gensym4_721420357 | ((bHEX60gensym4_721420358 << 8) >>> 0)) >>> 0);
    inputIndexHEX60gensym4_721420355 = addInt(inputIndexHEX60gensym4_721420355, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 18) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 12) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = cb64safe_721420293[chckIndx((((nHEX60gensym4_721420357 >>> 6) & 63) >>> 0), 0, (cb64safe_721420293).length - 1)];
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    result_721420334[chckIndx(outputIndexHEX60gensym4_721420356, 0, (result_721420334).length - 1)] = 61;
    outputIndexHEX60gensym4_721420356 = addInt(outputIndexHEX60gensym4_721420356, 1);
    }
    }
    if (result_721420334.length < chckRange(outputIndexHEX60gensym4_721420356, 0, 2147483647)) { for (var i = result_721420334.length; i < chckRange(outputIndexHEX60gensym4_721420356, 0, 2147483647); ++i) result_721420334.push(0); }
         else {result_721420334.length = chckRange(outputIndexHEX60gensym4_721420356, 0, 2147483647); };
    }
    else {
      if (result_721420334.length < (Temporary4 = chckRange(addInt(divInt(mulInt((s_721420332).length, 4), 3), 6), 0, 2147483647), Temporary4)) { for (var i = result_721420334.length; i < Temporary4; ++i) result_721420334.push(0); }
         else {result_721420334.length = Temporary4; };
      var paddingHEX60gensym37_721420530 = modInt((s_721420332).length, 3);
      var inputEndsHEX60gensym37_721420534 = subInt((s_721420332).length, paddingHEX60gensym37_721420530);
      var inputIndexHEX60gensym37_721420535 = 0;
      var outputIndexHEX60gensym37_721420536 = 0;
      var nHEX60gensym37_721420537 = 0;
      var bHEX60gensym37_721420538 = 0;
      Label5: {
          Label6: while (true) {
          if (!!((inputIndexHEX60gensym37_721420535 == inputEndsHEX60gensym37_721420534))) break Label6;
            bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
            nHEX60gensym37_721420537 = ((bHEX60gensym37_721420538 << 16) >>> 0);
            inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
            bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
            nHEX60gensym37_721420537 = ((nHEX60gensym37_721420537 | ((bHEX60gensym37_721420538 << 8) >>> 0)) >>> 0);
            inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
            bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
            nHEX60gensym37_721420537 = ((nHEX60gensym37_721420537 | ((bHEX60gensym37_721420538 << 0) >>> 0)) >>> 0);
            inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
            result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 18) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
            outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
            result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 12) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
            outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
            result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 6) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
            outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
            result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 0) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
            outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
          }
      };
      if ((paddingHEX60gensym37_721420530 == 1)) {
      bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
      nHEX60gensym37_721420537 = ((bHEX60gensym37_721420538 << 16) >>> 0);
      inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 18) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 12) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = 61;
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = 61;
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      }
      else {
      if ((paddingHEX60gensym37_721420530 == 2)) {
      bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
      nHEX60gensym37_721420537 = ((bHEX60gensym37_721420538 << 16) >>> 0);
      inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
      bHEX60gensym37_721420538 = s_721420332[chckIndx(inputIndexHEX60gensym37_721420535, 0, (s_721420332).length - 1)];
      nHEX60gensym37_721420537 = ((nHEX60gensym37_721420537 | ((bHEX60gensym37_721420538 << 8) >>> 0)) >>> 0);
      inputIndexHEX60gensym37_721420535 = addInt(inputIndexHEX60gensym37_721420535, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 18) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 12) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = cb64_721420292[chckIndx((((nHEX60gensym37_721420537 >>> 6) & 63) >>> 0), 0, (cb64_721420292).length - 1)];
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      result_721420334[chckIndx(outputIndexHEX60gensym37_721420536, 0, (result_721420334).length - 1)] = 61;
      outputIndexHEX60gensym37_721420536 = addInt(outputIndexHEX60gensym37_721420536, 1);
      }
      }
      if (result_721420334.length < chckRange(outputIndexHEX60gensym37_721420536, 0, 2147483647)) { for (var i = result_721420334.length; i < chckRange(outputIndexHEX60gensym37_721420536, 0, 2147483647); ++i) result_721420334.push(0); }
         else {result_721420334.length = chckRange(outputIndexHEX60gensym37_721420536, 0, 2147483647); };
    }
    

  return result_721420334;

}

function toDataUrl_570425548(contents_570425549) {
  var result_570425550 = [];

    result_570425550 = nimCopy(null, ([100,97,116,97,58,116,101,120,116,47,112,108,97,105,110,59,98,97,115,101,54,52,44] || []).concat(encode_721420330(contents_570425549, false) || []), NTI33554449);

  return result_570425550;

}

function columnIndex_570425673() {
  var result_570425674 = [];

    var colIndex_570425675 = [60,116,100,62,60,47,116,100,62];
    Label1: {
      var col_570425688 = 0;
      var res_570426028 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570426028 <= 12)) break Label3;
            col_570425688 = res_570426028;
            colIndex_570425675.push.apply(colIndex_570425675, ([60,116,100,62,60,115,109,97,108,108,62] || []).concat(HEX24_385875976(col_570425688) || [],[60,47,115,109,97,108,108,62,60,47,116,100,62] || []));;
            res_570426028 = addInt(res_570426028, 1);
          }
      };
    };
    result_570425674 = nimCopy(null, ([60,116,114,62] || []).concat(colIndex_570425675 || [],[60,47,116,114,62] || []), NTI33554449);

  return result_570425674;

}

function plateToTable_570425689(plate_570425690) {
  var result_570425691 = [];

    var rows_570425692 = columnIndex_570425673();
    Label1: {
      var row_570425705 = 0;
      var res_570426025 = 65;
      Label2: {
          Label3: while (true) {
          if (!(res_570426025 <= 72)) break Label3;
            row_570425705 = res_570426025;
            var rowData_570425706 = ([60,116,100,62,60,115,109,97,108,108,62] || []).concat([row_570425705],[60,47,115,109,97,108,108,62,60,47,116,100,62] || []);
            Label4: {
              var sample_570425733 = [];
              var colontmp__570426021 = [[], [], [], [], [], [], [], [], [], [], [], []];
              colontmp__570426021 = nimCopy(colontmp__570426021, plate_570425690[chckIndx(row_570425705, 65, (plate_570425690).length + (65) - 1) - (65)], NTI570425369);
              var i_570426023 = 1;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    sample_570425733 = colontmp__570426021[chckIndx(i_570426023, 1, (colontmp__570426021).length + (1) - 1) - (1)];
                    rowData_570425706.push.apply(rowData_570425706, ([60,116,100,62,60,115,109,97,108,108,62] || []).concat(sample_570425733 || [],[60,47,115,109,97,108,108,62,60,47,116,100,62] || []));;
                    if ((12 <= i_570426023)) {
                    break Label5;
                    }
                    
                    i_570426023 += 1;
                  }
              };
            };
            rows_570425692.push.apply(rows_570425692, ([60,116,114,62] || []).concat(rowData_570425706 || [],[60,47,116,114,62] || []));;
            res_570426025 = addInt(res_570426025, 1);
          }
      };
    };
    result_570425691 = nimCopy(null, ([60,116,97,98,108,101,62] || []).concat(rows_570425692 || [],[60,47,116,97,98,108,101,62] || []), NTI33554449);

  return result_570425691;

}

function htmlResult_570425750(contents_570425751, filename_570425752) {
  var result_570425753 = null;

    var linkText_570425754 = linkFileName_570425556(filename_570425752);
    var plate_570425755 = parseRackFile_570425412(contents_570425751, filename_570425752);
    var plateSetup_570425756 = nsuReplaceStr(toPlateSetup_570425618(plate_570425755), [10], [13,10]);
    var dataUrl_570425757 = toDataUrl_570425548(plateSetup_570425756);
    var s_570425758 = [60,104,51,62,76,195,164,110,107,32,116,105,108,108,32,107,111,110,118,101,114,116,101,114,97,100,32,102,105,108,60,47,104,51,62];
    s_570425758.push.apply(s_570425758, ([60,112,62,60,97,32,104,114,101,102,61,34] || []).concat(dataUrl_570425757 || [],[34,32,100,111,119,110,108,111,97,100,61,34] || [],linkText_570425754 || [],[34,62] || [],linkText_570425754 || [],[60,47,97,62,60,47,112,62] || []));;
    s_570425758.push.apply(s_570425758, ([60,112,62,60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62,86,105,115,97,32,102,105,108,101,110,115,32,105,110,110,101,104,195,165,108,108,60,47,115,117,109,109,97,114,121,62,60,112,114,101,62,60,99,111,100,101,62] || []).concat(plateSetup_570425756 || [],[60,47,99,111,100,101,62,60,47,112,114,101,62,60,47,100,101,116,97,105,108,115,62,60,47,112,62] || []));;
    s_570425758.push.apply(s_570425758, ([60,112,62,60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62,86,105,115,97,32,112,108,97,116,116,97,60,47,115,117,109,109,97,114,121,62] || []).concat(plateToTable_570425689(plate_570425755) || [],[60,47,100,101,116,97,105,108,115,62,60,47,112,62] || []));;
    result_570425753 = toJSStr(s_570425758);

  return result_570425753;

}

function parseAndOutput_570425789(c_570425790, file_570425791) {
    document.getElementById("showcontent").innerHTML = htmlResult_570425750(c_570425790, file_570425791);

  
}

function fileLoaded() {
    
function HEX3Aanonymous_570425800(ev_570425801) {
        parseAndOutput_570425789(cstrToNimstr(reader_570425799.result), cstrToNimstr(file_570425798.name));

      
    }

  BeforeRet: {
    var fileInput_570425793 = document.getElementById("fileInput");
    if (((fileInput_570425793.files).length == 0)) {
    break BeforeRet;
    }
    
    var file_570425798 = fileInput_570425793.files[chckIndx(0, 0, (fileInput_570425793.files).length - 1)];
    var reader_570425799 = new FileReader();
    reader_570425799.addEventListener("load", HEX3Aanonymous_570425800, false);
    reader_570425799.readAsText(file_570425798, "UTF-8");
  };

  
}
rawEcho([71,101,110,101,114,97,116,101,100,32,102,114,111,109,32,103,105,116,32,99,111,109,109,105,116,32], [50,55,48,98,50,56,99,48,51,54,50,102,54,99,55,54,102,51,54,57,49,50,101,98,48,102,56,97,53,52,102,102,53,50,99,49,48,55,50,53], [32,99,111,109,112,105,108,101,100,32], [50,48,50,53,45,49,48,45,48,57]);
