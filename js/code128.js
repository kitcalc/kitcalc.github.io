/* Generated by the Nim Compiler v2.0.8 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI704644432 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI704643591 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425350 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI570425356 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425347 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570425348 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI771752005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425360 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI570425349 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI570425349.base = NTI570425360;
var NNI771752005 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI771752005.node = NNI771752005;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI570425347 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI570425347, name: "stateA", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425347, name: "stateB", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425347, name: "stateC", len: 0, sons: null}}};
NTI570425347.node = NNI570425347;
NTI570425356.base = NTI570425349;
var NNI570425348 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "s", len: 0, typ: NTI33554449, name: "s", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI570425347, name: "state", sons: null}, 
{kind: 1, offset: "bar", len: 0, typ: NTI570425356, name: "bar", sons: null}, 
{kind: 1, offset: "i", len: 0, typ: NTI33554435, name: "i", sons: null}]};
NTI570425348.node = NNI570425348;
NTI570425350.base = NTI33554435;
NTI704643591.base = NTI33554449;
NTI704644432.base = NTI33554448;

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr([0, 127]);

function nimCharToStr(x_33556441) {
  var result_33556442 = [];

    result_33556442 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556442[0] = x_33556441;

  return result_33556442;

}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet3 = setConstr([48, 57]);
    var jumps_570425662 = [new Int32Array([100, 100, 100]), new Int32Array([101, 100, 99]), new Int32Array([101, 100, 100])];
var ConstSet4 = setConstr([32, 95], [0, 31]);
var ConstSet5 = setConstr([32, 95], [96, 127]);
var ConstSet6 = setConstr(0, 1);

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet7 = setConstr([32, 95], [96, 127]);
var ConstSet8 = setConstr([32, 95], [0, 31]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);
var ConstSet13 = setConstr([32, 95], [96, 127]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}
      var barWidths_570425398 = [new Int32Array([2, 1, 2, 2, 2, 2]), new Int32Array([2, 2, 2, 1, 2, 2]), new Int32Array([2, 2, 2, 2, 2, 1]), new Int32Array([1, 2, 1, 2, 2, 3]), new Int32Array([1, 2, 1, 3, 2, 2]), new Int32Array([1, 3, 1, 2, 2, 2]), new Int32Array([1, 2, 2, 2, 1, 3]), new Int32Array([1, 2, 2, 3, 1, 2]), new Int32Array([1, 3, 2, 2, 1, 2]), new Int32Array([2, 2, 1, 2, 1, 3]), new Int32Array([2, 2, 1, 3, 1, 2]), new Int32Array([2, 3, 1, 2, 1, 2]), new Int32Array([1, 1, 2, 2, 3, 2]), new Int32Array([1, 2, 2, 1, 3, 2]), new Int32Array([1, 2, 2, 2, 3, 1]), new Int32Array([1, 1, 3, 2, 2, 2]), new Int32Array([1, 2, 3, 1, 2, 2]), new Int32Array([1, 2, 3, 2, 2, 1]), new Int32Array([2, 2, 3, 2, 1, 1]), new Int32Array([2, 2, 1, 1, 3, 2]), new Int32Array([2, 2, 1, 2, 3, 1]), new Int32Array([2, 1, 3, 2, 1, 2]), new Int32Array([2, 2, 3, 1, 1, 2]), new Int32Array([3, 1, 2, 1, 3, 1]), new Int32Array([3, 1, 1, 2, 2, 2]), new Int32Array([3, 2, 1, 1, 2, 2]), new Int32Array([3, 2, 1, 2, 2, 1]), new Int32Array([3, 1, 2, 2, 1, 2]), new Int32Array([3, 2, 2, 1, 1, 2]), new Int32Array([3, 2, 2, 2, 1, 1]), new Int32Array([2, 1, 2, 1, 2, 3]), new Int32Array([2, 1, 2, 3, 2, 1]), new Int32Array([2, 3, 2, 1, 2, 1]), new Int32Array([1, 1, 1, 3, 2, 3]), new Int32Array([1, 3, 1, 1, 2, 3]), new Int32Array([1, 3, 1, 3, 2, 1]), new Int32Array([1, 1, 2, 3, 1, 3]), new Int32Array([1, 3, 2, 1, 1, 3]), new Int32Array([1, 3, 2, 3, 1, 1]), new Int32Array([2, 1, 1, 3, 1, 3]), new Int32Array([2, 3, 1, 1, 1, 3]), new Int32Array([2, 3, 1, 3, 1, 1]), new Int32Array([1, 1, 2, 1, 3, 3]), new Int32Array([1, 1, 2, 3, 3, 1]), new Int32Array([1, 3, 2, 1, 3, 1]), new Int32Array([1, 1, 3, 1, 2, 3]), new Int32Array([1, 1, 3, 3, 2, 1]), new Int32Array([1, 3, 3, 1, 2, 1]), new Int32Array([3, 1, 3, 1, 2, 1]), new Int32Array([2, 1, 1, 3, 3, 1]), new Int32Array([2, 3, 1, 1, 3, 1]), new Int32Array([2, 1, 3, 1, 1, 3]), new Int32Array([2, 1, 3, 3, 1, 1]), new Int32Array([2, 1, 3, 1, 3, 1]), new Int32Array([3, 1, 1, 1, 2, 3]), new Int32Array([3, 1, 1, 3, 2, 1]), new Int32Array([3, 3, 1, 1, 2, 1]), new Int32Array([3, 1, 2, 1, 1, 3]), new Int32Array([3, 1, 2, 3, 1, 1]), new Int32Array([3, 3, 2, 1, 1, 1]), new Int32Array([3, 1, 4, 1, 1, 1]), new Int32Array([2, 2, 1, 4, 1, 1]), new Int32Array([4, 3, 1, 1, 1, 1]), new Int32Array([1, 1, 1, 2, 2, 4]), new Int32Array([1, 1, 1, 4, 2, 2]), new Int32Array([1, 2, 1, 1, 2, 4]), new Int32Array([1, 2, 1, 4, 2, 1]), new Int32Array([1, 4, 1, 1, 2, 2]), new Int32Array([1, 4, 1, 2, 2, 1]), new Int32Array([1, 1, 2, 2, 1, 4]), new Int32Array([1, 1, 2, 4, 1, 2]), new Int32Array([1, 2, 2, 1, 1, 4]), new Int32Array([1, 2, 2, 4, 1, 1]), new Int32Array([1, 4, 2, 1, 1, 2]), new Int32Array([1, 4, 2, 2, 1, 1]), new Int32Array([2, 4, 1, 2, 1, 1]), new Int32Array([2, 2, 1, 1, 1, 4]), new Int32Array([4, 1, 3, 1, 1, 1]), new Int32Array([2, 4, 1, 1, 1, 2]), new Int32Array([1, 3, 4, 1, 1, 1]), new Int32Array([1, 1, 1, 2, 4, 2]), new Int32Array([1, 2, 1, 1, 4, 2]), new Int32Array([1, 2, 1, 2, 4, 1]), new Int32Array([1, 1, 4, 2, 1, 2]), new Int32Array([1, 2, 4, 1, 1, 2]), new Int32Array([1, 2, 4, 2, 1, 1]), new Int32Array([4, 1, 1, 2, 1, 2]), new Int32Array([4, 2, 1, 1, 1, 2]), new Int32Array([4, 2, 1, 2, 1, 1]), new Int32Array([2, 1, 2, 1, 4, 1]), new Int32Array([2, 1, 4, 1, 2, 1]), new Int32Array([4, 1, 2, 1, 2, 1]), new Int32Array([1, 1, 1, 1, 4, 3]), new Int32Array([1, 1, 1, 3, 4, 1]), new Int32Array([1, 3, 1, 1, 4, 1]), new Int32Array([1, 1, 4, 1, 1, 3]), new Int32Array([1, 1, 4, 3, 1, 1]), new Int32Array([4, 1, 1, 1, 1, 3]), new Int32Array([4, 1, 1, 3, 1, 1]), new Int32Array([1, 1, 3, 1, 4, 1]), new Int32Array([1, 1, 4, 1, 3, 1]), new Int32Array([3, 1, 1, 1, 4, 1]), new Int32Array([4, 1, 1, 1, 3, 1]), new Int32Array([2, 1, 1, 4, 1, 2]), new Int32Array([2, 1, 1, 2, 1, 4]), new Int32Array([2, 1, 1, 2, 3, 2]), new Int32Array([2, 3, 3, 1, 1, 1])];
var ConstSet14 = setConstr(13, 10);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet15 = setConstr();

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570426193 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570426193 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570426193;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570426193 = addInt(i_570426193, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function initCode128_570425446(s_570425447) {
  var result_570425448 = ({s: [], state: 0, bar: [], i: 0});

    Label1: {
      var c_570425449 = 0;
      var i_570426186 = 0;
      var L_570426187 = (s_570425447).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426186 < L_570426187)) break Label3;
            c_570425449 = s_570425447[chckIndx(i_570426186, 0, (s_570425447).length - 1)];
            if (!((ConstSet2[c_570425449] != undefined))) {
            raiseException({message: ([99,104,97,114,32,110,111,116,32,105,110,32,97,108,108,111,119,101,100,32,114,97,110,103,101,58,32,39] || []).concat(nimCharToStr(c_570425449) || [],[39,32] || [],HEX24_385875976(c_570425449) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
            }
            
            i_570426186 += 1;
            if (!(((s_570425447).length == L_570426187))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(272, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_570425448.state = 1;
    result_570425448.s = nimCopy(null, s_570425447, NTI33554449);

  return result_570425448;

}

function isDone_570425538(code_570425539) {
  var result_570425540 = false;

    result_570425540 = !((code_570425539.i < (code_570425539.s).length));

  return result_570425540;

}

function isStart_570425535(code_570425536) {
  var result_570425537 = false;

    result_570425537 = (code_570425536.i == 0);

  return result_570425537;

}

function isTableCOptimal_570425716(code_570425717) {
          var Temporary3;

  var result_570425718 = false;

    var streak_570425719 = 0;
    var i_570425720 = code_570425717.i;
    Label1: {
        Label2: while (true) {
          if (!(i_570425720 < (code_570425717.s).length)) Temporary3 = false; else {            Temporary3 = (ConstSet3[code_570425717.s[chckIndx(i_570425720, 0, (code_570425717.s).length - 1)]] != undefined);          }        if (!Temporary3) break Label2;
          streak_570425719 = addInt(streak_570425719, 1);
          i_570425720 = addInt(i_570425720, 1);
        }
    };
    if (((streak_570425719 == 2) && ((code_570425717.s).length == 2))) {
    result_570425718 = true;
    }
    else {
    if (((4 <= streak_570425719) && (isStart_570425535(code_570425717) || (addInt(code_570425717.i, streak_570425719) == (code_570425717.s).length)))) {
    result_570425718 = true;
    }
    else {
    if ((6 <= streak_570425719)) {
    result_570425718 = true;
    }
    }}

  return result_570425718;

}

function changeState_570425650(code_570425651, newState_570425652) {
    if (!(!((code_570425651.state == newState_570425652)))) {
    failedAssertImpl_268435541([99,111,100,101,49,50,56,46,110,105,109,40,49,56,49,44,32,51,41,32,96,99,111,100,101,46,115,116,97,116,101,32,33,61,32,110,101,119,83,116,97,116,101,96,32]);
    }
    
    if (!(isStart_570425535(code_570425651))) {
    var Temporary1 = nimCopy(null, jumps_570425662[chckIndx(code_570425651.state, 0, (jumps_570425662).length - 1)][chckIndx(newState_570425652, 0, (jumps_570425662[chckIndx(code_570425651.state, 0, (jumps_570425662).length - 1)]).length - 1)], NTI570425349);
    code_570425651.bar.push(Temporary1);;
    }
    
    code_570425651.state = newState_570425652;

  
}

function toTableAValue_570425399(c_570425400) {
  var result_570425401 = 0;

    switch (c_570425400) {
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
      result_570425401 = chckRange(subInt(c_570425400, 32), 0, 106);
      break;
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
      result_570425401 = chckRange(addInt(c_570425400, 64), 0, 106);
      break;
    default: 
      raiseException({message: ([99,104,97,114,32,111,117,116,32,111,102,32,84,97,98,108,101,32,65,32,114,97,110,103,101,58,32] || []).concat(HEX24_385875976(c_570425400) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_570425401;

}

function toTableBValue_570425428(c_570425429) {
  var result_570425430 = 0;

    switch (c_570425429) {
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
      result_570425430 = chckRange(subInt(c_570425429, 32), 0, 106);
      break;
    default: 
      raiseException({message: ([99,104,97,114,32,111,117,116,32,111,102,32,84,97,98,108,101,32,66,32,114,97,110,103,101,58,32] || []).concat(HEX24_385875976(c_570425429) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_570425430;

}

function addABChar_570425541(code_570425542) {
    if (!((ConstSet6[code_570425542.state] != undefined))) {
    failedAssertImpl_268435541([99,111,100,101,49,50,56,46,110,105,109,40,49,53,52,44,32,51,41,32,96,99,111,100,101,46,115,116,97,116,101,32,105,110,32,123,115,116,97,116,101,65,44,32,115,116,97,116,101,66,125,96,32]);
    }
    
    if (isStart_570425535(code_570425542)) {
    if ((code_570425542.state == 0)) {
    code_570425542.bar.push(103);;
    }
    else {
    if ((code_570425542.state == 1)) {
    code_570425542.bar.push(104);;
    }
    }
    }
    
    if ((code_570425542.state == 0)) {
    code_570425542.bar.push(toTableAValue_570425399(code_570425542.s[chckIndx(code_570425542.i, 0, (code_570425542.s).length - 1)]));;
    }
    else {
    if ((code_570425542.state == 1)) {
    code_570425542.bar.push(toTableBValue_570425428(code_570425542.s[chckIndx(code_570425542.i, 0, (code_570425542.s).length - 1)]));;
    }
    }
    code_570425542.i = addInt(code_570425542.i, 1);

  
}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570426199 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426199 < L_704644360)) break Label3;
            i_704644365 = i_570426199;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570426199 = addInt(i_570426199, 1);
          }
      };
    };

  return result_704644356;

}

function HEX2EHEX2E_1040187440(a_1040187443, b_1040187444) {
  var result_1040187445 = ({a: 0, b: 0});

    result_1040187445 = nimCopy(result_1040187445, {a: a_1040187443, b: b_1040187444}, NTI771752005);

  return result_1040187445;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_738197829() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_738197867(s_738197868, b_738197869, b_738197869_Idx) {
      var Temporary1;
          var Temporary4;

  var result_738197870 = 0;

    var sign_738197871 = (-1n);
    var i_738197872 = 0;
    if ((i_738197872 < (s_738197868).length)) {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 43)) {
    i_738197872 += 1;
    }
    else {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 45)) {
    i_738197872 += 1;
    sign_738197871 = 1n;
    }
    }
    }
    
      if (!(i_738197872 < (s_738197868).length)) Temporary1 = false; else {        Temporary1 = (ConstSet9[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);      }    if (Temporary1) {
    b_738197869[b_738197869_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_738197872 < (s_738197868).length)) Temporary4 = false; else {            Temporary4 = (ConstSet10[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_738197906 = (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_738197906)) / 10n <= b_738197869[b_738197869_Idx])) {
          b_738197869[b_738197869_Idx] = ((b_738197869[b_738197869_Idx] * 10n) - BigInt(c_738197906));
          }
          else {
          integerOutOfRangeError_738197829();
          }
          
          i_738197872 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_738197872 < (s_738197868).length) && (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 95))) break Label6;
                i_738197872 += 1;
              }
          };
        }
    };
    if (((sign_738197871 == (-1n)) && (b_738197869[b_738197869_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_738197829();
    }
    else {
      b_738197869[b_738197869_Idx] = (b_738197869[b_738197869_Idx] * sign_738197871);
      result_738197870 = i_738197872;
    }
    
    }
    

  return result_738197870;

}

function npuParseBiggestInt(s_738197929, number_738197930, number_738197930_Idx) {
  var result_738197931 = 0;

    var res_738197932 = [0n];
    result_738197931 = rawParseInt_738197867(s_738197929, res_738197932, 0);
    if (!((result_738197931 == 0))) {
    number_738197930[number_738197930_Idx] = res_738197932[0];
    }
    

  return result_738197931;

}

function npuParseInt(s_738197934, number_738197935, number_738197935_Idx) {
  var result_738197936 = 0;

    var res_738197937 = [0n];
    result_738197936 = npuParseBiggestInt(s_738197934, res_738197937, 0);
    if (((res_738197937[0] < (-2147483648n)) || (2147483647n < res_738197937[0]))) {
    integerOutOfRangeError_738197829();
    }
    
    if (!((result_738197936 == 0))) {
    number_738197935[number_738197935_Idx] = chckRange(Number(res_738197937[0]), (-2147483648), 2147483647);
    }
    

  return result_738197936;

}

function parseInt_738198447(s_738198448, number_738198449, number_738198449_Idx, start_738198450) {
  var result_738198451 = 0;

    result_738198451 = npuParseInt((s_738198448.slice(start_738198450, (s_738198448).length - 1 + 1)), number_738198449, number_738198449_Idx);

  return result_738198451;

}

function nsuParseInt(s_704643929) {
  var result_704643930 = [0];

    result_704643930[0] = 0;
    var L_704643931 = parseInt_738198447(s_704643929, result_704643930, 0, 0);
    if ((!((L_704643931 == (s_704643929).length)) || (L_704643931 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_704643929 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643930[0];

}

function toTableCValue_570425438(ab_570425439) {
  var result_570425440 = 0;

    if (!(((ab_570425439).length == 2))) {
    failedAssertImpl_268435541([99,111,100,101,49,50,56,46,110,105,109,40,49,49,53,44,32,51,41,32,96,97,98,46,108,101,110,32,61,61,32,50,96,32]);
    }
    
    result_570425440 = chckRange(nsuParseInt(ab_570425439), 0, 106);

  return result_570425440;

}

function addCChar_570425607(code_570425608) {
    if (!((code_570425608.state == 2))) {
    failedAssertImpl_268435541([99,111,100,101,49,50,56,46,110,105,109,40,49,54,56,44,32,51,41,32,96,99,111,100,101,46,115,116,97,116,101,32,61,61,32,115,116,97,116,101,67,96,32]);
    }
    
    if (isStart_570425535(code_570425608)) {
    code_570425608.bar.push(105);;
    }
    
    var pair_570425640 = HEX5BHEX5D_704644351(code_570425608.s, HEX2EHEX2E_1040187440(code_570425608.i, addInt(code_570425608.i, 1)));
    code_570425608.bar.push(toTableCValue_570425438(pair_570425640));;
    code_570425608.i = addInt(code_570425608.i, 2);

  
}

function tableCConditions_570425705(code_570425706) {
      var Temporary1;

  var result_570425707 = false;

  BeforeRet: {
    if ((subInt((code_570425706.s).length, 2) < code_570425706.i)) {
    result_570425707 = false;
    break BeforeRet;
    }
    else {
      if (!((ConstSet11[code_570425706.s[chckIndx(code_570425706.i, 0, (code_570425706.s).length - 1)]] != undefined))) Temporary1 = true; else {        Temporary1 = !((ConstSet12[code_570425706.s[chckIndx(addInt(code_570425706.i, 1), 0, (code_570425706.s).length - 1)]] != undefined));      }    if (Temporary1) {
    result_570425707 = false;
    break BeforeRet;
    }
    }
    result_570425707 = true;
  };

  return result_570425707;

}

function calcChecksum_570425478(code_570425479) {
  var result_570425480 = 0;

    var sum_570425481 = 0;
    Label1: {
      var i_570425506 = 0;
      var c_570425507 = 0;
      var i_570426205 = 0;
      var L_570426206 = (code_570425479.bar).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426205 < L_570426206)) break Label3;
            i_570425506 = i_570426205;
            c_570425507 = code_570425479.bar[chckIndx(i_570426205, 0, (code_570425479.bar).length - 1)];
            if ((i_570425506 == 0)) {
            sum_570425481 = c_570425507;
            }
            else {
            sum_570425481 = addInt(sum_570425481, mulInt(i_570425506, c_570425507));
            }
            
            i_570426205 += 1;
            if (!(((code_570425479.bar).length == L_570426206))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(187, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570425480 = chckRange(modInt(sum_570425481, 103), 0, 106);

  return result_570425480;

}

function addChecksum_570425529(code_570425530) {
    code_570425530.bar.push(calcChecksum_570425478(code_570425530));;

  
}

function addStop_570425699(code_570425700) {
    code_570425700.bar.push(106);;

  
}

function toCode128(s_570425736) {
                var Temporary3;
                var Temporary4;

  var result_570425737 = ({s: [], state: 0, bar: [], i: 0});

    var code_570425738 = [initCode128_570425446(s_570425736)];
    Label1: {
        Label2: while (true) {
        if (!!(isDone_570425538(code_570425738[0]))) break Label2;
          switch (code_570425738[0].state) {
          case 0:
            if (isTableCOptimal_570425716(code_570425738[0])) {
            changeState_570425650(code_570425738[0], 2);
            }
            else {
              var currChar_570425739 = s_570425736[chckIndx(code_570425738[0].i, 0, (s_570425736).length - 1)];
                if (!!((ConstSet4[currChar_570425739] != undefined))) Temporary3 = false; else {                  Temporary3 = (ConstSet5[currChar_570425739] != undefined);                }              if (Temporary3) {
              changeState_570425650(code_570425738[0], 1);
              }
              else {
              addABChar_570425541(code_570425738[0]);
              }
              
            }
            
            break;
          case 1:
            if (isTableCOptimal_570425716(code_570425738[0])) {
            changeState_570425650(code_570425738[0], 2);
            }
            else {
              var currChar_570425748 = s_570425736[chckIndx(code_570425738[0].i, 0, (s_570425736).length - 1)];
                if (!!((ConstSet7[currChar_570425748] != undefined))) Temporary4 = false; else {                  Temporary4 = (ConstSet8[currChar_570425748] != undefined);                }              if (Temporary4) {
              changeState_570425650(code_570425738[0], 0);
              }
              else {
              addABChar_570425541(code_570425738[0]);
              }
              
            }
            
            break;
          case 2:
            addCChar_570425607(code_570425738[0]);
            if ((!(tableCConditions_570425705(code_570425738[0])) && !(isDone_570425538(code_570425738[0])))) {
            var currChar_570425757 = s_570425736[chckIndx(code_570425738[0].i, 0, (s_570425736).length - 1)];
            if ((ConstSet13[currChar_570425757] != undefined)) {
            changeState_570425650(code_570425738[0], 1);
            }
            else {
            changeState_570425650(code_570425738[0], 0);
            }
            
            }
            
            break;
          }
        }
    };
    addChecksum_570425529(code_570425738[0]);
    addStop_570425699(code_570425738[0]);
    result_570425737 = nimCopy(result_570425737, code_570425738[0], NTI570425348);

  return result_570425737;

}

function necessaryWidth_570425786(code_570425787) {
  var result_570425788 = 0;

    result_570425788 = addInt(addInt(mulInt((code_570425787.bar).length, 11), 2), 20);

  return result_570425788;

}

function validateUtf8_1023410512(s_1023410513) {
  var result_1023410514 = 0;

  BeforeRet: {
    var i_1023410515 = 0;
    var L_1023410519 = (s_1023410513).length;
    Label1: {
        Label2: while (true) {
        if (!(i_1023410515 < L_1023410519)) break Label2;
          if ((s_1023410513[chckIndx(i_1023410515, 0, (s_1023410513).length - 1)] <= 127)) {
          i_1023410515 = addInt(i_1023410515, 1);
          }
          else {
          if (((s_1023410513[chckIndx(i_1023410515, 0, (s_1023410513).length - 1)] >>> 5) == 6)) {
          if ((s_1023410513[chckIndx(i_1023410515, 0, (s_1023410513).length - 1)] < 194)) {
          result_1023410514 = i_1023410515;
          break BeforeRet;
          }
          
          if (((addInt(i_1023410515, 1) < L_1023410519) && ((s_1023410513[chckIndx(addInt(i_1023410515, 1), 0, (s_1023410513).length - 1)] >>> 6) == 2))) {
          i_1023410515 = addInt(i_1023410515, 2);
          }
          else {
            result_1023410514 = i_1023410515;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1023410513[chckIndx(i_1023410515, 0, (s_1023410513).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_1023410515, 2) < L_1023410519) && ((s_1023410513[chckIndx(addInt(i_1023410515, 1), 0, (s_1023410513).length - 1)] >>> 6) == 2)) && ((s_1023410513[chckIndx(addInt(i_1023410515, 2), 0, (s_1023410513).length - 1)] >>> 6) == 2))) {
          i_1023410515 = addInt(i_1023410515, 3);
          }
          else {
            result_1023410514 = i_1023410515;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1023410513[chckIndx(i_1023410515, 0, (s_1023410513).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_1023410515, 3) < L_1023410519) && ((s_1023410513[chckIndx(addInt(i_1023410515, 1), 0, (s_1023410513).length - 1)] >>> 6) == 2)) && ((s_1023410513[chckIndx(addInt(i_1023410515, 2), 0, (s_1023410513).length - 1)] >>> 6) == 2)) && ((s_1023410513[chckIndx(addInt(i_1023410515, 3), 0, (s_1023410513).length - 1)] >>> 6) == 2))) {
          i_1023410515 = addInt(i_1023410515, 4);
          }
          else {
            result_1023410514 = i_1023410515;
            break BeforeRet;
          }
          
          }
          else {
            result_1023410514 = i_1023410515;
            break BeforeRet;
          }
          }}}
        }
    };
    result_1023410514 = (-1);
    break BeforeRet;
  };

  return result_1023410514;

}

function validateUtf8_1023417537(s_1023417538) {
  var result_1023417539 = 0;

    result_1023417539 = validateUtf8_1023410512((s_1023417538.slice(0, (s_1023417538).length - 1 + 1)));

  return result_1023417539;

}

function nucruneLen(s_1023410204) {
  var result_1023410205 = 0;

    result_1023410205 = 0;
    var i_1023410206 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1023410206 < (s_1023410204).length)) break Label2;
          if ((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] <= 127)) {
          i_1023410206 = addInt(i_1023410206, 1);
          }
          else {
          if (((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] >>> 5) == 6)) {
          i_1023410206 = addInt(i_1023410206, 2);
          }
          else {
          if (((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] >>> 4) == 14)) {
          i_1023410206 = addInt(i_1023410206, 3);
          }
          else {
          if (((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] >>> 3) == 30)) {
          i_1023410206 = addInt(i_1023410206, 4);
          }
          else {
          if (((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] >>> 2) == 62)) {
          i_1023410206 = addInt(i_1023410206, 5);
          }
          else {
          if (((s_1023410204[chckIndx(i_1023410206, 0, (s_1023410204).length - 1)] >>> 1) == 126)) {
          i_1023410206 = addInt(i_1023410206, 6);
          }
          else {
          i_1023410206 = addInt(i_1023410206, 1);
          }
          }}}}}
          result_1023410205 = addInt(result_1023410205, 1);
        }
    };

  return result_1023410205;

}

function runeLen_1023417365(s_1023417366) {
  var result_1023417367 = 0;

    result_1023417367 = nucruneLen((s_1023417366.slice(0, (s_1023417366).length - 1 + 1)));

  return result_1023417367;

}

function nsuRepeatChar(c_704644193, count_704644194) {
  var result_704644195 = [];

    result_704644195 = nimCopy(null, mnewString(count_704644194), NTI33554449);
    Label1: {
      var i_704644200 = 0;
      var colontmp__570426217 = 0;
      colontmp__570426217 = subInt(count_704644194, 1);
      var res_570426218 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570426218 <= colontmp__570426217)) break Label3;
            i_704644200 = res_570426218;
            result_704644195[chckIndx(i_704644200, 0, (result_704644195).length - 1)] = c_704644193;
            res_570426218 = addInt(res_570426218, 1);
          }
      };
    };

  return result_704644195;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_1023417537(s_721420309) == (-1))) {
      Temporary1 = runeLen_1023417365(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_570425812(result_570425814, result_570425814_Idx, value_570425815) {
    var value_570425824 = nimCopy(null, value_570425815, NTI33554449);
    result_570425814[result_570425814_Idx].push.apply(result_570425814[result_570425814_Idx], alignString_721420308(value_570425824, 0, 0, 32));;

  
}

function getSvgHeader_570425792(code_570425793, totalWidth_570425794, barcodeWidth_570425795, totalHeight_570425796, showFrame_570425797) {
  var result_570425798 = [];

    Label1: {
      var fmtRes_570425806 = [mnewString(0)];
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], [60,115,118,103,32,119,105,100,116,104,61,34]);;
      formatValue_570425812(fmtRes_570425806, 0, totalWidth_570425794);
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], [34,32,104,101,105,103,104,116,61,34]);;
      formatValue_570425812(fmtRes_570425806, 0, totalHeight_570425796);
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], makeNimstrLit("\" xmlns=\"http://www.w3.org/2000/svg\">\x0A\x0A  <!-- Code128 barcode for the string \""));;
      formatValue_570425812(fmtRes_570425806, 0, code_570425793.s);
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], makeNimstrLit("\" -->\x0A\x0A  <!-- contents of nested tag will scale -->\x0A  <svg viewBox=\"0 0 "));;
      formatValue_570425812(fmtRes_570425806, 0, barcodeWidth_570425795);
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], [32]);;
      formatValue_570425812(fmtRes_570425806, 0, totalHeight_570425796);
      fmtRes_570425806[0].push.apply(fmtRes_570425806[0], [34,32,112,114,101,115,101,114,118,101,65,115,112,101,99,116,82,97,116,105,111,61,34,110,111,110,101,34,62,10,10,32,32,32,32,60,33,45,45,32,98,97,99,107,103,114,111,117,110,100,32,45,45,62,10]);;
    };
    result_570425798 = nimCopy(null, fmtRes_570425806[0], NTI33554449);
    if (showFrame_570425797) {
    result_570425798.push.apply(result_570425798, makeNimstrLit("    <rect width=\"100%\" height=\"100%\" fill=\"white\" stroke-width=\"1\" stroke=\"black\" />"));;
    }
    else {
    result_570425798.push.apply(result_570425798, makeNimstrLit("    <rect width=\"100%\" height=\"100%\" fill=\"white\" stroke-width=\"0\" />"));;
    }
    
    result_570425798.push.apply(result_570425798, [10]);;

  return result_570425798;

}

function formatValue_570425895(result_570425898, result_570425898_Idx, value_570425899) {
    result_570425898[result_570425898_Idx].push.apply(result_570425898[result_570425898_Idx], HEX24_385875976(value_570425899));;

  
}

function formatValue_570425854(result_570425857, result_570425857_Idx, value_570425858) {
    result_570425857[result_570425857_Idx].push.apply(result_570425857[result_570425857_Idx], HEX24_385875976(value_570425858));;

  
}

function svgBar_570425845(x_570425846, width_570425847, height_570425848) {
  var result_570425849 = [];

    Label1: {
      var fmtRes_570425853 = [mnewString(0)];
      fmtRes_570425853[0].push.apply(fmtRes_570425853[0], [32,32,32,32,60,114,101,99,116,32,120,61,34]);;
      formatValue_570425854(fmtRes_570425853, 0, x_570425846);
      fmtRes_570425853[0].push.apply(fmtRes_570425853[0], [34,32,121,61,34]);;
      formatValue_570425812(fmtRes_570425853, 0, [53,37]);
      fmtRes_570425853[0].push.apply(fmtRes_570425853[0], [34,32,119,105,100,116,104,61,34]);;
      formatValue_570425812(fmtRes_570425853, 0, width_570425847);
      fmtRes_570425853[0].push.apply(fmtRes_570425853[0], [34,32,104,101,105,103,104,116,61,34]);;
      formatValue_570425812(fmtRes_570425853, 0, height_570425848);
      fmtRes_570425853[0].push.apply(fmtRes_570425853[0], [34,32,115,116,114,111,107,101,45,119,105,100,116,104,61,34,48,34,32,47,62]);;
    };
    result_570425849 = nimCopy(null, fmtRes_570425853[0], NTI33554449);

  return result_570425849;

}

function svgStopBars_570425875(x_570425876, x_570425876_Idx, height_570425877) {
  var result_570425878 = [];

    result_570425878.push.apply(result_570425878, svgBar_570425845(x_570425876[x_570425876_Idx], [50], height_570425877));;
    result_570425878.push.apply(result_570425878, [10]);;
    x_570425876[x_570425876_Idx] = addInt(x_570425876[x_570425876_Idx], 2);

  return result_570425878;

}

function svgBars_570425885(c_570425886, x_570425887, x_570425887_Idx, height_570425888, debug_570425889) {
  var result_570425890 = [];

    if (debug_570425889) {
    Label1: {
      var fmtRes_570425894 = [mnewString(0)];
      fmtRes_570425894[0].push.apply(fmtRes_570425894[0], [32,32,60,33,45,45,32,67,111,100,101,49,50,56,32,118,97,108,117,101,32]);;
      formatValue_570425895(fmtRes_570425894, 0, c_570425886);
      fmtRes_570425894[0].push.apply(fmtRes_570425894[0], [41,32,45,45,62,10]);;
    };
    result_570425890.push.apply(result_570425890, fmtRes_570425894[0]);;
    }
    
    Label2: {
      var i_570425945 = 0;
      var width_570425946 = 0;
      var colontmp__570426223 = new Int32Array(6);
      colontmp__570426223 = nimCopy(colontmp__570426223, barWidths_570425398[chckIndx(c_570425886, 0, (barWidths_570425398).length - 1)], NTI570425350);
      var i_570426225 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            i_570425945 = i_570426225;
            width_570425946 = colontmp__570426223[chckIndx(i_570426225, 0, (colontmp__570426223).length - 1)];
            if ((modInt(i_570425945, 2) == 0)) {
            result_570425890.push.apply(result_570425890, svgBar_570425845(x_570425887[x_570425887_Idx], HEX24_385875976(width_570425946), height_570425888));;
            result_570425890.push.apply(result_570425890, [10]);;
            }
            else {
              if (debug_570425889) {
              Label5: {
                var fmtRes_570425950 = [mnewString(0)];
                fmtRes_570425950[0].push.apply(fmtRes_570425950[0], [32,32,32,32,60,33,45,45,32,119,104,105,116,101,115,112,97,99,101,32,119,105,100,116,104,32]);;
                formatValue_570425854(fmtRes_570425950, 0, width_570425946);
                fmtRes_570425950[0].push.apply(fmtRes_570425950[0], [32,45,45,62,10]);;
              };
              result_570425890.push.apply(result_570425890, fmtRes_570425950[0]);;
              }
              
            }
            
            x_570425887[x_570425887_Idx] = addInt(x_570425887[x_570425887_Idx], width_570425946);
            if ((5 <= i_570426225)) {
            break Label3;
            }
            
            i_570426225 += 1;
          }
      };
    };
    if ((c_570425886 == 106)) {
    result_570425890.push.apply(result_570425890, svgStopBars_570425875(x_570425887, x_570425887_Idx, height_570425888));;
    }
    

  return result_570425890;

}

function getText_570425978(code_570425979, textSize_570425980, fontFamily_570425981) {
  var result_570425982 = [];

    Label1: {
      var fmtRes_570425986 = [mnewString(0)];
      fmtRes_570425986[0].push.apply(fmtRes_570425986[0], [32,32,32,32,60,116,101,120,116,32,120,61,34,53,48,37,34,32,121,61,34]);;
      formatValue_570425812(fmtRes_570425986, 0, [57,53,37]);
      fmtRes_570425986[0].push.apply(fmtRes_570425986[0], [34,32,102,111,110,116,45,115,105,122,101,61,34]);;
      formatValue_570425812(fmtRes_570425986, 0, textSize_570425980);
      fmtRes_570425986[0].push.apply(fmtRes_570425986[0], [34,32,102,111,110,116,45,102,97,109,105,108,121,61,34]);;
      formatValue_570425812(fmtRes_570425986, 0, fontFamily_570425981);
      fmtRes_570425986[0].push.apply(fmtRes_570425986[0], [34,32,116,101,120,116,45,97,110,99,104,111,114,61,34,109,105,100,100,108,101,34,62]);;
      formatValue_570425812(fmtRes_570425986, 0, code_570425979.s);
      fmtRes_570425986[0].push.apply(fmtRes_570425986[0], [60,47,116,101,120,116,62,10]);;
    };
    result_570425982 = nimCopy(null, fmtRes_570425986[0], NTI33554449);

  return result_570425982;

}

function toSvg(code_570426008, height_570426009, width_570426010, textSize_570426011, fontFamily_570426012, barHeight_570426013, showFrame_570426014, showText_570426015, debug_570426016) {
    var Temporary1;

  var result_570426017 = [];

    var barcodeWidth_570426018 = HEX24_385875976(necessaryWidth_570425786(code_570426008));
    if (!(eqStrings(barHeight_570426013, []))) {
    Temporary1 = barHeight_570426013;
    }
    else {
    if (showText_570426015) {
    Temporary1 = [55,53,37];
    }
    else {
    Temporary1 = [57,48,37];
    }
    }
    var barHeight_570426019 = nimCopy(null, Temporary1, NTI33554449);
    result_570426017 = nimCopy(null, getSvgHeader_570425792(code_570426008, width_570426010, barcodeWidth_570426018, height_570426009, showFrame_570426014), NTI33554449);
    var x_570426020 = [10];
    result_570426017.push.apply(result_570426017, [32,32,32,32,60,33,45,45,32,98,97,114,99,111,100,101,32,45,45,62,10]);;
    Label2: {
      var c_570426042 = 0;
      var i_570426210 = 0;
      var L_570426211 = (code_570426008.bar).length;
      Label3: {
          Label4: while (true) {
          if (!(i_570426210 < L_570426211)) break Label4;
            c_570426042 = code_570426008.bar[chckIndx(i_570426210, 0, (code_570426008.bar).length - 1)];
            result_570426017.push.apply(result_570426017, svgBars_570425885(c_570426042, x_570426020, 0, barHeight_570426019, debug_570426016));;
            i_570426210 += 1;
            if (!(((code_570426008.bar).length == L_570426211))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570426017.push.apply(result_570426017, [32,32,60,47,115,118,103,62,10]);;
    if (showText_570426015) {
    result_570426017.push.apply(result_570426017, [10,32,32,60,33,45,45,32,116,101,120,116,44,32,100,111,101,115,32,110,111,116,32,115,99,97,108,101,32,45,45,62,10]);;
    result_570426017.push.apply(result_570426017, [32,32,60,115,118,103,62,10]);;
    result_570426017.push.apply(result_570426017, getText_570425978(code_570426008, textSize_570426011, fontFamily_570426012));;
    result_570426017.push.apply(result_570426017, [32,32,60,47,115,118,103,62,10]);;
    }
    
    result_570426017.push.apply(result_570426017, [60,47,115,118,103,62]);;

  return result_570426017;

}

function substr_33558084(s_33558085, first_33558086, last_33558087) {
  var result_33558088 = [];

    var first_33558089 = nimMax(first_33558086, 0);
    var L_33558090 = nimMax(addInt(subInt(nimMin(last_33558087, (s_33558085).length - 1), first_33558089), 1), 0);
    result_33558088 = nimCopy(null, mnewString(chckRange(L_33558090, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558095 = 0;
      var colontmp__570426244 = 0;
      colontmp__570426244 = subInt(L_33558090, 1);
      var res_570426245 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570426245 <= colontmp__570426244)) break Label3;
            i_33558095 = res_570426245;
            result_33558088[chckIndx(i_33558095, 0, (result_33558088).length - 1)] = s_33558085[chckIndx(addInt(i_33558095, first_33558089), 0, (s_33558085).length - 1)];
            res_570426245 = addInt(res_570426245, 1);
          }
      };
    };

  return result_33558088;

}

function nsuSplitLines(s_704643755, keepEol_704643756) {
            var Temporary6;

  var result_704643757 = [];

    result_704643757 = nimCopy(null, [], NTI704643591);
    Label1: {
      var xHEX60gensym73_704643763 = [];
      var first_570426238 = 0;
      var last_570426239 = 0;
      var eolpos_570426240 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_570426239 < (s_704643755).length) && !((ConstSet14[s_704643755[chckIndx(last_570426239, 0, (s_704643755).length - 1)]] != undefined)))) break Label5;
                  last_570426239 = addInt(last_570426239, 1);
                }
            };
            eolpos_570426240 = last_570426239;
            if ((last_570426239 < (s_704643755).length)) {
            if ((s_704643755[chckIndx(last_570426239, 0, (s_704643755).length - 1)] == 10)) {
            last_570426239 = addInt(last_570426239, 1);
            }
            else {
            if ((s_704643755[chckIndx(last_570426239, 0, (s_704643755).length - 1)] == 13)) {
            last_570426239 = addInt(last_570426239, 1);
            if (((last_570426239 < (s_704643755).length) && (s_704643755[chckIndx(last_570426239, 0, (s_704643755).length - 1)] == 10))) {
            last_570426239 = addInt(last_570426239, 1);
            }
            
            }
            }
            }
            
            if (keepEol_704643756) {
            Temporary6 = subInt(last_570426239, 1);
            }
            else {
            Temporary6 = subInt(eolpos_570426240, 1);
            }
            
            xHEX60gensym73_704643763 = substr_33558084(s_704643755, first_570426238, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym73_704643763, NTI33554449);
            result_704643757.push(Temporary7);;
            if ((eolpos_570426240 == last_570426239)) {
            break Label2;
            }
            
            first_570426238 = last_570426239;
          }
      };
    };

  return result_704643757;

}

function nsuContinuesWith(s_704644564, substr_704644565, start_704644566) {
  var result_704644567 = false;

  BeforeRet: {
    var i_704644568 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_704644565).length <= i_704644568)) {
          result_704644567 = true;
          break BeforeRet;
          }
          
          if ((((s_704644564).length <= addInt(i_704644568, start_704644566)) || !((s_704644564[chckIndx(addInt(i_704644568, start_704644566), 0, (s_704644564).length - 1)] == substr_704644565[chckIndx(i_704644568, 0, (substr_704644565).length - 1)])))) {
          result_704644567 = false;
          break BeforeRet;
          }
          
          i_704644568 = addInt(i_704644568, 1);
        }
    };
  };

  return result_704644567;

}

function multiReplace_704645002(s_704645003, replacements_704645004) {
                      var Temporary10;

  var result_704645005 = [];

    result_704645005 = nimCopy(null, mnewString(0), NTI33554449);
    var i_704645006 = 0;
    var fastChk_704645007 = nimCopy(null, ConstSet15, NTI704644432);
    Label1: {
      var sub_704645021 = [];
      var by_704645022 = [];
      var i_570426249 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426249 < (replacements_704645004).length)) break Label3;
            sub_704645021 = replacements_704645004[chckIndx(i_570426249, 0, (replacements_704645004).length - 1)]["Field0"];
            by_704645022 = replacements_704645004[chckIndx(i_570426249, 0, (replacements_704645004).length - 1)]["Field1"];
            if ((0 < (sub_704645021).length)) {
            fastChk_704645007[sub_704645021[chckIndx(0, 0, (sub_704645021).length - 1)]] = true;
            }
            
            i_570426249 += 1;
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_704645006 < (s_704645003).length)) break Label5;
          Label6: {
            if ((fastChk_704645007[s_704645003[chckIndx(i_704645006, 0, (s_704645003).length - 1)]] != undefined)) {
            Label7: {
              var sub_704645035 = [];
              var by_704645036 = [];
              var i_570426253 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_570426253 < (replacements_704645004).length)) break Label9;
                    sub_704645035 = replacements_704645004[chckIndx(i_570426253, 0, (replacements_704645004).length - 1)]["Field0"];
                    by_704645036 = replacements_704645004[chckIndx(i_570426253, 0, (replacements_704645004).length - 1)]["Field1"];
                      if (!(0 < (sub_704645035).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_704645003, sub_704645035, chckRange(i_704645006, 0, 2147483647));                      }                    if (Temporary10) {
                    result_704645005.push.apply(result_704645005, by_704645036);;
                    i_704645006 = addInt(i_704645006, (sub_704645035).length);
                    break Label6;
                    }
                    
                    i_570426253 += 1;
                  }
              };
            };
            }
            
            addChar(result_704645005, s_704645003[chckIndx(i_704645006, 0, (s_704645003).length - 1)]);;
            i_704645006 = addInt(i_704645006, 1);
          };
        }
    };

  return result_704645005;

}

function unescapeInput_570426064(text_570426065) {
  var result_570426066 = [];

    result_570426066 = nimCopy(null, multiReplace_704645002(text_570426065, [{Field0: [92,92], Field1: [92]}, {Field0: [92,110], Field1: [10]}, {Field0: [92,116], Field1: [9]}, {Field0: [92,102], Field1: [12]}, {Field0: [92,99], Field1: [13]}]), NTI33554449);

  return result_570426066;

}

function nsuFindChar(s_704644771, sub_704644772, start_704644773, last_704644774) {
    var Temporary1;

  var result_704644775 = 0;

  BeforeRet: {
    result_704644775 = (-1);
    if ((last_704644774 < 0)) {
    Temporary1 = (s_704644771).length - 1;
    }
    else {
    Temporary1 = last_704644774;
    }
    
    var last_704644776 = Temporary1;
    Label2: {
      var iHEX60gensym176_704644790 = 0;
      var colontmp__570426263 = 0;
      colontmp__570426263 = start_704644773;
      var res_570426264 = colontmp__570426263;
      Label3: {
          Label4: while (true) {
          if (!(res_570426264 <= last_704644776)) break Label4;
            iHEX60gensym176_704644790 = res_570426264;
            if ((s_704644771[chckIndx(iHEX60gensym176_704644790, 0, (s_704644771).length - 1)] == sub_704644772)) {
            result_704644775 = iHEX60gensym176_704644790;
            break BeforeRet;
            }
            
            res_570426264 = addInt(res_570426264, 1);
          }
      };
    };
  };

  return result_704644775;

}

function substr_33558096(s_33558097, first_33558098) {
  var result_33558099 = [];

    result_33558099 = nimCopy(null, substr_33558084(s_33558097, first_33558098, (s_33558097).length - 1), NTI33554449);

  return result_33558099;

}

function fill_704644694(a_704644696, value_704644697) {
    var xHEX60gensym172_704644703 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_704644703 <= (a_704644696).length - 1)) break Label2;
          a_704644696[chckIndx(xHEX60gensym172_704644703, 0, (a_704644696).length - 1)] = value_704644697;
          xHEX60gensym172_704644703 = addInt(xHEX60gensym172_704644703, 1);
        }
    };

  
}

function nsuInitSkipTable(a_704644691, sub_704644692) {
    var m_704644693 = (sub_704644692).length;
    fill_704644694(a_704644691, m_704644693);
    Label1: {
      var i_704644713 = 0;
      var colontmp__570426267 = 0;
      colontmp__570426267 = subInt(m_704644693, 1);
      var i_570426268 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570426268 < colontmp__570426267)) break Label3;
            i_704644713 = i_570426268;
            a_704644691[chckIndx(sub_704644692[chckIndx(i_704644713, 0, (sub_704644692).length - 1)], 0, (a_704644691).length - 1)] = subInt(subInt(m_704644693, 1), i_704644713);
            i_570426268 = addInt(i_570426268, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_704644746) {
  var result_704644747 = [new Int32Array(256)];

    nsuInitSkipTable(result_704644747[0], sub_704644746);

  return result_704644747[0];

}

function nsuFindStrA(a_704644749, s_704644750, sub_704644751, start_704644752, last_704644753) {
    var Temporary1;

  var result_704644754 = 0;

  BeforeRet: {
    if ((last_704644753 < 0)) {
    Temporary1 = (s_704644750).length - 1;
    }
    else {
    Temporary1 = last_704644753;
    }
    
    var last_704644755 = Temporary1;
    var subLast_704644756 = subInt((sub_704644751).length, 1);
    if ((subLast_704644756 == (-1))) {
    result_704644754 = start_704644752;
    break BeforeRet;
    }
    
    result_704644754 = (-1);
    var skip_704644757 = start_704644752;
    Label2: {
        Label3: while (true) {
        if (!(subLast_704644756 <= subInt(last_704644755, skip_704644757))) break Label3;
          var i_704644758 = subLast_704644756;
          Label4: {
              Label5: while (true) {
              if (!(s_704644750[chckIndx(addInt(skip_704644757, i_704644758), 0, (s_704644750).length - 1)] == sub_704644751[chckIndx(i_704644758, 0, (sub_704644751).length - 1)])) break Label5;
                if ((i_704644758 == 0)) {
                result_704644754 = skip_704644757;
                break BeforeRet;
                }
                
                i_704644758 = subInt(i_704644758, 1);
              }
          };
          skip_704644757 = addInt(skip_704644757, a_704644749[chckIndx(s_704644750[chckIndx(addInt(skip_704644757, subLast_704644756), 0, (s_704644750).length - 1)], 0, (a_704644749).length - 1)]);
        }
    };
  };

  return result_704644754;

}

function nsuReplaceStr(s_704644959, sub_704644960, by_704644961) {
  var result_704644962 = [];

    result_704644962 = nimCopy(null, [], NTI33554449);
    var subLen_704644963 = (sub_704644960).length;
    if ((subLen_704644963 == 0)) {
    result_704644962 = nimCopy(null, s_704644959, NTI33554449);
    }
    else {
    if ((subLen_704644963 == 1)) {
    var c_704644964 = sub_704644960[chckIndx(0, 0, (sub_704644960).length - 1)];
    var last_704644965 = (s_704644959).length - 1;
    var i_704644966 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_704644967 = nsuFindChar(s_704644959, c_704644964, chckRange(i_704644966, 0, 2147483647), last_704644965);
          if ((j_704644967 < 0)) {
          break Label1;
          }
          
          result_704644962.push.apply(result_704644962, substr_33558084(s_704644959, i_704644966, subInt(j_704644967, 1)));;
          result_704644962.push.apply(result_704644962, by_704644961);;
          i_704644966 = addInt(j_704644967, subLen_704644963);
        }
    };
    result_704644962.push.apply(result_704644962, substr_33558096(s_704644959, i_704644966));;
    }
    else {
      var a_704644968 = nsuInitNewSkipTable(sub_704644960);
      var last_704644969 = (s_704644959).length - 1;
      var i_704644970 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_704644971 = nsuFindStrA(a_704644968, s_704644959, sub_704644960, chckRange(i_704644970, 0, 2147483647), last_704644969);
            if ((j_704644971 < 0)) {
            break Label3;
            }
            
            result_704644962.push.apply(result_704644962, substr_33558084(s_704644959, i_704644970, subInt(j_704644971, 1)));;
            result_704644962.push.apply(result_704644962, by_704644961);;
            i_704644970 = addInt(j_704644971, subLen_704644963);
          }
      };
      result_704644962.push.apply(result_704644962, substr_33558096(s_704644959, i_704644970));;
    }
    }

  return result_704644962;

}

function genBarcode() {
              var Temporary5;

    var texts_570426100 = nsuSplitLines(cstrToNimstr(document.getElementById("text").value), false);
    var height_570426101 = cstrToNimstr(document.getElementById("height").value);
    var width_570426102 = cstrToNimstr(document.getElementById("width").value);
    var showframe_570426103 = document.getElementById("showframe").checked;
    var showtext_570426104 = document.getElementById("showtext").checked;
    var textsize_570426105 = cstrToNimstr(document.getElementById("textsize").value);
    var fontfamily_570426106 = cstrToNimstr(document.getElementById("fontfamily").value);
    var barheight_570426107 = cstrToNimstr(document.getElementById("barheight").value);
    var debugmode_570426108 = document.getElementById("debugmode").checked;
    var rawmode_570426109 = document.getElementById("rawmode").checked;
    document.getElementById("barcodeout").innerHTML = "";
    document.getElementById("svgsource").innerHTML = "";
    Label1: {
      var line_570426131 = [];
      var i_570426232 = 0;
      var L_570426233 = (texts_570426100).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570426232 < L_570426233)) break Label3;
            line_570426131 = texts_570426100[chckIndx(i_570426232, 0, (texts_570426100).length - 1)];
            Label4: {
              if (((line_570426131).length == 0)) {
              break Label4;
              }
              
              if (rawmode_570426109) {
              Temporary5 = unescapeInput_570426064(line_570426131);
              }
              else {
              Temporary5 = line_570426131;
              }
              
              var final_570426132 = nimCopy(null, Temporary5, NTI33554449);
              var code_570426133 = toCode128(final_570426132);
              var svg_570426134 = toSvg(code_570426133, height_570426101, width_570426102, textsize_570426105, fontfamily_570426106, barheight_570426107, showframe_570426103, showtext_570426104, debugmode_570426108);
              var source_570426135 = nsuReplaceStr(svg_570426134, [60], [38,108,116,59]);
              if (null != toJSStr(svg_570426134)) { if (null == document.getElementById("barcodeout").innerHTML) document.getElementById("barcodeout").innerHTML = toJSStr(svg_570426134); else document.getElementById("barcodeout").innerHTML += toJSStr(svg_570426134); };
              if (null != "\n<br>\n") { if (null == document.getElementById("barcodeout").innerHTML) document.getElementById("barcodeout").innerHTML = "\n<br>\n"; else document.getElementById("barcodeout").innerHTML += "\n<br>\n"; };
              if (null != toJSStr(source_570426135)) { if (null == document.getElementById("svgsource").innerHTML) document.getElementById("svgsource").innerHTML = toJSStr(source_570426135); else document.getElementById("svgsource").innerHTML += toJSStr(source_570426135); };
              if (null != "\n\n") { if (null == document.getElementById("svgsource").innerHTML) document.getElementById("svgsource").innerHTML = "\n\n"; else document.getElementById("svgsource").innerHTML += "\n\n"; };
            };
            i_570426232 += 1;
            if (!(((texts_570426100).length == L_570426233))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(254, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}
