/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI486539280 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI620757366 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI620757330 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI486539324 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI620757472 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI738197565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865893 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865873 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI687866047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865898 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865880 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865888 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554460 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI687865886 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865925 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI687865924 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI687865923 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI687865892 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI687865915 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865884 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865874 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865903 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865881 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865907 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865882 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865911 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865883 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865919 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI687865885 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI687865887 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
NTI687865885.base = NTI687865919;
NTI687865883.base = NTI687865911;
NTI687865882.base = NTI687865907;
NTI687865881.base = NTI687865903;
var NNI687865874 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI687865874, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI687865874, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865874, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865874, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865874, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865874, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI687865874, name: "Sunday", len: 0, sons: null}}};
NTI687865874.node = NNI687865874;
NTI687865884.base = NTI687865915;
var NNI687865923 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI687865924, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI687865925, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554439, name: "name", sons: null}]};
NTI687865923.node = NNI687865923;
NTI687865892.base = NTI687865923;
var NNI687865887 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI687865885, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI687865883, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI687865882, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI687865881, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554456, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554456, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554456, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI687865874, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI687865884, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI687865892, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}]};
NTI687865887.node = NNI687865887;
NTI687865887.base = NTI33555083;
var NNI687865886 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI687865885, name: "nanosecond", sons: null}]};
NTI687865886.node = NNI687865886;
var NNI687865888 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554460, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI687865885, name: "nanosecond", sons: null}]};
NTI687865888.node = NNI687865888;
NTI687865880.base = NTI687865898;
var NNI687865873 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI687865873, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI687865873, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI687865873, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI687865873, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI687865873, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI687865873, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI687865873, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI687865873, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI687865873, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI687865873, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI687865873, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI687865873, name: "December", len: 0, sons: null}}};
NTI687865873.node = NNI687865873;
var NNI687866047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI687865880, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI687865873, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554456, name: "Field2", sons: null}]};
NTI687866047.node = NNI687866047;
var NNI687865893 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI687865886, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554456, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI687865893.node = NNI687865893;
var NNI738197565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI738197565.node = NNI738197565;
NTI620757472.base = NTI33554439;
var NNI486539324 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}]};
NTI486539324.node = NNI486539324;
NTI620757330.base = NTI33554439;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
NTI620757366.base = NTI33554439;
NTI486539280.base = NTI33554439;

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}

function absInt(a_33556988) {
    var Temporary1;

  var result_33556989 = 0;

    if ((a_33556988 < 0)) {
    Temporary1 = (a_33556988 * -1);
    }
    else {
    Temporary1 = a_33556988;
    }
    
    result_33556989 = Temporary1;

  return result_33556989;

}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}
    var unitWeights_687866002 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}

function eqStrings(a_33556931, b_33556932) {
        if (a_33556931 == b_33556932) return true;
    if (a_33556931 === null && b_33556932.length == 0) return true;
    if (b_33556932 === null && a_33556931.length == 0) return true;
    if ((!a_33556931) || (!b_33556932)) return false;
    var alen = a_33556931.length;
    if (alen != b_33556932.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556931[i] != b_33556932[i]) return false;
    return true;
  

  
}

function negInt(a_33556982) {
  var result_33556983 = 0;

    result_33556983 = (a_33556982 * -1);

  return result_33556983;

}
    var f2_486539399 = {patterns: [22, 11, 1, 33, 1, 95, 7, 9, 15], formatStr: makeNimstrLit("yyyyMMdd\'_\'HHmmss")};
    var DefaultLocale_687867472 = {MMM: [makeNimstrLit("Jan"), makeNimstrLit("Feb"), makeNimstrLit("Mar"), makeNimstrLit("Apr"), makeNimstrLit("May"), makeNimstrLit("Jun"), makeNimstrLit("Jul"), makeNimstrLit("Aug"), makeNimstrLit("Sep"), makeNimstrLit("Oct"), makeNimstrLit("Nov"), makeNimstrLit("Dec")], MMMM: [makeNimstrLit("January"), makeNimstrLit("February"), makeNimstrLit("March"), makeNimstrLit("April"), makeNimstrLit("May"), makeNimstrLit("June"), makeNimstrLit("July"), makeNimstrLit("August"), makeNimstrLit("September"), makeNimstrLit("October"), makeNimstrLit("November"), makeNimstrLit("December")], ddd: [makeNimstrLit("Mon"), makeNimstrLit("Tue"), makeNimstrLit("Wed"), makeNimstrLit("Thu"), makeNimstrLit("Fri"), makeNimstrLit("Sat"), makeNimstrLit("Sun")], dddd: [makeNimstrLit("Monday"), makeNimstrLit("Tuesday"), makeNimstrLit("Wednesday"), makeNimstrLit("Thursday"), makeNimstrLit("Friday"), makeNimstrLit("Saturday"), makeNimstrLit("Sunday")]};
    var daysUntilMonthLeap_687866124 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_687866123 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
var ConstSet2 = setConstr(13, 10);

function nimMax(a_33556998, b_33556999) {
    var Temporary1;

  var result_33557000 = 0;

  BeforeRet: do {
    if ((b_33556999 <= a_33556998)) {
    Temporary1 = a_33556998;
    }
    else {
    Temporary1 = b_33556999;
    }
    
    result_33557000 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557000;

}

function nimMin(a_33556994, b_33556995) {
    var Temporary1;

  var result_33556996 = 0;

  BeforeRet: do {
    if ((a_33556994 <= b_33556995)) {
    Temporary1 = a_33556994;
    }
    else {
    Temporary1 = b_33556995;
    }
    
    result_33556996 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556996;

}
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([48, 57]);

function nimCharToStr(x_33556517) {
  var result_33556518 = [];

    result_33556518 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556518[0] = x_33556517;

  return result_33556518;

}
                    var colors_486539426 = [makeNimstrLit("\"RGB(132,193,241)\""), makeNimstrLit("\"RGB(168,255,222)\""), makeNimstrLit("\"RGB(223,221,142)\""), makeNimstrLit("\"RGB(247,255,168)\""), makeNimstrLit("\"RGB(180,255,0)\""), makeNimstrLit("\"RGB(255,204,153)\""), makeNimstrLit("\"RGB(253,138,88)\""), makeNimstrLit("\"RGB(213,244,165)\""), makeNimstrLit("\"RGB(96,255,160)\"")];

function mulInt(a_33556948, b_33556949) {
        var result = a_33556948 * b_33556949;
    checkOverflowInt(result);
    return result;
  

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var cb64_637534212 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47];
var cb64safe_637534213 = [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95];
if (globalThis.utcInstance_687867274 === undefined) {
  globalThis.utcInstance_687867274 = [null];
}
if (globalThis.localInstance_687867275 === undefined) {
  globalThis.localInstance_687867275 = [null];
}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_486539649 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539649 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_486539649;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_486539649 = addInt(i_486539649, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function nsuEndsWith(s_620758324, suffix_620758325) {
          var Temporary3;

  var result_620758326 = false;

  BeforeRet: do {
    var suffixLenHEX60gensym148_620758332 = (suffix_620758325).length;
    var sLenHEX60gensym148_620758333 = (s_620758324).length;
    var iHEX60gensym148_620758334 = 0;
    var jHEX60gensym148_620758335 = subInt(sLenHEX60gensym148_620758333, suffixLenHEX60gensym148_620758332);
    Label1: do {
        Label2: while (true) {
          if (!(0 <= addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335))) Temporary3 = false; else {            Temporary3 = (addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335) < sLenHEX60gensym148_620758333);          }        if (!Temporary3) break Label2;
          if (!((s_620758324[chckIndx(addInt(iHEX60gensym148_620758334, jHEX60gensym148_620758335), 0, (s_620758324).length - 1)] == suffix_620758325[chckIndx(iHEX60gensym148_620758334, 0, (suffix_620758325).length - 1)]))) {
          result_620758326 = false;
          break BeforeRet;
          }
          
          iHEX60gensym148_620758334 = addInt(iHEX60gensym148_620758334, 1);
        }
    } while (false);
    if ((suffixLenHEX60gensym148_620758332 <= iHEX60gensym148_620758334)) {
    result_620758326 = true;
    break BeforeRet;
    }
    
  } while (false);

  return result_620758326;

}

function nsuRemoveSuffixString(s_620758384, s_620758384_Idx, suffix_620758385) {
    var newLen_620758386 = (s_620758384[s_620758384_Idx]).length;
    if (nsuEndsWith(s_620758384[s_620758384_Idx], suffix_620758385)) {
    newLen_620758386 = subInt(newLen_620758386, (suffix_620758385).length);
    (s_620758384[s_620758384_Idx].length = chckRange(newLen_620758386, 0, 2147483647));
    }
    

  
}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function monthday_687867019(dt_687867020) {
  var result_687867021 = 0;

    if (!(!((dt_687867020.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(997, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_687867021 = dt_687867020.monthdayZero;

  return result_687867021;

}

function nsuIntToStr(x_620757781, minchars_620757782) {
  var result_620757783 = [];

    result_620757783 = nimCopy(null, HEX24_335544323(absInt(x_620757781)), NTI33554439);
    Label1: do {
      var i_620757788 = 0;
      var colontmp__486539660 = 0;
      colontmp__486539660 = subInt(minchars_620757782, (result_620757783).length);
      var res_486539661 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539661 <= colontmp__486539660)) break Label3;
            i_620757788 = res_486539661;
            result_620757783 = nimCopy(null, [48].concat(result_620757783 || []), NTI33554439);
            res_486539661 = addInt(res_486539661, 1);
          }
      } while (false);
    } while (false);
    if ((x_620757781 < 0)) {
    result_620757783 = nimCopy(null, [45].concat(result_620757783 || []), NTI33554439);
    }
    

  return result_620757783;

}

function HEX2D_687865886(a_687865887, b_687865888) {
  var result_687865889 = 0;

    result_687865889 = (a_687865887 - b_687865888);

  return result_687865889;

}

function month_687867027(dt_687867028) {
  var result_687867029 = 0;

    if (!(!((dt_687867028.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(1004, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_687867029 = dt_687867028.monthZero;

  return result_687867029;

}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function HEX2A_687865866(a_687865867, b_687865868) {
  var result_687865869 = 0;

    result_687865869 = (a_687865867 * b_687865868);

  return result_687865869;

}

function convert_687866526(unitFrom_687866528, unitTo_687866529, quantity_687866530) {
    var Temporary1;

  var result_687866531 = 0;

    if ((unitFrom_687866528 < unitTo_687866529)) {
    Temporary1 = chckRange(divInt(quantity_687866530, divInt(unitWeights_687866002[chckIndx(unitTo_687866529, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitFrom_687866528, 0, (unitWeights_687866002).length - 1)])), 0, 999999999);
    }
    else {
    Temporary1 = chckRange(HEX2A_687865866(divInt(unitWeights_687866002[chckIndx(unitFrom_687866528, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitTo_687866529, 0, (unitWeights_687866002).length - 1)]), quantity_687866530), 0, 999999999);
    }
    
    result_687866531 = Temporary1;

  return result_687866531;

}

function HEX2B_687865878(a_687865879, b_687865880) {
  var result_687865881 = 0;

    result_687865881 = (a_687865879 + b_687865880);

  return result_687865881;

}

function HEX3DHEX3D_687867209(zone1_687867210, zone2_687867211) {
  var result_687867212 = false;

  BeforeRet: do {
    if ((zone1_687867210 == zone2_687867211)) {
    result_687867212 = true;
    break BeforeRet;
    }
    
    if (((zone1_687867210 == null) || (zone2_687867211 == null))) {
    result_687867212 = false;
    break BeforeRet;
    }
    
    result_687867212 = eqStrings(zone1_687867210.name, zone2_687867211.name);
  } while (false);

  return result_687867212;

}

function formatPattern_687867703(dt_687867704, pattern_687867705, result_687867706, result_687867706_Idx, loc_687867707) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
          var Temporary9;
          var Temporary10;
      var Temporary11;

    switch (pattern_687867705) {
    case 0:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(monthday_687867019(dt_687867704)));;
      break;
    case 1:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(monthday_687867019(dt_687867704), 2));;
      break;
    case 2:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], loc_687867707.ddd[chckIndx(dt_687867704.weekday, 0, (loc_687867707.ddd).length - 1)]);;
      break;
    case 3:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], loc_687867707.dddd[chckIndx(dt_687867704.weekday, 0, (loc_687867707.dddd).length - 1)]);;
      break;
    case 4:
      if ((dt_687867704.hour == 0)) {
      Temporary1 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_687867704.hour)) {
      Temporary1 = HEX24_335544323(HEX2D_687865886(dt_687867704.hour, 12));
      }
      else {
      Temporary1 = HEX24_335544323(dt_687867704.hour);
      }
      }
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], Temporary1);;
      break;
    case 5:
      if ((dt_687867704.hour == 0)) {
      Temporary2 = makeNimstrLit("12");
      }
      else {
      if ((12 < dt_687867704.hour)) {
      Temporary2 = nsuIntToStr(HEX2D_687865886(dt_687867704.hour, 12), 2);
      }
      else {
      Temporary2 = nsuIntToStr(dt_687867704.hour, 2);
      }
      }
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], Temporary2);;
      break;
    case 6:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(dt_687867704.hour));;
      break;
    case 7:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(dt_687867704.hour, 2));;
      break;
    case 8:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(dt_687867704.minute));;
      break;
    case 9:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(dt_687867704.minute, 2));;
      break;
    case 10:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(month_687867027(dt_687867704)));;
      break;
    case 11:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(month_687867027(dt_687867704), 2));;
      break;
    case 12:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], loc_687867707.MMM[chckIndx(month_687867027(dt_687867704), 1, (loc_687867707.MMM).length + (1) - 1) - (1)]);;
      break;
    case 13:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], loc_687867707.MMMM[chckIndx(month_687867027(dt_687867704), 1, (loc_687867707.MMMM).length + (1) - 1) - (1)]);;
      break;
    case 14:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(dt_687867704.second));;
      break;
    case 15:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(dt_687867704.second, 2));;
      break;
    case 16:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(convert_687866526(0, 2, dt_687867704.nanosecond), 3));;
      break;
    case 17:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(convert_687866526(0, 1, dt_687867704.nanosecond), 6));;
      break;
    case 18:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(dt_687867704.nanosecond, 9));;
      break;
    case 19:
      if ((12 <= dt_687867704.hour)) {
      Temporary3 = makeNimstrLit("P");
      }
      else {
      Temporary3 = makeNimstrLit("A");
      }
      
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], Temporary3);;
      break;
    case 20:
      if ((12 <= dt_687867704.hour)) {
      Temporary4 = makeNimstrLit("PM");
      }
      else {
      Temporary4 = makeNimstrLit("AM");
      }
      
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], Temporary4);;
      break;
    case 21:
      if ((dt_687867704.year <= 0)) {
      Temporary5 = HEX2B_687865878(absInt(dt_687867704.year), 1);
      }
      else {
      Temporary5 = dt_687867704.year;
      }
      
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(modInt(Temporary5, 100), 2));;
      break;
    case 22:
      if ((dt_687867704.year <= 0)) {
      Temporary6 = HEX2B_687865878(absInt(dt_687867704.year), 1);
      }
      else {
      Temporary6 = dt_687867704.year;
      }
      
      var year_687867726 = Temporary6;
      if ((year_687867726 < 10000)) {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(year_687867726, 4));;
      }
      else {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], [43].concat(HEX24_335544323(year_687867726) || []));;
      }
      
      break;
    case 23:
      if ((dt_687867704.year < 1)) {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(HEX2B_687865878(absInt(dt_687867704.year), 1)));;
      }
      else {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(dt_687867704.year));;
      }
      
      break;
    case 24:
      var year_687867727 = dt_687867704.year;
      if (((year_687867727 < 10000) || (year_687867727 < 0))) {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(year_687867727, 4));;
      }
      else {
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], [43].concat(HEX24_335544323(year_687867727) || []));;
      }
      
      break;
    case 25:
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(dt_687867704.year));;
      break;
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
        if (!!(HEX3DHEX3D_687867209(dt_687867704.timezone, null))) Temporary7 = false; else {          Temporary7 = eqStrings(dt_687867704.timezone.name, makeNimstrLit("Etc/UTC"));        }      if (Temporary7) {
      addChar(result_687867706[result_687867706_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_687867704.utcOffset))) {
        Temporary8 = 43;
        }
        else {
        Temporary8 = 45;
        }
        
        addChar(result_687867706[result_687867706_Idx], Temporary8);;
        var absOffset_687867728 = absInt(dt_687867704.utcOffset);
        switch (pattern_687867705) {
        case 26:
          result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], HEX24_335544323(divInt(absOffset_687867728, 3600)));;
          break;
        case 27:
          result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], nsuIntToStr(divInt(absOffset_687867728, 3600), 2));;
          break;
        case 28:
        case 30:
          var h_687867729 = nsuIntToStr(divInt(absOffset_687867728, 3600), 2);
          var m_687867730 = nsuIntToStr(modInt(divInt(absOffset_687867728, 60), 60), 2);
          if ((pattern_687867705 == 28)) {
          Temporary9 = makeNimstrLit(":");
          }
          else {
          Temporary9 = [];
          }
          
          var sep_687867736 = nimCopy(null, Temporary9, NTI33554439);
          result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], (h_687867729 || []).concat(sep_687867736 || [],m_687867730 || []));;
          break;
        case 29:
        case 31:
          var absOffset_687867737 = absInt(dt_687867704.utcOffset);
          var h_687867738 = nsuIntToStr(divInt(absOffset_687867737, 3600), 2);
          var m_687867739 = nsuIntToStr(modInt(divInt(absOffset_687867737, 60), 60), 2);
          var s_687867740 = nsuIntToStr(modInt(absOffset_687867737, 60), 2);
          if ((pattern_687867705 == 29)) {
          Temporary10 = makeNimstrLit(":");
          }
          else {
          Temporary10 = [];
          }
          
          var sep_687867745 = nimCopy(null, Temporary10, NTI33554439);
          result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], (h_687867738 || []).concat(sep_687867745 || [],m_687867739 || [],sep_687867745 || [],s_687867740 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_218103864(makeNimstrLit("times.nim(1773, 20) `false` "));
          }
          
          break;
        }
      }
      
      break;
    case 32:
      if ((dt_687867704.year < 1)) {
      Temporary11 = makeNimstrLit("BC");
      }
      else {
      Temporary11 = makeNimstrLit("AD");
      }
      
      result_687867706[result_687867706_Idx].push.apply(result_687867706[result_687867706_Idx], Temporary11);;
      break;
    case 33:
      if (true) {
      failedAssertImpl_218103864(makeNimstrLit("times.nim(1776, 18) `false` "));
      }
      
      break;
    }

  
}

function format_687868678(dt_687868679, f_687868680, loc_687868681) {
  var result_687868682 = [[]];

    if (!(!((dt_687868679.monthdayZero == 0)))) {
    failedAssertImpl_218103864(makeNimstrLit("times.nim(2014, 29) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_687868682[0] = nimCopy(null, [], NTI33554439);
    var idx_687868688 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(idx_687868688 <= (f_687868680.patterns).length - 1)) break Label2;
          switch (chckRange(f_687868680.patterns[chckIndx(idx_687868688, 0, (f_687868680.patterns).length - 1)], 0, 33)) {
          case 33:
            idx_687868688 = addInt(idx_687868688, 1);
            var len_687868696 = f_687868680.patterns[chckIndx(idx_687868688, 0, (f_687868680.patterns).length - 1)];
            Label3: do {
              var i_687868707 = 0;
              var res_486539657 = 1;
              Label4: do {
                  Label5: while (true) {
                  if (!(res_486539657 <= ((len_687868696) | 0))) break Label5;
                    i_687868707 = res_486539657;
                    idx_687868688 = addInt(idx_687868688, 1);
                    addChar(result_687868682[0], f_687868680.patterns[chckIndx(idx_687868688, 0, (f_687868680.patterns).length - 1)]);;
                    res_486539657 = addInt(res_486539657, 1);
                  }
              } while (false);
            } while (false);
            idx_687868688 = addInt(idx_687868688, 1);
            break;
          default: 
            formatPattern_687867703(dt_687868679, chckRange(f_687868680.patterns[chckIndx(idx_687868688, 0, (f_687868680.patterns).length - 1)], 0, 33), result_687868682, 0, loc_687868681);
            idx_687868688 = addInt(idx_687868688, 1);
            break;
          }
        }
    } while (false);

  return result_687868682[0];

}

function format_486539394(dt_486539396) {
  var result_486539398 = [];

    result_486539398 = nimCopy(null, format_687868678(dt_486539396, f2_486539399, DefaultLocale_687867472), NTI33554439);

  return result_486539398;

}

function HEX2B_687865874(a_687865875, b_687865876) {
  var result_687865877 = 0;

    result_687865877 = (a_687865875 + b_687865876);

  return result_687865877;

}

function convert_687866267(unitFrom_687866269, unitTo_687866270, quantity_687866271) {
    var Temporary1;

  var result_687866272 = 0;

    if ((unitFrom_687866269 < unitTo_687866270)) {
    Temporary1 = divInt(quantity_687866271, divInt(unitWeights_687866002[chckIndx(unitTo_687866270, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitFrom_687866269, 0, (unitWeights_687866002).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_687865866(divInt(unitWeights_687866002[chckIndx(unitFrom_687866269, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitTo_687866270, 0, (unitWeights_687866002).length - 1)]), quantity_687866271);
    }
    
    result_687866272 = Temporary1;

  return result_687866272;

}

function convert_687866334(unitFrom_687866336, unitTo_687866337, quantity_687866338) {
    var Temporary1;

  var result_687866339 = 0;

    if ((unitFrom_687866336 < unitTo_687866337)) {
    Temporary1 = chckRange(divInt(quantity_687866338, divInt(unitWeights_687866002[chckIndx(unitTo_687866337, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitFrom_687866336, 0, (unitWeights_687866002).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_687865866(divInt(unitWeights_687866002[chckIndx(unitFrom_687866336, 0, (unitWeights_687866002).length - 1)], unitWeights_687866002[chckIndx(unitTo_687866337, 0, (unitWeights_687866002).length - 1)]), quantity_687866338), -2147483648, 2147483647);
    }
    
    result_687866339 = Temporary1;

  return result_687866339;

}

function normalize_687866895(seconds_687866897, nanoseconds_687866898) {
  var result_687866899 = ({seconds: 0, nanosecond: 0});

    result_687866899.seconds = HEX2B_687865874(seconds_687866897, convert_687866267(0, 3, nanoseconds_687866898));
    var nanosecond_687866910 = modInt(nanoseconds_687866898, convert_687866334(3, 0, 1));
    if ((nanosecond_687866910 < 0)) {
    nanosecond_687866910 = addInt(nanosecond_687866910, convert_687866334(3, 0, 1));
    result_687866899.seconds = subInt(result_687866899.seconds, 1);
    }
    
    result_687866899.nanosecond = chckRange(chckRange(nanosecond_687866910, -2147483648, 2147483647), 0, 999999999);

  return result_687866899;

}

function HEX2D_687865882(a_687865883, b_687865884) {
  var result_687865885 = 0;

    result_687865885 = (a_687865883 - b_687865884);

  return result_687865885;

}

function ntSubTime(a_687866925, b_687866926) {
  var result_687866927 = ({seconds: 0, nanosecond: 0});

    result_687866927 = nimCopy(result_687866927, normalize_687866895(HEX2D_687865882(a_687866925.seconds, b_687866926.seconds), HEX2D_687865886(a_687866925.nanosecond, b_687866926.nanosecond)), NTI687865886);

  return result_687866927;

}

function normalize_687866324(seconds_687866326, nanoseconds_687866327) {
  var result_687866328 = ({seconds: 0, nanosecond: 0});

    result_687866328.seconds = HEX2B_687865874(seconds_687866326, convert_687866267(0, 3, nanoseconds_687866327));
    var nanosecond_687866344 = modInt(nanoseconds_687866327, convert_687866334(3, 0, 1));
    if ((nanosecond_687866344 < 0)) {
    nanosecond_687866344 = addInt(nanosecond_687866344, convert_687866334(3, 0, 1));
    result_687866328.seconds = subInt(result_687866328.seconds, 1);
    }
    
    result_687866328.nanosecond = chckRange(chckRange(nanosecond_687866344, -2147483648, 2147483647), 0, 999999999);

  return result_687866328;

}

function initDuration_687866257(nanoseconds_687866258, microseconds_687866259, milliseconds_687866260, seconds_687866261, minutes_687866262, hours_687866263, days_687866264, weeks_687866265) {
  var result_687866266 = ({seconds: 0, nanosecond: 0});

    var seconds_687866312 = HEX2B_687865874(HEX2B_687865874(HEX2B_687865874(HEX2B_687865874(HEX2B_687865874(HEX2B_687865874(HEX2B_687865874(convert_687866267(7, 3, weeks_687866265), convert_687866267(6, 3, days_687866264)), convert_687866267(4, 3, minutes_687866262)), convert_687866267(5, 3, hours_687866263)), convert_687866267(3, 3, seconds_687866261)), convert_687866267(2, 3, milliseconds_687866260)), convert_687866267(1, 3, microseconds_687866259)), convert_687866267(0, 3, nanoseconds_687866258));
    var nanoseconds_687866323 = chckRange(HEX2B_687865874(HEX2B_687865874(convert_687866267(2, 0, modInt(milliseconds_687866260, 1000)), convert_687866267(1, 0, modInt(microseconds_687866259, 1000000))), modInt(nanoseconds_687866258, 1000000000)), -2147483648, 2147483647);
    result_687866266 = nimCopy(result_687866266, normalize_687866324(seconds_687866312, nanoseconds_687866323), NTI687865888);

  return result_687866266;

}

function floorDiv_687866149(x_687866151, y_687866152) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_687866153 = 0;

    result_687866153 = Math.trunc(x_687866151 / y_687866152);
    var r_687866154 = Math.trunc(x_687866151 % y_687866152);
      if (!(0 < r_687866154)) Temporary2 = false; else {        Temporary2 = (y_687866152 < 0);      }      if (Temporary2) Temporary1 = true; else {        if (!(r_687866154 < 0)) Temporary3 = false; else {          Temporary3 = (0 < y_687866152);        }        Temporary1 = Temporary3;      }    if (Temporary1) {
    result_687866153 -= 1;
    }
    

  return result_687866153;

}

function inc_687865897(a_687865898, a_687865898_Idx, b_687865899) {
    a_687865898[a_687865898_Idx] += b_687865899;

  
}

function fromEpochDay_687866082(epochday_687866083) {
    var Temporary1;
    var Temporary2;

  var result_687866087 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var z_687866088 = [epochday_687866083];
    inc_687865897(z_687866088, 0, 719468);
    if ((0 <= z_687866088[0])) {
    Temporary1 = z_687866088[0];
    }
    else {
    Temporary1 = HEX2D_687865882(z_687866088[0], 146096);
    }
    
    var era_687866089 = divInt(Temporary1, 146097);
    var doe_687866090 = HEX2D_687865882(z_687866088[0], HEX2A_687865866(era_687866089, 146097));
    var yoe_687866091 = divInt(HEX2D_687865882(HEX2B_687865874(HEX2D_687865882(doe_687866090, divInt(doe_687866090, 1460)), divInt(doe_687866090, 36524)), divInt(doe_687866090, 146096)), 365);
    var y_687866092 = HEX2B_687865874(yoe_687866091, HEX2A_687865866(era_687866089, 400));
    var doy_687866093 = HEX2D_687865882(doe_687866090, HEX2D_687865882(HEX2B_687865874(HEX2A_687865866(365, yoe_687866091), divInt(yoe_687866091, 4)), divInt(yoe_687866091, 100)));
    var mp_687866094 = divInt(HEX2B_687865874(HEX2A_687865866(5, doy_687866093), 2), 153);
    var d_687866095 = HEX2B_687865874(HEX2D_687865882(doy_687866093, divInt(HEX2B_687865874(HEX2A_687865866(153, mp_687866094), 2), 5)), 1);
    if ((mp_687866094 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_687866096 = HEX2B_687865874(mp_687866094, Temporary2);
    var colontmp__486539664 = chckRange(d_687866095, 1, 31);
    var colontmp__486539665 = chckRange(m_687866096, 1, 12);
    var colontmp__486539666 = chckRange(HEX2B_687865874(y_687866092, ((m_687866096 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_687866087 = nimCopy(result_687866087, {Field0: nimCopy(null, colontmp__486539664, NTI687865880), Field1: colontmp__486539665, Field2: colontmp__486539666}, NTI687866047);
    break BeforeRet;
  } while (false);

  return result_687866087;

}

function isLeapYear_687866025(year_687866026) {
    var Temporary1;
      var Temporary2;

  var result_687866027 = false;

    if (!(modInt(year_687866026, 4) == 0)) Temporary1 = false; else {      if (!((modInt(year_687866026, 100) == 0))) Temporary2 = true; else {        Temporary2 = (modInt(year_687866026, 400) == 0);      }      Temporary1 = Temporary2;    }    result_687866027 = Temporary1;

  return result_687866027;

}

function getDaysInMonth_687866028(month_687866029, year_687866030) {
      var Temporary1;

  var result_687866031 = 0;

    switch (month_687866029) {
    case 2:
      if (isLeapYear_687866025(year_687866030)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_687866031 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_687866031 = 30;
      break;
    default: 
      result_687866031 = 31;
      break;
    }

  return result_687866031;

}

function assertValidDate_687866032(monthday_687866033, month_687866034, year_687866035) {
    if (!((monthday_687866033 <= getDaysInMonth_687866028(month_687866034, year_687866035)))) {
    failedAssertImpl_218103864((makeNimstrLit("times.nim(450, 10) `monthday <= getDaysInMonth(month, year)` ") || []).concat(HEX24_335544323(year_687866035) || [],makeNimstrLit("-") || [],nsuIntToStr(month_687866034, 2) || [],makeNimstrLit("-") || [],HEX24_335544323(monthday_687866033) || [],makeNimstrLit(" is not a valid date") || []));
    }
    

  
}

function HEX2A_687865870(a_687865871, b_687865872) {
  var result_687865873 = 0;

    result_687865873 = (a_687865871 * b_687865872);

  return result_687865873;

}

function toEpochDay_687866054(monthday_687866055, month_687866056, year_687866057) {
    var Temporary1;
    var Temporary2;

  var result_687866058 = 0;

  BeforeRet: do {
    assertValidDate_687866032(monthday_687866055, month_687866056, year_687866057);
    var colontmp__486539667 = {Field0: year_687866057, Field1: month_687866056, Field2: monthday_687866055};
    var y_687866062 = colontmp__486539667["Field0"];
    var m_687866063 = colontmp__486539667["Field1"];
    var d_687866064 = colontmp__486539667["Field2"];
    if ((m_687866063 <= 2)) {
    y_687866062 = subInt(y_687866062, 1);
    }
    
    if ((0 <= y_687866062)) {
    Temporary1 = y_687866062;
    }
    else {
    Temporary1 = HEX2D_687865886(y_687866062, 399);
    }
    
    var era_687866069 = divInt(Temporary1, 400);
    var yoe_687866070 = HEX2D_687865886(y_687866062, HEX2A_687865870(era_687866069, 400));
    if ((2 < m_687866063)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_687866071 = HEX2D_687865886(HEX2B_687865878(divInt(HEX2B_687865878(HEX2A_687865870(153, HEX2B_687865878(m_687866063, Temporary2)), 2), 5), d_687866064), 1);
    var doe_687866072 = HEX2B_687865878(HEX2D_687865886(HEX2B_687865878(HEX2A_687865870(yoe_687866070, 365), divInt(yoe_687866070, 4)), divInt(yoe_687866070, 100)), doy_687866071);
    result_687866058 = HEX2D_687865886(HEX2B_687865878(HEX2A_687865870(era_687866069, 146097), doe_687866072), 719468);
    break BeforeRet;
  } while (false);

  return result_687866058;

}

function getDayOfWeek_687866143(monthday_687866144, month_687866145, year_687866146) {
    var Temporary1;

  var result_687866147 = 0;

    assertValidDate_687866032(monthday_687866144, month_687866145, year_687866146);
    var days_687866148 = HEX2D_687865882(toEpochDay_687866054(monthday_687866144, month_687866145, year_687866146), 3);
    var weeks_687866159 = floorDiv_687866149(days_687866148, 7);
    var wd_687866160 = HEX2D_687865882(days_687866148, HEX2A_687865866(weeks_687866159, 7));
    if ((wd_687866160 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_687865882(wd_687866160, 1), 0, 6);
    }
    
    result_687866147 = Temporary1;

  return result_687866147;

}

function getDayOfYear_687866118(monthday_687866119, month_687866120, year_687866121) {
  var result_687866122 = 0;

    assertValidDate_687866032(monthday_687866119, month_687866120, year_687866121);
    if (isLeapYear_687866025(year_687866121)) {
    result_687866122 = chckRange(HEX2D_687865886(HEX2B_687865878(daysUntilMonthLeap_687866124[chckIndx(month_687866120, 1, (daysUntilMonthLeap_687866124).length + (1) - 1) - (1)], monthday_687866119), 1), 0, 365);
    }
    else {
      result_687866122 = chckRange(HEX2D_687865886(HEX2B_687865878(daysUntilMonth_687866123[chckIndx(month_687866120, 1, (daysUntilMonth_687866123).length + (1) - 1) - (1)], monthday_687866119), 1), 0, 365);
    }
    

  return result_687866122;

}

function initDateTime_687867126(zt_687867127, zone_687867128) {
  var result_687867129 = ({m_type: NTI687865887, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_687867130 = ntSubTime(zt_687867127.time, initDuration_687866257(0, 0, 0, zt_687867127.utcOffset, 0, 0, 0, 0));
    var s_687867131 = adjTime_687867130.seconds;
    var epochday_687867136 = floorDiv_687866149(s_687867131, 86400);
    var rem_687867137 = HEX2D_687865882(s_687867131, HEX2A_687865866(epochday_687867136, 86400));
    var hour_687867138 = divInt(rem_687867137, 3600);
    rem_687867137 = HEX2D_687865882(rem_687867137, HEX2A_687865866(hour_687867138, 3600));
    var minute_687867139 = divInt(rem_687867137, 60);
    rem_687867137 = HEX2D_687865882(rem_687867137, HEX2A_687865866(minute_687867139, 60));
    var second_687867140 = rem_687867137;
    var colontmp__486539663 = fromEpochDay_687866082(epochday_687867136);
    var d_687867141 = colontmp__486539663["Field0"];
    var m_687867142 = colontmp__486539663["Field1"];
    var y_687867143 = colontmp__486539663["Field2"];
    result_687867129 = nimCopy(result_687867129, {year: y_687867143, monthZero: ((m_687867142) | 0), monthdayZero: d_687867141, hour: nimCopy(null, chckRange(hour_687867138, 0, 23), NTI687865881), minute: nimCopy(null, chckRange(minute_687867139, 0, 59), NTI687865882), second: nimCopy(null, chckRange(second_687867140, 0, 60), NTI687865883), nanosecond: nimCopy(null, zt_687867127.time.nanosecond, NTI687865885), weekday: getDayOfWeek_687866143(d_687867141, m_687867142, y_687867143), yearday: getDayOfYear_687866118(d_687867141, m_687867142, y_687867143), isDst: zt_687867127.isDst, timezone: zone_687867128, utcOffset: zt_687867127.utcOffset, m_type: NTI687865887}, NTI687865887);

  return result_687867129;

}

function zonedTimeFromTime_687867183(zone_687867184, time_687867185) {
  var result_687867186 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_687867186 = nimCopy(result_687867186, zone_687867184.zonedTimeFromTimeImpl(time_687867185), NTI687865893);

  return result_687867186;

}

function inZone_687867223(time_687867224, zone_687867225) {
  var result_687867226 = ({m_type: NTI687865887, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_687867226 = nimCopy(result_687867226, initDateTime_687867126(zonedTimeFromTime_687867183(zone_687867225, time_687867224), zone_687867225), NTI687865887);

  return result_687867226;

}

function newTimezone_687867153(name_687867154, zonedTimeFromTimeImpl_687867157, zonedTimeFromAdjTimeImpl_687867160) {
  var result_687867161 = null;

    result_687867161 = {name: nimCopy(null, name_687867154, NTI33554439), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_687867157, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_687867160};

  return result_687867161;

}

function localZonedTimeFromTime_687867241(time_687867242) {
  var result_687867243 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_687867247 = new Date(HEX2A_687865866(time_687867242.seconds, 1000));
    var offset_687867248 = HEX2A_687865870(jsDate_687867247.getTimezoneOffset(), 60);
    result_687867243.time = nimCopy(result_687867243.time, time_687867242, NTI687865886);
    result_687867243.utcOffset = offset_687867248;
    result_687867243.isDst = false;

  return result_687867243;

}

function contains_687867264(s_687867268, value_687867269) {
  var result_687867270 = false;

    result_687867270 = ((s_687867268.a <= value_687867269) && (value_687867269 <= s_687867268.b));

  return result_687867270;

}

function HEX2EHEX2E_989856595(a_989856598, b_989856599) {
  var result_989856600 = ({a: 0, b: 0});

    result_989856600 = nimCopy(result_989856600, {a: a_989856598, b: b_989856599}, NTI738197565);

  return result_989856600;

}

function ntAddTime(a_687866889, b_687866890) {
  var result_687866891 = ({seconds: 0, nanosecond: 0});

    result_687866891 = nimCopy(result_687866891, normalize_687866895(HEX2B_687865874(a_687866889.seconds, b_687866890.seconds), HEX2B_687865878(a_687866889.nanosecond, b_687866890.nanosecond)), NTI687865886);

  return result_687866891;

}

function localZonedTimeFromAdjTime_687867249(adjTime_687867250) {
  var result_687867251 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_687867255 = new Date(HEX2A_687865866(adjTime_687867250.seconds, 1000));
    var localDate_687867256 = new Date(utcDate_687867255.getUTCFullYear(),utcDate_687867255.getUTCMonth(),utcDate_687867255.getUTCDate(),utcDate_687867255.getUTCHours(),utcDate_687867255.getUTCMinutes(),utcDate_687867255.getUTCSeconds(),0);
    if (contains_687867264(HEX2EHEX2E_989856595(0, 99), utcDate_687867255.getUTCFullYear())) {
    localDate_687867256.setFullYear(utcDate_687867255.getUTCFullYear());
    }
    
    result_687867251.utcOffset = HEX2A_687865870(localDate_687867256.getTimezoneOffset(), 60);
    result_687867251.time = nimCopy(result_687867251.time, ntAddTime(adjTime_687867250, initDuration_687866257(0, 0, 0, result_687867251.utcOffset, 0, 0, 0, 0)), NTI687865886);
    result_687867251.isDst = false;

  return result_687867251;

}

function local_687867290() {
  var result_687867291 = null;

    if ((localInstance_687867275[0] == null)) {
    localInstance_687867275[0] = newTimezone_687867153(makeNimstrLit("LOCAL"), localZonedTimeFromTime_687867241, localZonedTimeFromAdjTime_687867249);
    }
    
    result_687867291 = localInstance_687867275[0];

  return result_687867291;

}

function local_687867304(t_687867305) {
  var result_687867306 = ({m_type: NTI687865887, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_687867306 = nimCopy(result_687867306, inZone_687867223(t_687867305, local_687867290()), NTI687865887);

  return result_687867306;

}

function initTime_687866782(unix_687866783, nanosecond_687866784) {
  var result_687866785 = ({seconds: 0, nanosecond: 0});

    result_687866785.seconds = unix_687866783;
    result_687866785.nanosecond = nanosecond_687866784;

  return result_687866785;

}

function getTime_687866848() {
  var result_687866849 = ({seconds: 0, nanosecond: 0});

    var millis_687866850 = new Date().getTime();
    var seconds_687866856 = convert_687866334(2, 3, millis_687866850);
    var nanos_687866867 = convert_687866334(2, 0, modInt(millis_687866850, convert_687866334(3, 2, 1)));
    result_687866849 = nimCopy(result_687866849, initTime_687866782(seconds_687866856, chckRange(nanos_687866867, 0, 999999999)), NTI687865886);

  return result_687866849;

}

function now_687867307() {
  var result_687867308 = ({m_type: NTI687865887, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_687867308 = nimCopy(result_687867308, local_687867304(getTime_687866848()), NTI687865887);

  return result_687867308;

}

function linkFileName_486539390(file_486539391) {
  var result_486539392 = [];

    var trimmed_486539393 = [nimCopy(null, file_486539391, NTI33554439)];
    nsuRemoveSuffixString(trimmed_486539393, 0, makeNimstrLit(".csv"));
    var currTime_486539400 = format_486539394(now_687867307());
    result_486539392 = nimCopy(null, (trimmed_486539393[0] || []).concat(makeNimstrLit("_") || [],currTime_486539400 || [],makeNimstrLit(".txt") || []), NTI33554439);

  return result_486539392;

}

function substr_33557906(s_33557907, first_33557908, last_33557909) {
  var result_33557910 = [];

    var first_33557911 = nimMax(first_33557908, 0);
    var L_33557912 = nimMax(addInt(subInt(nimMin(last_33557909, (s_33557907).length - 1), first_33557911), 1), 0);
    result_33557910 = nimCopy(null, mnewString(chckRange(L_33557912, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_33557917 = 0;
      var colontmp__486539302 = 0;
      colontmp__486539302 = subInt(L_33557912, 1);
      var res_486539303 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539303 <= colontmp__486539302)) break Label3;
            i_33557917 = res_486539303;
            result_33557910[chckIndx(i_33557917, 0, (result_33557910).length - 1)] = s_33557907[chckIndx(addInt(i_33557917, first_33557911), 0, (s_33557907).length - 1)];
            res_486539303 = addInt(res_486539303, 1);
          }
      } while (false);
    } while (false);

  return result_33557910;

}

function nsuSplitLines(s_620757618, keepEol_620757619) {
            var Temporary6;

  var result_620757620 = [];

    result_620757620 = nimCopy(null, [], NTI620757472);
    Label1: do {
      var xHEX60gensym76_620757626 = [];
      var first_486539680 = 0;
      var last_486539681 = 0;
      var eolpos_486539682 = 0;
      Label2: do {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: do {
                Label5: while (true) {
                if (!((last_486539681 < (s_620757618).length) && !((ConstSet2[s_620757618[chckIndx(last_486539681, 0, (s_620757618).length - 1)]] != undefined)))) break Label5;
                  last_486539681 = addInt(last_486539681, 1);
                }
            } while (false);
            eolpos_486539682 = last_486539681;
            if ((last_486539681 < (s_620757618).length)) {
            if ((s_620757618[chckIndx(last_486539681, 0, (s_620757618).length - 1)] == 10)) {
            last_486539681 = addInt(last_486539681, 1);
            }
            else {
            if ((s_620757618[chckIndx(last_486539681, 0, (s_620757618).length - 1)] == 13)) {
            last_486539681 = addInt(last_486539681, 1);
            if (((last_486539681 < (s_620757618).length) && (s_620757618[chckIndx(last_486539681, 0, (s_620757618).length - 1)] == 10))) {
            last_486539681 = addInt(last_486539681, 1);
            }
            
            }
            }
            }
            
            if (keepEol_620757619) {
            Temporary6 = subInt(last_486539681, 1);
            }
            else {
            Temporary6 = subInt(eolpos_486539682, 1);
            }
            
            xHEX60gensym76_620757626 = substr_33557906(s_620757618, first_486539680, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym76_620757626, NTI33554439);
            result_620757620.push(Temporary7);;
            if ((eolpos_486539682 == last_486539681)) {
            break Label2;
            }
            
            first_486539680 = last_486539681;
          }
      } while (false);
    } while (false);

  return result_620757620;

}

function nsuSplitChar(s_620757483, sep_620757484, maxsplit_620757485) {
  var result_620757486 = [];

    result_620757486 = nimCopy(null, [], NTI620757330);
    Label1: do {
      var xHEX60gensym67_620757492 = [];
      var lastHEX60gensym34_486539688 = 0;
      var splitsHEX60gensym34_486539689 = maxsplit_620757485;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym34_486539688 <= (s_620757483).length)) break Label3;
            var firstHEX60gensym34_486539691 = lastHEX60gensym34_486539688;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym34_486539688 < (s_620757483).length) && !((s_620757483[chckIndx(lastHEX60gensym34_486539688, 0, (s_620757483).length - 1)] == sep_620757484)))) break Label5;
                  lastHEX60gensym34_486539688 = addInt(lastHEX60gensym34_486539688, 1);
                }
            } while (false);
            if ((splitsHEX60gensym34_486539689 == 0)) {
            lastHEX60gensym34_486539688 = (s_620757483).length;
            }
            
            xHEX60gensym67_620757492 = substr_33557906(s_620757483, firstHEX60gensym34_486539691, subInt(lastHEX60gensym34_486539688, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_620757492, NTI33554439);
            result_620757486.push(Temporary6);;
            if ((splitsHEX60gensym34_486539689 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_486539689 = subInt(splitsHEX60gensym34_486539689, 1);
            lastHEX60gensym34_486539688 = addInt(lastHEX60gensym34_486539688, 1);
          }
      } while (false);
    } while (false);

  return result_620757486;

}

function outputAndRaise_486539277(error_486539278) {
    document.getElementById("showcontent").innerHTML = toJSStr((makeNimstrLit("<b>Fel vid inl\xC3\xA4sning av filen: </b>") || []).concat(error_486539278 || []));
    raiseException({message: nimCopy(null, error_486539278, NTI33554439), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function substrEq_620757221(s_620757222, pos_620757223, substr_620757224) {
  var result_620757225 = false;

  BeforeRet: do {
    var i_620757226 = 0;
    var length_620757227 = (substr_620757224).length;
    Label1: do {
        Label2: while (true) {
        if (!(((i_620757226 < length_620757227) && (addInt(pos_620757223, i_620757226) < (s_620757222).length)) && (s_620757222[chckIndx(addInt(pos_620757223, i_620757226), 0, (s_620757222).length - 1)] == substr_620757224[chckIndx(i_620757226, 0, (substr_620757224).length - 1)]))) break Label2;
          i_620757226 = addInt(i_620757226, 1);
        }
    } while (false);
    result_620757225 = (i_620757226 == length_620757227);
    break BeforeRet;
  } while (false);

  return result_620757225;

}

function nsuSplitString(s_620757513, sep_620757514, maxsplit_620757515) {
  var result_620757516 = [];

    if (!((0 < (sep_620757514).length))) {
    failedAssertImpl_218103864(makeNimstrLit("strutils.nim(739, 11) `sep.len > 0` "));
    }
    
    result_620757516 = nimCopy(null, [], NTI620757366);
    Label1: do {
      var xHEX60gensym72_620757527 = [];
      var lastHEX60gensym41_486539696 = 0;
      var splitsHEX60gensym41_486539697 = maxsplit_620757515;
      Label2: do {
          Label3: while (true) {
          if (!(lastHEX60gensym41_486539696 <= (s_620757513).length)) break Label3;
            var firstHEX60gensym41_486539699 = lastHEX60gensym41_486539696;
            Label4: do {
                Label5: while (true) {
                if (!((lastHEX60gensym41_486539696 < (s_620757513).length) && !(substrEq_620757221(s_620757513, lastHEX60gensym41_486539696, sep_620757514)))) break Label5;
                  lastHEX60gensym41_486539696 = addInt(lastHEX60gensym41_486539696, 1);
                }
            } while (false);
            if ((splitsHEX60gensym41_486539697 == 0)) {
            lastHEX60gensym41_486539696 = (s_620757513).length;
            }
            
            xHEX60gensym72_620757527 = substr_33557906(s_620757513, firstHEX60gensym41_486539699, subInt(lastHEX60gensym41_486539696, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym72_620757527, NTI33554439);
            result_620757516.push(Temporary6);;
            if ((splitsHEX60gensym41_486539697 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym41_486539697 = subInt(splitsHEX60gensym41_486539697, 1);
            lastHEX60gensym41_486539696 = addInt(lastHEX60gensym41_486539696, (sep_620757514).length);
          }
      } while (false);
    } while (false);

  return result_620757516;

}

function integerOutOfRangeError_704643320() {
    raiseException({message: makeNimstrLit("Parsed integer outside of valid range"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_704643340(s_704643341, b_704643342, b_704643342_Idx, start_704643343) {
      var Temporary1;
          var Temporary4;
      var Temporary7;

  var result_704643344 = 0;

    var sign_704643345 = -1;
    var i_704643346 = start_704643343;
    if ((i_704643346 < (s_704643341).length)) {
    if ((s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)] == 43)) {
    i_704643346 += 1;
    }
    else {
    if ((s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)] == 45)) {
    i_704643346 += 1;
    sign_704643345 = 1;
    }
    }
    }
    
      if (!(i_704643346 < (s_704643341).length)) Temporary1 = false; else {        Temporary1 = (ConstSet3[s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)]] != undefined);      }    if (Temporary1) {
    b_704643342[b_704643342_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_704643346 < (s_704643341).length)) Temporary4 = false; else {            Temporary4 = (ConstSet4[s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_704643369 = (s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_704643369) / 10) <= b_704643342[b_704643342_Idx])) {
          b_704643342[b_704643342_Idx] = ((b_704643342[b_704643342_Idx] * 10) - c_704643369);
          }
          else {
          integerOutOfRangeError_704643320();
          }
          
          i_704643346 += 1;
          Label5: do {
              Label6: while (true) {
              if (!((i_704643346 < (s_704643341).length) && (s_704643341[chckIndx(i_704643346, 0, (s_704643341).length - 1)] == 95))) break Label6;
                i_704643346 += 1;
              }
          } while (false);
        }
    } while (false);
      if (!(sign_704643345 == -1)) Temporary7 = false; else {        Temporary7 = (b_704643342[b_704643342_Idx] == -9223372036854775808);      }    if (Temporary7) {
    integerOutOfRangeError_704643320();
    }
    else {
      b_704643342[b_704643342_Idx] = (b_704643342[b_704643342_Idx] * sign_704643345);
      result_704643344 = (i_704643346 - start_704643343);
    }
    
    }
    

  return result_704643344;

}

function npuParseBiggestInt(s_704643387, number_704643388, number_704643388_Idx, start_704643389) {
  var result_704643390 = 0;

    var res_704643391 = [0];
    result_704643390 = rawParseInt_704643340(s_704643387, res_704643391, 0, start_704643389);
    if (!((result_704643390 == 0))) {
    number_704643388[number_704643388_Idx] = res_704643391[0];
    }
    

  return result_704643390;

}

function npuParseInt(s_704643393, number_704643394, number_704643394_Idx, start_704643395) {
      var Temporary1;

  var result_704643396 = 0;

    var res_704643397 = [0];
    result_704643396 = npuParseBiggestInt(s_704643393, res_704643397, 0, start_704643395);
      if ((res_704643397[0] < -2147483648)) Temporary1 = true; else {        Temporary1 = (2147483647 < res_704643397[0]);      }    if (Temporary1) {
    integerOutOfRangeError_704643320();
    }
    
    if (!((result_704643396 == 0))) {
    number_704643394[number_704643394_Idx] = chckRange(res_704643397[0], -2147483648, 2147483647);
    }
    

  return result_704643396;

}

function nsuParseInt(s_620757790) {
      var Temporary1;

  var result_620757791 = [0];

    result_620757791[0] = 0;
    var L_620757792 = npuParseInt(s_620757790, result_620757791, 0, 0);
      if (!((L_620757792 == (s_620757790).length))) Temporary1 = true; else {        Temporary1 = (L_620757792 == 0);      }    if (Temporary1) {
    raiseException({message: (makeNimstrLit("invalid integer: ") || []).concat(s_620757790 || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_620757791[0];

}

function parseRackFile_486539321(contents_486539322) {
  var result_486539323 = [[[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []], [[], [], [], [], [], [], [], [], [], [], [], []]];

    Label1: do {
      var i_486539355 = 0;
      var line_486539356 = [];
      var colontmp__486539670 = [];
      colontmp__486539670 = nsuSplitLines(contents_486539322, false);
      var i_486539672 = 0;
      var L_486539673 = (colontmp__486539670).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539672 < L_486539673)) break Label3;
            var colontmp__486539676 = nimCopy(null, {Field0: i_486539672, Field1: nimCopy(null, colontmp__486539670[chckIndx(i_486539672, 0, (colontmp__486539670).length - 1)], NTI33554439)}, NTI486539324);
            i_486539355 = colontmp__486539676["Field0"];
            line_486539356 = colontmp__486539676["Field1"];
            Label4: do {
              if (((line_486539356).length == 0)) {
              break Label4;
              }
              
              var fields_486539357 = nsuSplitChar(line_486539356, 59, -1);
              if (!(((fields_486539357).length == 13))) {
              outputAndRaise_486539277((makeNimstrLit("fel antal f\xC3\xA4lt p\xC3\xA5 rad ") || []).concat(HEX24_335544323(i_486539355) || [],makeNimstrLit(": (") || [],HEX24_335544323((fields_486539357).length) || [],makeNimstrLit(")") || []));
              }
              
              switch (i_486539355) {
              case 0:
                if (!(eqStrings(fields_486539357[chckIndx(0, 0, (fields_486539357).length - 1)], makeNimstrLit("FileType")))) {
                outputAndRaise_486539277(makeNimstrLit("\"FileType\" f\xC3\xB6rv\xC3\xA4ntades som f\xC3\xB6rsta f\xC3\xA4lt p\xC3\xA5 f\xC3\xB6rsta raden"));
                }
                
                break;
              case 1:
              case 2:
              case 3:
              case 4:
              case 5:
              case 6:
              case 7:
                break;
              default: 
                var sampleId_486539364 = nimCopy(null, fields_486539357[chckIndx(0, 0, (fields_486539357).length - 1)], NTI33554439);
                var position_486539365 = nsuSplitString(fields_486539357[chckIndx(2, 0, (fields_486539357).length - 1)], makeNimstrLit(":"), -1);
                var row_486539366 = chckRange(position_486539365[chckIndx(0, 0, (position_486539365).length - 1)][chckIndx(0, 0, (position_486539365[chckIndx(0, 0, (position_486539365).length - 1)]).length - 1)], 65, 72);
                var col_486539367 = chckRange(nsuParseInt(position_486539365[chckIndx(1, 0, (position_486539365).length - 1)]), 1, 12);
                if (((sampleId_486539364).length == 0)) {
                break Label4;
                }
                
                result_486539323[chckIndx(row_486539366, 65, (result_486539323).length + (65) - 1) - (65)][chckIndx(col_486539367, 1, (result_486539323[chckIndx(row_486539366, 65, (result_486539323).length + (65) - 1) - (65)]).length + (1) - 1) - (1)] = nimCopy(null, sampleId_486539364, NTI33554439);
                break;
              }
            } while (false);
            i_486539672 = addInt(i_486539672, 1);
            if (!(((colontmp__486539670).length == L_486539673))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_486539323;

}

function nsuFindChar(s_620758520, sub_620758521, start_620758522, last_620758523) {
    var Temporary1;

  var result_620758524 = 0;

  BeforeRet: do {
    if ((last_620758523 == 0)) {
    Temporary1 = (s_620758520).length - 1;
    }
    else {
    Temporary1 = last_620758523;
    }
    
    var last_620758525 = Temporary1;
    Label2: do {
      var i_620758535 = 0;
      var colontmp__486539711 = 0;
      colontmp__486539711 = start_620758522;
      var res_486539712 = colontmp__486539711;
      Label3: do {
          Label4: while (true) {
          if (!(res_486539712 <= last_620758525)) break Label4;
            i_620758535 = res_486539712;
            if ((sub_620758521 == s_620758520[chckIndx(i_620758535, 0, (s_620758520).length - 1)])) {
            result_620758524 = i_620758535;
            break BeforeRet;
            }
            
            res_486539712 = addInt(res_486539712, 1);
          }
      } while (false);
    } while (false);
    result_620758524 = -1;
    break BeforeRet;
  } while (false);

  return result_620758524;

}

function substr_33557918(s_33557919, first_33557920) {
  var result_33557921 = [];

    result_33557921 = nimCopy(null, substr_33557906(s_33557919, first_33557920, (s_33557919).length - 1), NTI33554439);

  return result_33557921;

}

function fill_620758459(a_620758461, value_620758462) {
    var xHEX60gensym166_620758468 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(xHEX60gensym166_620758468 <= (a_620758461).length - 1)) break Label2;
          a_620758461[chckIndx(xHEX60gensym166_620758468, 0, (a_620758461).length - 1)] = value_620758462;
          xHEX60gensym166_620758468 = addInt(xHEX60gensym166_620758468, 1);
        }
    } while (false);

  
}

function nsuInitSkipTable(a_620758456, sub_620758457) {
    var m_620758458 = (sub_620758457).length;
    fill_620758459(a_620758456, m_620758458);
    Label1: do {
      var i_620758477 = 0;
      var colontmp__486539715 = 0;
      colontmp__486539715 = subInt(m_620758458, 1);
      var i_486539716 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539716 < colontmp__486539715)) break Label3;
            i_620758477 = i_486539716;
            a_620758456[chckIndx(sub_620758457[chckIndx(i_620758477, 0, (sub_620758457).length - 1)], 0, (a_620758456).length - 1)] = subInt(subInt(m_620758458, 1), i_620758477);
            i_486539716 = addInt(i_486539716, 1);
          }
      } while (false);
    } while (false);

  
}

function nsuFindStrA(a_620758500, s_620758501, sub_620758502, start_620758503, last_620758504) {
    var Temporary1;

  var result_620758505 = 0;

  BeforeRet: do {
    if ((last_620758504 == 0)) {
    Temporary1 = (s_620758501).length - 1;
    }
    else {
    Temporary1 = last_620758504;
    }
    
    var last_620758506 = Temporary1;
    var subLast_620758507 = subInt((sub_620758502).length, 1);
    if ((subLast_620758507 == -1)) {
    result_620758505 = start_620758503;
    break BeforeRet;
    }
    
    var skip_620758508 = start_620758503;
    Label2: do {
        Label3: while (true) {
        if (!(subLast_620758507 <= subInt(last_620758506, skip_620758508))) break Label3;
          var i_620758509 = subLast_620758507;
          Label4: do {
              Label5: while (true) {
              if (!(s_620758501[chckIndx(addInt(skip_620758508, i_620758509), 0, (s_620758501).length - 1)] == sub_620758502[chckIndx(i_620758509, 0, (sub_620758502).length - 1)])) break Label5;
                if ((i_620758509 == 0)) {
                result_620758505 = skip_620758508;
                break BeforeRet;
                }
                
                i_620758509 = subInt(i_620758509, 1);
              }
          } while (false);
          skip_620758508 = addInt(skip_620758508, a_620758500[chckIndx(s_620758501[chckIndx(addInt(skip_620758508, subLast_620758507), 0, (s_620758501).length - 1)], 0, (a_620758500).length - 1)]);
        }
    } while (false);
    result_620758505 = -1;
    break BeforeRet;
  } while (false);

  return result_620758505;

}

function nsuReplaceStr(s_620758689, sub_620758690, by_620758691) {
  var result_620758692 = [];

    result_620758692 = nimCopy(null, [], NTI33554439);
    var subLen_620758693 = (sub_620758690).length;
    if ((subLen_620758693 == 0)) {
    result_620758692 = nimCopy(null, s_620758689, NTI33554439);
    }
    else {
    if ((subLen_620758693 == 1)) {
    var c_620758694 = sub_620758690[chckIndx(0, 0, (sub_620758690).length - 1)];
    var last_620758695 = (s_620758689).length - 1;
    var i_620758696 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          var j_620758697 = nsuFindChar(s_620758689, c_620758694, chckRange(i_620758696, 0, 2147483647), last_620758695);
          if ((j_620758697 < 0)) {
          break Label1;
          }
          
          result_620758692.push.apply(result_620758692, substr_33557906(s_620758689, i_620758696, subInt(j_620758697, 1)));;
          result_620758692.push.apply(result_620758692, by_620758691);;
          i_620758696 = addInt(j_620758697, subLen_620758693);
        }
    } while (false);
    result_620758692.push.apply(result_620758692, substr_33557918(s_620758689, i_620758696));;
    }
    else {
      var a_620758698 = [new Int32Array(256)];
      nsuInitSkipTable(a_620758698[0], sub_620758690);
      var last_620758699 = (s_620758689).length - 1;
      var i_620758700 = 0;
      Label3: do {
          Label4: while (true) {
          if (!true) break Label4;
            var j_620758701 = nsuFindStrA(a_620758698[0], s_620758689, sub_620758690, chckRange(i_620758700, 0, 2147483647), last_620758699);
            if ((j_620758701 < 0)) {
            break Label3;
            }
            
            result_620758692.push.apply(result_620758692, substr_33557906(s_620758689, i_620758700, subInt(j_620758701, 1)));;
            result_620758692.push.apply(result_620758692, by_620758691);;
            i_620758700 = addInt(j_620758701, subLen_620758693);
          }
      } while (false);
      result_620758692.push.apply(result_620758692, substr_33557918(s_620758689, i_620758700));;
    }
    }

  return result_620758692;

}

function nsuJoinSep(a_620758417, sep_620758418) {
  var result_620758419 = [];

    if ((0 < (a_620758417).length)) {
    var L_620758426 = mulInt((sep_620758418).length, subInt((a_620758417).length, 1));
    Label1: do {
      var i_620758434 = 0;
      var colontmp__486539730 = 0;
      colontmp__486539730 = (a_620758417).length - 1;
      var res_486539731 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539731 <= colontmp__486539730)) break Label3;
            i_620758434 = res_486539731;
            L_620758426 = addInt(L_620758426, (a_620758417[chckIndx(i_620758434, 0, (a_620758417).length - 1)]).length);
            res_486539731 = addInt(res_486539731, 1);
          }
      } while (false);
    } while (false);
    result_620758419 = nimCopy(null, mnewString(0), NTI33554439);
    result_620758419.push.apply(result_620758419, a_620758417[chckIndx(0, 0, (a_620758417).length - 1)]);;
    Label4: do {
      var i_620758446 = 0;
      var colontmp__486539734 = 0;
      colontmp__486539734 = (a_620758417).length - 1;
      var res_486539735 = 1;
      Label5: do {
          Label6: while (true) {
          if (!(res_486539735 <= colontmp__486539734)) break Label6;
            i_620758446 = res_486539735;
            result_620758419.push.apply(result_620758419, sep_620758418);;
            result_620758419.push.apply(result_620758419, a_620758417[chckIndx(i_620758446, 0, (a_620758417).length - 1)]);;
            res_486539735 = addInt(res_486539735, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      result_620758419 = nimCopy(null, [], NTI33554439);
    }
    

  return result_620758419;

}

function plateSample_486539402(sample_486539403, position_486539404, color_486539405) {
  var result_486539406 = [];

    var gapdhLine_486539415 = [nimCopy(null, position_486539404, NTI33554439), nimCopy(null, sample_486539403, NTI33554439), nimCopy(null, color_486539405, NTI33554439), [], [], makeNimstrLit("GAPDH"), makeNimstrLit("\"RGB(208,243,98)\""), makeNimstrLit("UNKNOWN"), makeNimstrLit("VIC"), makeNimstrLit("NFQ-MGB"), [], []];
    var rhdLine_486539416 = [nimCopy(null, position_486539404, NTI33554439), nimCopy(null, sample_486539403, NTI33554439), nimCopy(null, color_486539405, NTI33554439), [], [], makeNimstrLit("RHD"), makeNimstrLit("\"RGB(139,189,249)\""), makeNimstrLit("UNKNOWN"), makeNimstrLit("FAM"), makeNimstrLit("NFQ-MGB"), [], []];
    result_486539406 = nimCopy(null, (nsuJoinSep(gapdhLine_486539415, makeNimstrLit("\x09")) || []).concat(makeNimstrLit("\x0A") || [],nsuJoinSep(rhdLine_486539416, makeNimstrLit("\x09")) || [],makeNimstrLit("\x0A") || []), NTI33554439);

  return result_486539406;

}

function toPlateSetup_486539427(plate_486539428) {
  var result_486539429 = [];

    result_486539429 = nimCopy(null, makeNimstrLit("* Block Type = 96alum\x0A* Chemistry = TAQMAN\x0A* Experiment File Name = D:\\Users\\INSTR-USER\\Desktop\\Devyser RHD template 7500 v2_3 20200831.edt\x0A* Experiment Run End Time = Not Started\x0A* Instrument Type = sds7500\x0A* Passive Reference = ROX\x0A\x0A[Sample Setup]\x0AWell\x09Sample Name\x09Sample Color\x09Biogroup Name\x09Biogroup Color\x09Target Name\x09Target Color\x09Task\x09Reporter\x09Quencher\x09Quantity\x09Comments\x0A"), NTI33554439);
    var lastSampleId_486539430 = [];
    var colorId_486539431 = 0;
    Label1: do {
      var row_486539450 = 0;
      var res_486539727 = 65;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539727 <= 72)) break Label3;
            row_486539450 = chckRange(res_486539727, 65, 72);
            Label4: do {
              var col_486539469 = 0;
              var res_486539724 = 1;
              Label5: do {
                  Label6: while (true) {
                  if (!(res_486539724 <= 12)) break Label6;
                    col_486539469 = chckRange(res_486539724, 1, 12);
                    var sample_486539470 = nimCopy(null, plate_486539428[chckIndx(row_486539450, 65, (plate_486539428).length + (65) - 1) - (65)][chckIndx(col_486539469, 1, (plate_486539428[chckIndx(row_486539450, 65, (plate_486539428).length + (65) - 1) - (65)]).length + (1) - 1) - (1)], NTI33554439);
                    var pos_486539471 = (nimCharToStr(row_486539450) || []).concat(HEX24_335544323(col_486539469) || []);
                    if (!(eqStrings(sample_486539470, lastSampleId_486539430))) {
                    colorId_486539431 = modInt(addInt(colorId_486539431, 1), 9);
                    lastSampleId_486539430 = nimCopy(null, sample_486539470, NTI33554439);
                    }
                    
                    var samplecolor_486539479 = nimCopy(null, colors_486539426[chckIndx(colorId_486539431, 0, (colors_486539426).length - 1)], NTI33554439);
                    result_486539429.push.apply(result_486539429, plateSample_486539402(sample_486539470, pos_486539471, samplecolor_486539479));;
                    res_486539724 = addInt(res_486539724, 1);
                  }
              } while (false);
            } while (false);
            res_486539727 = addInt(res_486539727, 1);
          }
      } while (false);
    } while (false);

  return result_486539429;

}

function encode_637534250(s_637534251, safe_637534252) {
      var Temporary2;

  var result_637534253 = [];

    Label1: do {
      if (safe_637534252) {
      Temporary2 = cb64safe_637534213;
      }
      else {
      Temporary2 = cb64_637534212;
      }
      
      var lookupTable_637534408 = Temporary2;
      (result_637534253.length = chckRange(addInt(divInt(mulInt((s_637534251).length, 4), 3), 6), 0, 2147483647));
      var inputIndexHEX60gensym45_637534418 = 0;
      var outputIndexHEX60gensym45_637534419 = 0;
      var inputEndsHEX60gensym45_637534420 = subInt((s_637534251).length, modInt((s_637534251).length, 3));
      var nHEX60gensym45_637534421 = 0;
      var bHEX60gensym45_637534422 = 0;
      Label3: do {
          Label4: while (true) {
          if (!!((inputIndexHEX60gensym45_637534418 == inputEndsHEX60gensym45_637534420))) break Label4;
            bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
            nHEX60gensym45_637534421 = (bHEX60gensym45_637534422 << 16);
            inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
            bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
            nHEX60gensym45_637534421 = (nHEX60gensym45_637534421 | (bHEX60gensym45_637534422 << 8));
            inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
            bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
            nHEX60gensym45_637534421 = (nHEX60gensym45_637534421 | (bHEX60gensym45_637534422 << 0));
            inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
            result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 18) & 63), 0, (lookupTable_637534408).length - 1)];
            outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
            result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 12) & 63), 0, (lookupTable_637534408).length - 1)];
            outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
            result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 6) & 63), 0, (lookupTable_637534408).length - 1)];
            outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
            result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 0) & 63), 0, (lookupTable_637534408).length - 1)];
            outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
          }
      } while (false);
      var paddingHEX60gensym45_637534485 = modInt((s_637534251).length, 3);
      if ((paddingHEX60gensym45_637534485 == 1)) {
      bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
      nHEX60gensym45_637534421 = (bHEX60gensym45_637534422 << 16);
      inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 18) & 63), 0, (lookupTable_637534408).length - 1)];
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 12) & 63), 0, (lookupTable_637534408).length - 1)];
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = 61;
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = 61;
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      }
      else {
      if ((paddingHEX60gensym45_637534485 == 2)) {
      bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
      nHEX60gensym45_637534421 = (bHEX60gensym45_637534422 << 16);
      inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
      bHEX60gensym45_637534422 = s_637534251[chckIndx(inputIndexHEX60gensym45_637534418, 0, (s_637534251).length - 1)];
      nHEX60gensym45_637534421 = (nHEX60gensym45_637534421 | (bHEX60gensym45_637534422 << 8));
      inputIndexHEX60gensym45_637534418 = addInt(inputIndexHEX60gensym45_637534418, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 18) & 63), 0, (lookupTable_637534408).length - 1)];
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 12) & 63), 0, (lookupTable_637534408).length - 1)];
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = lookupTable_637534408[chckIndx(((nHEX60gensym45_637534421 >>> 6) & 63), 0, (lookupTable_637534408).length - 1)];
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      result_637534253[chckIndx(outputIndexHEX60gensym45_637534419, 0, (result_637534253).length - 1)] = 61;
      outputIndexHEX60gensym45_637534419 = addInt(outputIndexHEX60gensym45_637534419, 1);
      }
      }
      (result_637534253.length = chckRange(outputIndexHEX60gensym45_637534419, 0, 2147483647));
    } while (false);

  return result_637534253;

}

function toDataUrl_486539386(contents_486539387) {
  var result_486539388 = [];

    result_486539388 = nimCopy(null, (makeNimstrLit("data:text/plain;base64,") || []).concat(encode_637534250(contents_486539387, false) || []), NTI33554439);

  return result_486539388;

}

function columnIndex_486539480() {
  var result_486539481 = [];

    var colIndex_486539482 = makeNimstrLit("<td></td>");
    Label1: do {
      var col_486539495 = 0;
      var res_486539750 = 1;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539750 <= 12)) break Label3;
            col_486539495 = chckRange(res_486539750, 1, 12);
            colIndex_486539482.push.apply(colIndex_486539482, (makeNimstrLit("<td><small>") || []).concat(HEX24_335544323(col_486539495) || [],makeNimstrLit("</small></td>") || []));;
            res_486539750 = addInt(res_486539750, 1);
          }
      } while (false);
    } while (false);
    result_486539481 = nimCopy(null, (makeNimstrLit("<tr>") || []).concat(colIndex_486539482 || [],makeNimstrLit("</tr>") || []), NTI33554439);

  return result_486539481;

}

function plateToTable_486539496(plate_486539497) {
  var result_486539498 = [];

    var rows_486539499 = columnIndex_486539480();
    Label1: do {
      var row_486539512 = 0;
      var res_486539747 = 65;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539747 <= 72)) break Label3;
            row_486539512 = chckRange(res_486539747, 65, 72);
            var rowData_486539513 = (makeNimstrLit("<td><small>") || []).concat([row_486539512],makeNimstrLit("</small></td>") || []);
            Label4: do {
              var sample_486539539 = [];
              var colontmp__486539743 = [[], [], [], [], [], [], [], [], [], [], [], []];
              colontmp__486539743 = nimCopy(colontmp__486539743, plate_486539497[chckIndx(row_486539512, 65, (plate_486539497).length + (65) - 1) - (65)], NTI486539280);
              var i_486539745 = 1;
              Label5: do {
                  Label6: while (true) {
                  if (!true) break Label6;
                    sample_486539539 = colontmp__486539743[chckIndx(i_486539745, 1, (colontmp__486539743).length + (1) - 1) - (1)];
                    rowData_486539513.push.apply(rowData_486539513, (makeNimstrLit("<td><small>") || []).concat(sample_486539539 || [],makeNimstrLit("</small></td>") || []));;
                    if ((12 <= i_486539745)) {
                    break Label5;
                    }
                    
                    i_486539745 = addInt(i_486539745, 1);
                  }
              } while (false);
            } while (false);
            rows_486539499.push.apply(rows_486539499, (makeNimstrLit("<tr>") || []).concat(rowData_486539513 || [],makeNimstrLit("</tr>") || []));;
            res_486539747 = addInt(res_486539747, 1);
          }
      } while (false);
    } while (false);
    result_486539498 = nimCopy(null, (makeNimstrLit("<table>") || []).concat(rows_486539499 || [],makeNimstrLit("</table>") || []), NTI33554439);

  return result_486539498;

}

function htmlResult_486539549(contents_486539550, file_486539551) {
  var result_486539552 = null;

    var linkText_486539553 = linkFileName_486539390(file_486539551);
    var plate_486539554 = parseRackFile_486539321(contents_486539550);
    var plateSetup_486539555 = nsuReplaceStr(toPlateSetup_486539427(plate_486539554), makeNimstrLit("\x0A"), makeNimstrLit("\x0D\x0A"));
    var dataUrl_486539556 = toDataUrl_486539386(plateSetup_486539555);
    var s_486539557 = [];
    s_486539557 = nimCopy(null, makeNimstrLit("<h3>L\xC3\xA4nk till konverterad fil</h3>"), NTI33554439);
    s_486539557.push.apply(s_486539557, (makeNimstrLit("<p><a href=\"") || []).concat(dataUrl_486539556 || [],makeNimstrLit("\" download=\"") || [],linkText_486539553 || [],makeNimstrLit("\">") || [],linkText_486539553 || [],makeNimstrLit("</a></p>") || []));;
    s_486539557.push.apply(s_486539557, (makeNimstrLit("<p><details><summary>Visa filens inneh\xC3\xA5ll</summary><pre><code>") || []).concat(plateSetup_486539555 || [],makeNimstrLit("</code></pre></details></p>") || []));;
    s_486539557.push.apply(s_486539557, (makeNimstrLit("<p><details><summary>Visa platta</summary>") || []).concat(plateToTable_486539496(plate_486539554) || [],makeNimstrLit("</details></p>") || []));;
    result_486539552 = toJSStr(s_486539557);

  return result_486539552;

}

function parseAndOutput_486539581(c_486539582, file_486539583) {
    document.getElementById("showcontent").innerHTML = htmlResult_486539549(c_486539582, file_486539583);

  
}

function fileLoaded() {
    
function HEX3Aanonymous_486539592(ev_486539593) {
        parseAndOutput_486539581(cstrToNimstr(reader_486539591.result), cstrToNimstr(file_486539590.name));

      
    }

  BeforeRet: do {
    var fileInput_486539585 = document.getElementById("fileInput");
    if (((fileInput_486539585.files).length == 0)) {
    break BeforeRet;
    }
    
    var file_486539590 = fileInput_486539585.files[chckIndx(0, 0, (fileInput_486539585.files).length - 1)];
    var reader_486539591 = new FileReader();
    reader_486539591.addEventListener("load", HEX3Aanonymous_486539592, false);
    reader_486539591.readAsText(file_486539590, "UTF-8");
  } while (false);

  
}
