/* Generated by the Nim Compiler v2.0.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1140850839 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1140850820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850821 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1140850764 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850763 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850765 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI754974789 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555178;
var NNI754974789 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI754974789.node = NNI754974789;
var NNI1140850763 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850763, name: "bloodGroup", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850763, name: "specialMessage", len: 0, sons: null}}};
NTI1140850763.node = NNI1140850763;
var NNI1140850764 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850764, name: "Default: Intended Use Not Specified", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection Use Only", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850764, name: "For Emergency Use Only", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection/Biohazardous", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection/Eligible for Crossover", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1140850764, name: "Autologous Collection/Eligible for Crossover", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1140850764, name: "For Autologous Use Only", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1140850764, name: "For Autologous Use Only/Biohazardous", len: 0, sons: null}}};
NTI1140850764.node = NNI1140850764;
var NNI1140850765 = {kind: 3, offset: "kind", len: 2, typ: NTI1140850763, name: "kind", sons: [[setConstr(0), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "group", len: 0, typ: NTI33554449, name: "group", sons: null}, 
{kind: 1, offset: "collectionInformation", len: 0, typ: NTI1140850764, name: "collectionInformation", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null}]]};
NTI1140850765.node = NNI1140850765;
var NNI1140850819 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850819, name: "rhK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850819, name: "mi", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850819, name: "special", len: 0, sons: null}}};
NTI1140850819.node = NNI1140850819;
var NNI1140850820 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850820, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850820, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850820, name: "?", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1140850820, name: "unknown", len: 0, sons: null}}};
NTI1140850820.node = NNI1140850820;
var NNI1140850821 = {kind: 3, offset: "kind", len: 3, typ: NTI1140850819, name: "kind", sons: [[setConstr(0), {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kell", len: 0, typ: NTI1140850820, name: "kell", sons: null}, 
{kind: 1, offset: "rhC", len: 0, typ: NTI1140850820, name: "rhC", sons: null}, 
{kind: 1, offset: "rhsmallc", len: 0, typ: NTI1140850820, name: "rhsmallc", sons: null}, 
{kind: 1, offset: "rhE", len: 0, typ: NTI1140850820, name: "rhE", sons: null}, 
{kind: 1, offset: "rhsmalle", len: 0, typ: NTI1140850820, name: "rhsmalle", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "mipheno", len: 0, typ: NTI1140850820, name: "mipheno", sons: null}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]};
NTI1140850821.node = NNI1140850821;
NTI1140850839.base = NTI1140850820;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr([65, 78], [80, 90], [49, 57]);
var ConstSet3 = setConstr([97, 122]);

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet6 = setConstr([50, 57]);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
var ConstSet7 = setConstr(0);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_385875976(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557616;

}
var ConstSet8 = setConstr(0);
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(0);
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(0);
var ConstSet13 = setConstr(0);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(1);

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570425507 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570425507 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570425507;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570425507 = addInt(i_570425507, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function startsWith_704644521(s_704644522, prefix_704644523) {
  var result_704644524 = false;

    result_704644524 = ((0 < (s_704644522).length) && (s_704644522[chckIndx(0, 0, (s_704644522).length - 1)] == prefix_704644523));

  return result_704644524;

}

function nsuStartsWith(s_704644526, prefix_704644527) {
  var result_704644528 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_704644533 = (prefix_704644527).length;
    var sLenHEX60gensym146_704644534 = (s_704644526).length;
    var iHEX60gensym146_704644535 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_704644533 <= iHEX60gensym146_704644535)) {
          result_704644528 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_704644534 <= iHEX60gensym146_704644535) || !((s_704644526[chckIndx(iHEX60gensym146_704644535, 0, (s_704644526).length - 1)] == prefix_704644527[chckIndx(iHEX60gensym146_704644535, 0, (prefix_704644527).length - 1)])))) {
          result_704644528 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_704644535 = addInt(iHEX60gensym146_704644535, 1);
        }
    };
  };

  return result_704644528;

}

function classifyDataStructure_570425393(code_570425394) {
    var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_570425395 = 0;

      if (!startsWith_704644521(code_570425394, 61)) Temporary2 = false; else {        Temporary2 = (ConstSet2[code_570425394[chckIndx(1, 0, (code_570425394).length - 1)]] != undefined);      }    if (Temporary2) {
    Temporary1 = 0;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,37])) {
    Temporary1 = 1;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,60])) {
    Temporary1 = 2;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,62])) {
    Temporary1 = 3;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,62])) {
    Temporary1 = 4;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,42])) {
    Temporary1 = 5;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,42])) {
    Temporary1 = 6;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,125])) {
    Temporary1 = 7;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,125])) {
    Temporary1 = 8;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,40])) {
    Temporary1 = 9;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,123])) {
    Temporary1 = 10;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,92])) {
    Temporary1 = 11;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,92])) {
    Temporary1 = 12;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,123])) {
    Temporary1 = 13;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,91])) {
    Temporary1 = 14;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,34])) {
    Temporary1 = 15;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,41])) {
    Temporary1 = 16;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,41])) {
    Temporary1 = 17;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,59])) {
    Temporary1 = 18;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,39])) {
    Temporary1 = 19;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,45])) {
    Temporary1 = 20;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,45])) {
    Temporary1 = 21;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,43])) {
    Temporary1 = 22;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,35])) {
    Temporary1 = 23;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,35])) {
    Temporary1 = 24;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,93])) {
    Temporary1 = 25;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,34])) {
    Temporary1 = 26;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,36])) {
    Temporary1 = 27;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,36])) {
    Temporary1 = 28;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,37])) {
    Temporary1 = 29;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,32])) {
    Temporary1 = 30;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,44])) {
    Temporary1 = 31;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,43])) {
    Temporary1 = 32;
    }
    else {
    if (nsuStartsWith(code_570425394, [61,47])) {
    Temporary1 = 33;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,44,49])) {
    Temporary1 = 34;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,44,50])) {
    Temporary1 = 35;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,44,51])) {
    Temporary1 = 36;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,44,52])) {
    Temporary1 = 37;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,41,58])) {
    Temporary1 = 38;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,47])) {
    Temporary1 = 39;
    }
    else {
      if (!startsWith_704644521(code_570425394, 38)) Temporary3 = false; else {        Temporary3 = (ConstSet3[code_570425394[chckIndx(1, 0, (code_570425394).length - 1)]] != undefined);      }    if (Temporary3) {
    Temporary1 = 40;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,59])) {
    Temporary1 = 41;
    }
    else {
    if (nsuStartsWith(code_570425394, [38,33])) {
    Temporary1 = 42;
    }
    else {
      raiseException({message: ([111,107,195,164,110,116,32,112,114,101,102,105,120,58,32] || []).concat(code_570425394 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
    result_570425395 = Temporary1;

  return result_570425395;

}

function interpretFlagSwe_1107296361(din_1107296362) {
    var Temporary1;

  var result_1107296363 = [];

    switch (toJSStr(din_1107296362.flagCharacters)) {
    case "01":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "02":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "03":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "04":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "31":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "32":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "33":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "34":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "41":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "42":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "43":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "44":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "51":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "52":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "53":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "54":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "05":
      Temporary1 = [65,110,110,97,110,32,40,117,112,112,114,101,112,97,100,41,32,34,111,110,32,100,101,109,97,110,100,34,45,116,114,121,99,107,116,32,100,101,108,32,97,118,32,101,116,105,107,101,116,116,101,110];
      break;
    case "06":
      Temporary1 = [80,105,108,111,116,114,195,182,114];
      break;
    case "07":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,115,109,105,116,116,101,115,116,101,114];
      break;
    case "08":
      Temporary1 = [71,105,118,97,114,100,111,107,117,109,101,110,116,97,116,105,111,110,32,40,98,108,97,110,107,101,116,116,32,102,195,182,114,32,104,195,164,108,115,111,100,101,107,108,97,114,97,116,105,111,110,41];
      break;
    case "09":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,78,65,84];
      break;
    case "10":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,117,110,100,101,114,115,195,182,107,110,105,110,103,32,97,118,32,98,97,107,116,101,114,105,101,108,108,32,118,195,164,120,116];
      break;
    case "20":
      Temporary1 = [80,97,99,107,115,101,100,101,108,32,40,118,105,100,32,116,114,97,110,115,112,111,114,116,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,116,105,108,108,32,97,110,110,97,110,32,98,108,111,100,99,101,110,116,114,97,108,41];
      break;
    case "30":
      Temporary1 = [70,195,182,108,106,101,115,101,100,101,108,32,116,105,108,108,32,98,108,111,100,112,195,165,115,101,110];
      break;
    case "40":
      Temporary1 = [65,110,118,195,164,110,100,101,115,32,118,105,100,32,105,110,107,195,182,112,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,109,195,164,114,107,116,97,32,109,101,100,32,110,117,109,109,101,114,32,48,48];
      break;
    case "50":
      Temporary1 = [75,118,105,116,116,101,110,115,44,32,97,110,118,195,164,110,100,115,32,118,105,100,32,111,98,101,109,97,110,110,97,100,32,100,101,112,195,165];
      break;
    default: 
      Temporary1 = [69,106,32,100,101,102,105,110,105,101,114,97,100,32,105,32,72,97,110,100,98,111,107,32,102,195,182,114,32,98,108,111,100,118,101,114,107,115,97,109,104,101,116];
      break;
    }
    result_1107296363 = nimCopy(null, Temporary1, NTI33554449);

  return result_1107296363;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_721420613() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_721420651(s_721420652, b_721420653, b_721420653_Idx) {
      var Temporary1;
          var Temporary4;

  var result_721420654 = 0;

    var sign_721420655 = (-1n);
    var i_721420656 = 0;
    if ((i_721420656 < (s_721420652).length)) {
    if ((s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)] == 43)) {
    i_721420656 += 1;
    }
    else {
    if ((s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)] == 45)) {
    i_721420656 += 1;
    sign_721420655 = 1n;
    }
    }
    }
    
      if (!(i_721420656 < (s_721420652).length)) Temporary1 = false; else {        Temporary1 = (ConstSet4[s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)]] != undefined);      }    if (Temporary1) {
    b_721420653[b_721420653_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_721420656 < (s_721420652).length)) Temporary4 = false; else {            Temporary4 = (ConstSet5[s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_721420690 = (s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_721420690)) / 10n <= b_721420653[b_721420653_Idx])) {
          b_721420653[b_721420653_Idx] = ((b_721420653[b_721420653_Idx] * 10n) - BigInt(c_721420690));
          }
          else {
          integerOutOfRangeError_721420613();
          }
          
          i_721420656 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_721420656 < (s_721420652).length) && (s_721420652[chckIndx(i_721420656, 0, (s_721420652).length - 1)] == 95))) break Label6;
                i_721420656 += 1;
              }
          };
        }
    };
    if (((sign_721420655 == (-1n)) && (b_721420653[b_721420653_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_721420613();
    }
    else {
      b_721420653[b_721420653_Idx] = (b_721420653[b_721420653_Idx] * sign_721420655);
      result_721420654 = i_721420656;
    }
    
    }
    

  return result_721420654;

}

function npuParseBiggestInt(s_721420713, number_721420714, number_721420714_Idx) {
  var result_721420715 = 0;

    var res_721420716 = [0n];
    result_721420715 = rawParseInt_721420651(s_721420713, res_721420716, 0);
    if (!((result_721420715 == 0))) {
    number_721420714[number_721420714_Idx] = res_721420716[0];
    }
    

  return result_721420715;

}

function npuParseInt(s_721420718, number_721420719, number_721420719_Idx) {
  var result_721420720 = 0;

    var res_721420721 = [0n];
    result_721420720 = npuParseBiggestInt(s_721420718, res_721420721, 0);
    if (((res_721420721[0] < (-2147483648n)) || (2147483647n < res_721420721[0]))) {
    integerOutOfRangeError_721420613();
    }
    
    if (!((result_721420720 == 0))) {
    number_721420719[number_721420719_Idx] = chckRange(Number(res_721420721[0]), (-2147483648), 2147483647);
    }
    

  return result_721420720;

}

function parseInt_721421231(s_721421232, number_721421233, number_721421233_Idx, start_721421234) {
  var result_721421235 = 0;

    result_721421235 = npuParseInt((s_721421232.slice(start_721421234, (s_721421232).length - 1 + 1)), number_721421233, number_721421233_Idx);

  return result_721421235;

}

function nsuParseInt(s_704643929) {
  var result_704643930 = [0];

    result_704643930[0] = 0;
    var L_704643931 = parseInt_721421231(s_704643929, result_704643930, 0, 0);
    if ((!((L_704643931 == (s_704643929).length)) || (L_704643931 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_704643929 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643930[0];

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function interpretFlag_1107296364(din_1107296365) {
  var result_1107296366 = [];

    switch (toJSStr(din_1107296365.flagCharacters)) {
    case "00":
      result_1107296366 = nimCopy(null, [70,108,97,103,32,110,111,116,32,117,115,101,100,59,32,110,117,108,108,32,118,97,108,117,101], NTI33554449);
      break;
    case "01":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,49,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "02":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,50,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "03":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,51,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "04":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,52,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "05":
      result_1107296366 = nimCopy(null, [83,101,99,111,110,100,32,40,111,114,32,114,101,112,101,97,116,101,100,41,32,226,128,156,100,101,109,97,110,100,45,112,114,105,110,116,101,100,226,128,157,32,108,97,98,101,108], NTI33554449);
      break;
    case "06":
      result_1107296366 = nimCopy(null, [80,105,108,111,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "07":
      result_1107296366 = nimCopy(null, [84,101,115,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "08":
      result_1107296366 = nimCopy(null, [68,111,110,111,114,32,114,101,99,111,114,100,32,108,97,98,101,108], NTI33554449);
      break;
    case "09":
      result_1107296366 = nimCopy(null, [83,97,109,112,108,101,32,116,117,98,101,32,102,111,114,32,78,65,84,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "10":
      result_1107296366 = nimCopy(null, [83,97,109,112,108,101,115,32,102,111,114,32,98,97,99,116,101,114,105,97,108,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "11":
      result_1107296366 = nimCopy(null, [77,97,116,99,104,32,119,105,116,104,32,85,110,105,116,32,108,97,98,101,108], NTI33554449);
      break;
    case "12":
      result_1107296366 = nimCopy(null, [65,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108], NTI33554449);
      break;
    case "13":
      result_1107296366 = nimCopy(null, [65,116,116,97,99,104,101,100,32,108,97,98,101,108,32,40,105,110,116,101,110,100,101,100,32,116,111,32,98,101,32,117,115,101,100,32,119,105,116,104,32,97,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108,41], NTI33554449);
      break;
    case "14":
      result_1107296366 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      break;
    case "15":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,53,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "16":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,54,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "17":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,55,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "18":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,56,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "19":
      result_1107296366 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,57,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    default: 
++excHandler;
      try {
      var numeric_1107296367 = nsuParseInt(din_1107296365.flagCharacters);
      if (      numeric_1107296367 >= 20 && numeric_1107296367 <= 59      ){        result_1107296366 = nimCopy(null, makeNimstrLit("Reserved for assignment and use by each local facility. Therefore the meaning and interpretation of flag values 20\xE2\x80\x9359 may differ with each FIN and should not be interpreted at any other site"), NTI33554449);
        }
      else if (      numeric_1107296367 >= 60 && numeric_1107296367 <= 96      ){        result_1107296366 = nimCopy(null, makeNimstrLit("ISO/IEC 7064 modulo 37-2 check character on the preceding thirteen (13) data characters, \xCE\xB1ppppyynnnnnn including the FIN, year and the unit sequence number \xE2\x80\x94 value is assigned as 60 plus the modulo 37-2 checksum"), NTI33554449);
        }
      else{
        result_1107296366 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      result_1107296366 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    }

  return result_1107296366;

}

function toHtml_1107296368(din_1107296369) {
  var result_1107296370 = [];

    result_1107296370 = nimCopy(null, [60,98,62,84,97,112,112,110,105,110,103,115,110,117,109,109,101,114,32,40,68,111,110,97,116,105,111,110,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114,41,60,47,98,62], NTI33554449);
    var head_1107296402 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1107296403 = (makeNimstrLit("<tbody><tr><td>Blodcentralskod (Facility Identification Number)</td><td>") || []).concat(din_1107296369.facilityIdentificationNumber || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],din_1107296369.year || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,76,195,182,112,110,117,109,109,101,114,60,47,116,100,62,60,116,100,62] || [],din_1107296369.sequence || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,78,117,109,109,101,114,109,97,114,107,195,182,114,60,47,116,100,62,60,116,100,62] || [],din_1107296369.flagCharacters || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,110,117,109,109,101,114,109,97,114,107,195,182,114,44,32,115,118,101,110,115,107,60,47,105,62,60,47,116,100,62,60,116,100,62] || [],interpretFlagSwe_1107296361(din_1107296369) || [],makeNimstrLit("</td></tr><tr><td><i>Tolkning nummermark\xC3\xB6r, ISBT 128</i></td><td>") || [],interpretFlag_1107296364(din_1107296369) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1107296370.push.apply(result_1107296370, ([60,116,97,98,108,101,62] || []).concat(head_1107296402 || [],body_1107296403 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1107296370;

}

function verifyDonationIdentificationNumber_1107296265(din_1107296266) {
    if (!(((din_1107296266).length == 16))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((din_1107296266).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570425516 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425516 < L_704644360)) break Label3;
            i_704644365 = i_570425516;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570425516 = addInt(i_570425516, 1);
          }
      };
    };

  return result_704644356;

}

function HEX2EHEX2E_1023410224(a_1023410227, b_1023410228) {
  var result_1023410229 = ({a: 0, b: 0});

    result_1023410229 = nimCopy(result_1023410229, {a: a_1023410227, b: b_1023410228}, NTI754974789);

  return result_1023410229;

}

function parseDonationIdentificationNumber_1107296268(code_1107296269) {
  var result_1107296270 = ({dataIdentifier: [], facilityIdentificationNumber: [], year: [], sequence: [], flagCharacters: []});

    verifyDonationIdentificationNumber_1107296265(code_1107296269);
    result_1107296270.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1107296269, HEX2EHEX2E_1023410224(0, 0)), NTI33554449);
    result_1107296270.facilityIdentificationNumber = nimCopy(null, HEX5BHEX5D_704644351(code_1107296269, HEX2EHEX2E_1023410224(1, 5)), NTI33554449);
    result_1107296270.year = nimCopy(null, HEX5BHEX5D_704644351(code_1107296269, HEX2EHEX2E_1023410224(6, 7)), NTI33554449);
    result_1107296270.sequence = nimCopy(null, HEX5BHEX5D_704644351(code_1107296269, HEX2EHEX2E_1023410224(8, 13)), NTI33554449);
    result_1107296270.flagCharacters = nimCopy(null, HEX5BHEX5D_704644351(code_1107296269, HEX2EHEX2E_1023410224(14, 15)), NTI33554449);

  return result_1107296270;

}

function interpretCollectionInformation_1140850797(bg_1140850798) {
  var result_1140850799 = 0;

++excHandler;
    try {
    var numeric_1140850800 = nsuParseInt(bg_1140850798.aboRhD);
    if (    numeric_1140850800 == 95 || 
    numeric_1140850800 == 51 || 
    numeric_1140850800 == 6 || 
    numeric_1140850800 == 62 || 
    numeric_1140850800 == 17 || 
    numeric_1140850800 == 73 || 
    numeric_1140850800 == 28 || 
    numeric_1140850800 == 84 || 
    numeric_1140850800 == 55 || 
    numeric_1140850800 == 66 || 
    numeric_1140850800 == 77 || 
    numeric_1140850800 == 88    ){      result_1140850799 = 0;
      }
    else if (    numeric_1140850800 == 91 || 
    numeric_1140850800 == 47 || 
    numeric_1140850800 == 2 || 
    numeric_1140850800 == 58 || 
    numeric_1140850800 == 13 || 
    numeric_1140850800 == 69 || 
    numeric_1140850800 == 24 || 
    numeric_1140850800 == 80    ){      result_1140850799 = 1;
      }
    else if (    numeric_1140850800 == 92 || 
    numeric_1140850800 == 48 || 
    numeric_1140850800 == 3 || 
    numeric_1140850800 == 59 || 
    numeric_1140850800 == 14 || 
    numeric_1140850800 == 70 || 
    numeric_1140850800 == 25 || 
    numeric_1140850800 == 81    ){      result_1140850799 = 2;
      }
    else if (    numeric_1140850800 == 93 || 
    numeric_1140850800 == 49 || 
    numeric_1140850800 == 4 || 
    numeric_1140850800 == 60 || 
    numeric_1140850800 == 15 || 
    numeric_1140850800 == 71 || 
    numeric_1140850800 == 26 || 
    numeric_1140850800 == 82    ){      result_1140850799 = 3;
      }
    else if (    numeric_1140850800 == 94 || 
    numeric_1140850800 == 50 || 
    numeric_1140850800 == 5 || 
    numeric_1140850800 == 61 || 
    numeric_1140850800 == 16 || 
    numeric_1140850800 == 72 || 
    numeric_1140850800 == 27 || 
    numeric_1140850800 == 83    ){      result_1140850799 = 4;
      }
    else if (    numeric_1140850800 == 96 || 
    numeric_1140850800 == 52 || 
    numeric_1140850800 == 7 || 
    numeric_1140850800 == 63 || 
    numeric_1140850800 == 18 || 
    numeric_1140850800 == 74 || 
    numeric_1140850800 == 29 || 
    numeric_1140850800 == 85    ){      result_1140850799 = 5;
      }
    else if (    numeric_1140850800 == 97 || 
    numeric_1140850800 == 53 || 
    numeric_1140850800 == 8 || 
    numeric_1140850800 == 64 || 
    numeric_1140850800 == 19 || 
    numeric_1140850800 == 75 || 
    numeric_1140850800 == 30 || 
    numeric_1140850800 == 86    ){      result_1140850799 = 6;
      }
    else if (    numeric_1140850800 == 98 || 
    numeric_1140850800 == 54 || 
    numeric_1140850800 == 9 || 
    numeric_1140850800 == 65 || 
    numeric_1140850800 == 20 || 
    numeric_1140850800 == 76 || 
    numeric_1140850800 == 31 || 
    numeric_1140850800 == 87    ){      result_1140850799 = 7;
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var two_1140850801 = bg_1140850798.aboRhD[chckIndx(1, 0, (bg_1140850798.aboRhD).length - 1)];
    switch (two_1140850801) {
    case 48:
    case 54:
      result_1140850799 = 0;
      break;
    case 50:
      result_1140850799 = 1;
      break;
    case 51:
      result_1140850799 = 2;
      break;
    case 52:
      result_1140850799 = 3;
      break;
    case 53:
      result_1140850799 = 4;
      break;
    case 55:
      result_1140850799 = 5;
      break;
    case 56:
      result_1140850799 = 6;
      break;
    case 57:
      result_1140850799 = 7;
      break;
    default: 
      break;
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1140850799;

}

function interpretABORhD_1140850818(bg_1140850819) {
  var result_1140850820 = ({kind: 0, group: [], collectionInformation: 0, message: []});

  BeforeRet: {
    var group_1140850821 = [];
    var collect_1140850822 = 0;
++excHandler;
    try {
    var numeric_1140850823 = nsuParseInt(bg_1140850819.aboRhD);
    if (    numeric_1140850823 >= 91 && numeric_1140850823 <= 98    ){      group_1140850821 = nimCopy(null, [79,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 47 && numeric_1140850823 <= 54    ){      group_1140850821 = nimCopy(null, [79,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 2 && numeric_1140850823 <= 9    ){      group_1140850821 = nimCopy(null, [65,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 58 && numeric_1140850823 <= 65    ){      group_1140850821 = nimCopy(null, [65,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 13 && numeric_1140850823 <= 20    ){      group_1140850821 = nimCopy(null, [66,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 69 && numeric_1140850823 <= 76    ){      group_1140850821 = nimCopy(null, [66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 24 && numeric_1140850823 <= 31    ){      group_1140850821 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 80 && numeric_1140850823 <= 87    ){      group_1140850821 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 == 55    ){      group_1140850821 = nimCopy(null, [79], NTI33554449);
      }
    else if (    numeric_1140850823 == 66    ){      group_1140850821 = nimCopy(null, [65], NTI33554449);
      }
    else if (    numeric_1140850823 == 77    ){      group_1140850821 = nimCopy(null, [66], NTI33554449);
      }
    else if (    numeric_1140850823 == 88    ){      group_1140850821 = nimCopy(null, [65,66], NTI33554449);
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var one_1140850824 = bg_1140850819.aboRhD[chckIndx(0, 0, (bg_1140850819.aboRhD).length - 1)];
    var two_1140850825 = bg_1140850819.aboRhD[chckIndx(1, 0, (bg_1140850819.aboRhD).length - 1)];
    if ((ConstSet6[two_1140850825] != undefined)) {
    switch (one_1140850824) {
    case 80:
      group_1140850821 = nimCopy(null, [79], NTI33554449);
      break;
    case 65:
      group_1140850821 = nimCopy(null, [65], NTI33554449);
      break;
    case 66:
      group_1140850821 = nimCopy(null, [66], NTI33554449);
      break;
    case 67:
      group_1140850821 = nimCopy(null, [65,66], NTI33554449);
      break;
    case 68:
      group_1140850821 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 69:
      group_1140850821 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 71:
      group_1140850821 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 72:
      group_1140850821 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 73:
      group_1140850821 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 74:
      group_1140850821 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 75:
      group_1140850821 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 76:
      group_1140850821 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 77:
      group_1140850821 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 78:
      group_1140850821 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 79:
      group_1140850821 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 81:
      group_1140850821 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    default: 
      break;
    }
    }
    else {
    if ((two_1140850825 == 48)) {
    switch (one_1140850824) {
    case 65:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,65,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 66:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,66,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 67:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,65,66,44,32,112,111,111,108,101,100,32,82,104,68,32,91,80,111,111,108,101,100,32,80,114,111,100,117,99,116,115,93], NTI33554449);
      break;
    case 68:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 69:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 70:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 71:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 72:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,32,40,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100,41], NTI33554449);
      break;
    case 73:
      group_1140850821 = nimCopy(null, [65,49], NTI33554449);
      break;
    case 74:
      group_1140850821 = nimCopy(null, [65,50], NTI33554449);
      break;
    case 75:
      group_1140850821 = nimCopy(null, [65,60,115,117,98,62,49,60,47,115,117,98,62,66], NTI33554449);
      break;
    case 76:
      group_1140850821 = nimCopy(null, [65,60,115,117,98,62,50,60,47,115,117,98,62,66], NTI33554449);
      break;
    default: 
      break;
    }
    }
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    if ((0 < (group_1140850821).length)) {
    collect_1140850822 = interpretCollectionInformation_1140850797(bg_1140850819);
    result_1140850820 = nimCopy(result_1140850820, {kind: 0, group: nimCopy(null, group_1140850821, NTI33554449), collectionInformation: collect_1140850822, message: []}, NTI1140850765);
    break BeforeRet;
    }
    else {
      switch (toJSStr(bg_1140850819.aboRhD)) {
      case "00":
        group_1140850821 = nimCopy(null, [78,111,32,65,66,79,32,111,114,32,82,104,32,105,110,102,111,114,109,97,116,105,111,110,32,105,115,32,97,118,97,105,108,97,98,108,101], NTI33554449);
        break;
      case "Ma":
        group_1140850821 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110], NTI33554449);
        break;
      case "Mb":
        group_1140850821 = nimCopy(null, [66,105,111,104,97,122,97,114,100,111,117,115], NTI33554449);
        break;
      case "Md":
        group_1140850821 = nimCopy(null, [68,105,115,99,97,114,100,32,40,116,111,32,98,101,32,100,101,115,116,114,111,121,101,100,41], NTI33554449);
        break;
      case "Mf":
        group_1140850821 = nimCopy(null, [70,111,114,32,102,114,97,99,116,105,111,110,97,116,105,111,110,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mq":
        group_1140850821 = nimCopy(null, [81,117,97,114,97,110,116,105,110,101,47,104,111,108,100,32,102,111,114,32,102,117,114,116,104,101,114,32,116,101,115,116,105,110,103,32,111,114,32,112,114,111,99,101,115,115,105,110,103], NTI33554449);
        break;
      case "Mr":
        group_1140850821 = nimCopy(null, [70,111,114,32,114,101,115,101,97,114,99,104,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mx":
        group_1140850821 = nimCopy(null, [78,111,116,32,102,111,114,32,116,114,97,110,115,102,117,115,105,111,110,32,98,97,115,101,100,32,111,110,32,116,101,115,116,32,114,101,115,117,108,116,115], NTI33554449);
        break;
      case "T1":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,112,111,115,105,116,105,118,101], NTI33554449);
        break;
      case "T2":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,101,103,97,116,105,118,101], NTI33554449);
        break;
      case "T3":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100], NTI33554449);
        break;
      case "T4":
        group_1140850821 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110,47,105,110,32,113,117,97,114,97,110,116,105,110,101], NTI33554449);
        break;
      case "T5":
        group_1140850821 = nimCopy(null, [83,101,101,32,111,117,116,101,114,32,112,97,99,107,97,103,105,110,103,32,102,111,114,32,112,114,111,100,117,99,116,32,115,116,97,116,117,115], NTI33554449);
        break;
      case "T6":
        group_1140850821 = nimCopy(null, [77,117,115,116,32,98,101,32,115,116,101,114,105,108,105,122,101,100,32,98,101,102,111,114,101,32,114,101,108,101,97,115,101], NTI33554449);
        break;
      default: 
        break;
      }
      if ((0 < (group_1140850821).length)) {
      result_1140850820 = nimCopy(result_1140850820, {kind: 1, message: nimCopy(null, group_1140850821, NTI33554449), group: [], collectionInformation: 0}, NTI1140850765);
      break BeforeRet;
      }
      
    }
    
    if (eqStrings(group_1140850821, [])) {
    raiseException({message: ([107,117,110,100,101,32,105,110,116,101,32,116,111,108,107,97,32,98,108,111,100,103,114,117,112,112,32,102,195,182,114,58,32,39] || []).concat(bg_1140850819.aboRhD || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  };

  return result_1140850820;

}

function interpretKell_1140850896(bg_1140850897) {
  var result_1140850898 = 0;

    switch (bg_1140850897.rhKellMi[chckIndx(0, 0, (bg_1140850897.rhKellMi).length - 1)]) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 88:
      result_1140850898 = 2;
      break;
    case 83:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 89:
      result_1140850898 = 1;
      break;
    case 84:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 90:
      result_1140850898 = 0;
      break;
    case 85:
    case 86:
    case 87:
      result_1140850898 = 3;
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,75,101,108,108,58,32,39] || []).concat(bg_1140850897.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1140850898;

}

function interpretRh_1140850916(bg_1140850917) {
  var result_1140850918 = new Uint8Array(4);

    switch (bg_1140850917.rhKellMi[chckIndx(0, 0, (bg_1140850917.rhKellMi).length - 1)]) {
    case 48:
    case 83:
    case 84:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([2, 2, 2, 2]), NTI1140850839);
      break;
    case 49:
    case 65:
    case 74:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 1, 0]), NTI1140850839);
      break;
    case 50:
    case 66:
    case 75:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 1, 0]), NTI1140850839);
      break;
    case 51:
    case 67:
    case 76:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 0, 0]), NTI1140850839);
      break;
    case 52:
    case 68:
    case 77:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 0, 1]), NTI1140850839);
      break;
    case 53:
    case 69:
    case 78:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 0, 0]), NTI1140850839);
      break;
    case 54:
    case 70:
    case 79:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 0, 1]), NTI1140850839);
      break;
    case 55:
    case 71:
    case 80:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 1, 0]), NTI1140850839);
      break;
    case 56:
    case 72:
    case 81:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 0, 0]), NTI1140850839);
      break;
    case 57:
    case 73:
    case 82:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 0, 1]), NTI1140850839);
      break;
    case 88:
    case 89:
    case 90:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 2, 1, 2]), NTI1140850839);
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,82,104,58,32,39] || []).concat(bg_1140850917.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1140850918;

}

function interpretMi_1140850936(bg_1140850937) {
  var result_1140850938 = 0;

    if (eqStrings(bg_1140850937.rhKellMi, [85])) {
    result_1140850938 = 1;
    }
    else {
    if (eqStrings(bg_1140850937.rhKellMi, [86])) {
    result_1140850938 = 0;
    }
    }

  return result_1140850938;

}

function interpretRhKellMi_1140850939(bg_1140850940) {
  var result_1140850941 = ({kind: 0, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0});

  BeforeRet: {
    if (eqStrings(bg_1140850940.rhKellMi, [87])) {
    result_1140850941 = nimCopy(result_1140850941, {kind: 2, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0}, NTI1140850821);
    break BeforeRet;
    }
    
    var kell_1140850942 = interpretKell_1140850896(bg_1140850940);
    if (!((kell_1140850942 == 3))) {
    var rh_1140850948 = interpretRh_1140850916(bg_1140850940);
    result_1140850941 = nimCopy(result_1140850941, {kind: 0, kell: kell_1140850942, rhC: rh_1140850948[chckIndx(0, 0, (rh_1140850948).length - 1)], rhsmallc: rh_1140850948[chckIndx(1, 0, (rh_1140850948).length - 1)], rhE: rh_1140850948[chckIndx(2, 0, (rh_1140850948).length - 1)], rhsmalle: rh_1140850948[chckIndx(3, 0, (rh_1140850948).length - 1)], mipheno: 0}, NTI1140850821);
    }
    else {
      var mi_1140850949 = interpretMi_1140850936(bg_1140850940);
      result_1140850941 = nimCopy(result_1140850941, {kind: 1, mipheno: mi_1140850949, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0}, NTI1140850821);
    }
    
  };

  return result_1140850941;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_385875976(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}

function toHtml_1140851014(bg_1140851015) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;

  var result_1140851016 = [];

    result_1140851016 = nimCopy(null, [60,98,62,65,66,79,32,111,99,104,32,82,104,68,60,47,98,62], NTI33554449);
    var aboRhD_1140851017 = interpretABORhD_1140850818(bg_1140851015);
    var rhKellMi_1140851018 = interpretRhKellMi_1140850939(bg_1140851015);
    var aboRows_1140851019 = ([60,116,114,62,60,116,100,62,65,66,79,32,111,99,104,32,82,104,68,45,75,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1140851015.aboRhD || [],[60,47,116,100,62,60,47,116,114,62] || []);
    if ((aboRhD_1140851017.kind == 0)) {
    var Temporary1 = aboRhD_1140851017;
    if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'group\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1140850763)); }
    aboRows_1140851019.push.apply(aboRows_1140851019, ([60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,65,66,79,32,111,99,104,32,82,104,68,60,47,105,62,60,47,116,100,62,60,116,100,62] || []).concat(Temporary1.group || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    var Temporary2 = aboRhD_1140851017;
    if (ConstSet8[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'collectionInformation\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1140850763)); }
    aboRows_1140851019.push.apply(aboRows_1140851019, ([60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,116,97,112,112,110,105,110,103,115,116,121,112,60,47,105,62,60,47,116,100,62,60,116,100,62] || []).concat(reprEnum(Temporary2.collectionInformation, NTI1140850764) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    else {
      var Temporary3 = aboRhD_1140851017;
      if (ConstSet9[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'message\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1140850763)); }
    aboRows_1140851019.push.apply(aboRows_1140851019, ([60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,109,101,100,100,101,108,97,110,100,101,60,47,105,62,60,47,116,100,62,60,116,100,62] || []).concat(Temporary3.message || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    
    var phenoRows_1140851028 = ([60,116,114,62,60,116,100,62,70,101,110,111,116,121,112,115,107,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1140851015.rhKellMi || [],[60,47,116,100,62,60,47,116,114,62] || []);
    switch (rhKellMi_1140851018.kind) {
    case 0:
      var Temporary4 = rhKellMi_1140851018;
      if (ConstSet10[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kell\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1140850819)); }
      var Temporary5 = rhKellMi_1140851018;
      if (ConstSet11[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhC\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1140850819)); }
      var Temporary6 = rhKellMi_1140851018;
      if (ConstSet12[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmallc\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1140850819)); }
      var Temporary7 = rhKellMi_1140851018;
      if (ConstSet13[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhE\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1140850819)); }
      var Temporary8 = rhKellMi_1140851018;
      if (ConstSet14[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmalle\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1140850819)); }
      var phenoString_1140851044 = ([75] || []).concat(reprEnum(Temporary4.kell, NTI1140850820) || [],[32,67] || [],reprEnum(Temporary5.rhC, NTI1140850820) || [],[32,99] || [],reprEnum(Temporary6.rhsmallc, NTI1140850820) || [],[32,69] || [],reprEnum(Temporary7.rhE, NTI1140850820) || [],[32,101] || [],reprEnum(Temporary8.rhsmalle, NTI1140850820) || []);
      phenoRows_1140851028.push.apply(phenoRows_1140851028, ([60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,102,101,110,111,116,121,112,32,40,82,104,47,75,41,60,47,105,62,60,47,116,100,62,60,116,100,62] || []).concat(phenoString_1140851044 || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 1:
      var Temporary9 = rhKellMi_1140851018;
      if (ConstSet15[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'mipheno\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1140850819)); }
      phenoRows_1140851028.push.apply(phenoRows_1140851028, ([60,116,114,62,60,116,100,62,60,105,62,84,111,108,107,110,105,110,103,32,102,101,110,111,116,121,112,32,40,77,105,60,115,117,112,62,97,60,47,115,117,112,62,47,77,117,114,41,60,47,105,62,60,47,116,100,62,60,116,100,62] || []).concat(reprEnum(Temporary9.mipheno, NTI1140850820) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 2:
      phenoRows_1140851028.push.apply(phenoRows_1140851028, makeNimstrLit("<tr><td><i>Tolkning fenotyp (ok\xC3\xA4nd)</i></td><td>Special Testing bar code present and must be scanned and interpreted</td></tr>"));;
      break;
    }
    var head_1140851048 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1140851049 = ([60,116,98,111,100,121,62] || []).concat(aboRows_1140851019 || [],phenoRows_1140851028 || [],[60,116,114,62,60,116,100,62,101,60,47,116,100,62,60,116,100,62] || [],bg_1140851015.e || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1140851016.push.apply(result_1140851016, ([60,116,97,98,108,101,62] || []).concat(head_1140851048 || [],body_1140851049 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1140851016;

}

function verifyBloodGroupsABORhD_1140850696(code_1140850697) {
    if (!(((code_1140850697).length == 6))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1140850697).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseBloodGroupsABORhD_1140850699(code_1140850700) {
  var result_1140850701 = ({dataIdentifier: [], aboRhD: [], rhKellMi: [], e: []});

    verifyBloodGroupsABORhD_1140850696(code_1140850700);
    result_1140850701.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1023410224(0, 1)), NTI33554449);
    result_1140850701.aboRhD = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1023410224(2, 3)), NTI33554449);
    result_1140850701.rhKellMi = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1023410224(4, 4)), NTI33554449);
    result_1140850701.e = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1023410224(5, 5)), NTI33554449);

  return result_1140850701;

}

function parseDataStructure_570425423(code_570425424) {
    var Temporary1;

  var result_570425425 = [];

    var dataStructureType_570425426 = classifyDataStructure_570425393(code_570425424);
    switch (dataStructureType_570425426) {
    case 0:
      Temporary1 = toHtml_1107296368(parseDonationIdentificationNumber_1107296268(code_570425424));
      break;
    case 1:
      Temporary1 = toHtml_1140851014(parseBloodGroupsABORhD_1140850699(code_570425424));
      break;
    default: 
      Temporary1 = [78,111,116,32,121,101,116,32,105,109,112,108,101,109,101,110,116,101,100,33];
      break;
    }
    result_570425425 = nimCopy(null, Temporary1, NTI33554449);

  return result_570425425;

}

function getCurrentExceptionMsg_33556463() {
  var result_33556464 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556443()) {
    result_33556464 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556469 = null;
            if (lastJSError.message !== undefined) {
        msg_33556469 = lastJSError.message;
      }
      
      if (!((msg_33556469 == null))) {
      result_33556464 = nimCopy(null, cstrToNimstr(msg_33556469), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556464 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556464;

}

function interpretCode() {
    document.getElementById("isbt128out").innerHTML = "";
++excHandler;
    try {
    var code_570425468 = cstrToNimstr(document.getElementById("code").value);
    var html_570425469 = parseDataStructure_570425423(code_570425468);
    document.getElementById("isbt128out").innerHTML = toJSStr(html_570425469);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var s_570425470 = ([70,101,108,32,118,105,100,32,116,111,108,107,110,105,110,103,58,32] || []).concat(getCurrentExceptionMsg_33556463() || []);
    document.getElementById("isbt128out").innerHTML = toJSStr(s_570425470);
    lastJSError = prevJSError;
    } finally {
    }

  
}
