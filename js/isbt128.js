/* Generated by the Nim Compiler v2.0.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI570425347 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400148 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1325400124 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1308622932 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1308622908 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1308622909 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845716 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1291845692 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845693 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1157628086 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1157628087 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1140850839 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1140850820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850821 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1140850764 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850763 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850765 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI771752005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555178;
var NNI771752005 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI771752005.node = NNI771752005;
var NNI1140850763 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850763, name: "bloodGroup", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850763, name: "specialMessage", len: 0, sons: null}}};
NTI1140850763.node = NNI1140850763;
var NNI1140850764 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850764, name: "Default: Intended Use Not Specified", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection Use Only", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850764, name: "For Emergency Use Only", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection/Biohazardous", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1140850764, name: "Directed (Dedicated/Designated) Collection/Eligible for Crossover", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1140850764, name: "Autologous Collection/Eligible for Crossover", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1140850764, name: "For Autologous Use Only", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1140850764, name: "For Autologous Use Only/Biohazardous", len: 0, sons: null}}};
NTI1140850764.node = NNI1140850764;
var NNI1140850765 = {kind: 3, offset: "kind", len: 2, typ: NTI1140850763, name: "kind", sons: [[setConstr(0), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "group", len: 0, typ: NTI33554449, name: "group", sons: null}, 
{kind: 1, offset: "collectionInformation", len: 0, typ: NTI1140850764, name: "collectionInformation", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null}]]};
NTI1140850765.node = NNI1140850765;
var NNI1140850819 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850819, name: "rhK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850819, name: "mi", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850819, name: "special", len: 0, sons: null}}};
NTI1140850819.node = NNI1140850819;
var NNI1140850820 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850820, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850820, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850820, name: "?", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1140850820, name: "unknown", len: 0, sons: null}}};
NTI1140850820.node = NNI1140850820;
var NNI1140850821 = {kind: 3, offset: "kind", len: 3, typ: NTI1140850819, name: "kind", sons: [[setConstr(0), {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kell", len: 0, typ: NTI1140850820, name: "kell", sons: null}, 
{kind: 1, offset: "rhC", len: 0, typ: NTI1140850820, name: "rhC", sons: null}, 
{kind: 1, offset: "rhsmallc", len: 0, typ: NTI1140850820, name: "rhsmallc", sons: null}, 
{kind: 1, offset: "rhE", len: 0, typ: NTI1140850820, name: "rhE", sons: null}, 
{kind: 1, offset: "rhsmalle", len: 0, typ: NTI1140850820, name: "rhsmalle", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "mipheno", len: 0, typ: NTI1140850820, name: "mipheno", sons: null}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]};
NTI1140850821.node = NNI1140850821;
NTI1140850839.base = NTI1140850820;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
var NNI1157628086 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1157628086, name: "simple", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1157628086, name: "complex", len: 0, sons: null}}};
NTI1157628086.node = NNI1157628086;
var NNI1157628087 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "division", len: 0, typ: NTI33554449, name: "division", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI1157628086, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 1, offset: "collectionType", len: 0, typ: NTI33554449, name: "collectionType", sons: null}]]}]};
NTI1157628087.node = NNI1157628087;
var NNI1291845692 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1291845692, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1291845692, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1291845692, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1291845692, name: "ej testad", len: 0, sons: null}}};
NTI1291845692.node = NNI1291845692;
var NNI1291845693 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845692, name: "Field1", sons: null}]};
NTI1291845693.node = NNI1291845693;
NTI1291845716.base = NTI1291845693;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI1308622908 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1308622908, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1308622908, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1308622908, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1308622908, name: "ej testad", len: 0, sons: null}}};
NTI1308622908.node = NNI1308622908;
var NNI1308622909 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1308622908, name: "Field1", sons: null}]};
NTI1308622909.node = NNI1308622909;
NTI1308622932.base = NTI1308622909;
var NNI1325400124 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400124, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400124, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400124, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400124, name: "ej testad", len: 0, sons: null}}};
NTI1325400124.node = NNI1325400124;
var NNI1325400125 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1325400124, name: "Field1", sons: null}]};
NTI1325400125.node = NNI1325400125;
NTI1325400148.base = NTI1325400125;
var NNI570425347 = {kind: 2, offset: 0, typ: null, name: null, len: 43, sons: {"0": {kind: 1, offset: 0, typ: NTI570425347, name: "donationIdentificationNumber", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425347, name: "bloodGroupsABORhD", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425347, name: "productCode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425347, name: "expirationDate", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425347, name: "expirationDateAndTime", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425347, name: "collectionDate", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI570425347, name: "collectionDateAndTime", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI570425347, name: "productionDate", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI570425347, name: "productionDateAndTime", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI570425347, name: "specialTestingGeneral", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI570425347, name: "specialTestingAntigensRetired", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI570425347, name: "specialTestingAntigensGeneral", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI570425347, name: "specialTestingAntigensFinnish", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI570425347, name: "specialTestingPlatelet", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI570425347, name: "specialTestingHLAAB", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI570425347, name: "specialTestingHLADRB1", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI570425347, name: "containerManufacturerAndCatalogNumber", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI570425347, name: "containerLotNumber", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI570425347, name: "donorIdentificationNumber", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI570425347, name: "staffMemberIdentificationNumber", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI570425347, name: "manufacturerAndCatalogNumber", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI570425347, name: "lotNumber", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI570425347, name: "compoundMessage", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI570425347, name: "patientDateOfBirth", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI570425347, name: "patientIdentificationNumber", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI570425347, name: "expirationMonthAndYear", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI570425347, name: "ttiMarker", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI570425347, name: "productConsignment", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI570425347, name: "dimensions", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI570425347, name: "redCellAntigensWithTestHistory", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI570425347, name: "flexibleDateAndTime", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI570425347, name: "productDivisions", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI570425347, name: "processingFacilityInformationCode", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI570425347, name: "processorProductIdentificationCode", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI570425347, name: "mphoLotNumber", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI570425347, name: "mphoSupplementalIdentificationNumber", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI570425347, name: "globalRegistrationIdentifierForDonorsRetired", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI570425347, name: "singleEuropeanCode", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI570425347, name: "globalRegistrationIdentifierForDonors", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI570425347, name: "chainOfIdentityIdentifier", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI570425347, name: "nonIccba", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI570425347, name: "reservedNationalDonorIdentificationNumber", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI570425347, name: "confidentialUnitExclusion", len: 0, sons: null}}};
NTI570425347.node = NNI570425347;

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr([65, 78], [80, 90], [49, 57]);
var ConstSet3 = setConstr([97, 122]);

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet6 = setConstr([50, 57]);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
var ConstSet7 = setConstr(0);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_385875976(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557616;

}
var ConstSet8 = setConstr(0);
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(0);
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(0);
var ConstSet13 = setConstr(0);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(1);
var ConstSet16 = setConstr([65, 89]);
var ConstSet17 = setConstr([49, 57]);
var ConstSet18 = setConstr([65, 89]);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 68]);
              var antigens_1291845713 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [86,115,47,86], [65,49], [77], [78], [83], [115], [85], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,105,60,115,117,112,62,97,60,47,115,117,112,62], [68,105,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,111,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,77,86,45,97,107]];
              var phenoOne_1291845714 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1291845715 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1291845868 = [[114,101,116,105,114,101,100], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [], [], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [], [], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [114,101,109,111,118,101,100], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [], [], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [], [], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [73,103,65,32,100,101,102,105,99,105,101,110,116], [40,105,110,103,101,116,41]];
              var antigens_1308622929 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [77], [78], [83], [115], [85], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [73,110,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [68,105,60,115,117,112,62,97,60,47,115,117,112,62], [86,83,47,86], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [67], [99], [69], [101], [67,77,86,45,97,107]];
              var phenoOne_1308622930 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1308622931 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1308623068 = [[105,110,102,111,114,109,97,116,105,111,110,32,101,108,115,101,119,104,101,114,101], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [80], [80,80,60,115,117,98,62,49,60,47,115,117,98,62,80,60,115,117,112,62,107,60,47,115,117,112,62], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [75,49,52], [75,49,55], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [68,105,60,115,117,112,62,98,60,47,115,117,112,62], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,98,60,47,115,117,112,62], [89,116,60,115,117,112,62,98,60,47,115,117,112,62], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,109,111,118,101,100], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [73], [69,114,60,115,117,112,62,97,60,47,115,117,112,62], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [71,101,52], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [78,97,116,105,111,110,97,108,108,121,32,115,112,101,99,105,102,105,101,100], [72,101,109,111,103,108,111,98,105,110,32,83,32,110,101,103,97,116,105,118,101], [112,97,114,118,111,118,105,114,117,115,32,66,49,57,32,97,110,116,105,98,111,100,121,32,112,114,101,115,101,110,116], [73,103,65,32,100,101,102,105,99,105,101,110,116], [110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,112,114,111,118,105,100,101,100]];
              var antigens_1325400145 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [77], [78], [83], [115], [85], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,60,115,117,112,62,120,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [87,69,83,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115], [114,101,115], [67,77,86,45,97,107]];
              var phenoOne_1325400146 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1325400147 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1325400268 = [[105,110,102,111,114,109,97,116,105,111,110,32,101,108,115,101,119,104,101,114,101], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [80], [80,80,60,115,117,98,62,49,60,47,115,117,98,62,80,60,115,117,112,62,107,60,47,115,117,112,62], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [75,49,52], [75,49,55], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [114,101,109,111,118,101,100], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,98,60,47,115,117,112,62], [89,116,60,115,117,112,62,98,60,47,115,117,112,62], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [73], [69,114,60,115,117,112,62,97,60,47,115,117,112,62], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [73,103,65,32,100,101,102,105,99,105,101,110,116], [110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,112,114,111,118,105,100,101,100]];

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
    var dataStructureNames_570425394 = [[84,97,112,112,110,105,110,103,115,110,117,109,109,101,114,32,40,68,111,110,97,116,105,111,110,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114,41], [66,108,111,100,103,114,117,112,112,32,40,65,66,79,32,111,99,104,32,82,104,68,41], [80,114,111,100,117,107,116,107,111,100], [85,116,103,195,165,110,103,115,100,97,116,117,109], [85,116,103,195,165,110,103,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [84,97,112,112,110,105,110,103,115,100,97,116,117,109], [84,97,112,112,110,105,110,103,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [80,114,111,100,117,107,116,105,111,110,115,100,97,116,117,109], [80,114,111,100,117,107,116,105,111,110,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,71,101,110,101,114,97,108], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,226,128,148,71,101,110,101,114,97,108], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,226,128,148,70,105,110,110,105,115,104], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,80,108,97,116,101,108,101,116,32,72,76,65,32,97,110,100,32,80,108,97,116,101,108,101,116,32,83,112,101,99,105,102,105,99,32,65,110,116,105,103,101,110,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,72,76,65,45,65,32,97,110,100,32,45,66,32,65,108,108,101,108,101,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,72,76,65,45,68,82,66,49,32,65,108,108,101,108,101,115], [67,111,110,116,97,105,110,101,114,32,77,97,110,117,102,97,99,116,117,114,101,114,32,97,110,100,32,67,97,116,97,108,111,103,32,78,117,109,98,101,114], [67,111,110,116,97,105,110,101,114,32,76,111,116,32,78,117,109,98,101,114], [68,111,110,111,114,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [83,116,97,102,102,32,77,101,109,98,101,114,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [77,97,110,117,102,97,99,116,117,114,101,114,32,97,110,100,32,67,97,116,97,108,111,103,32,78,117,109,98,101,114,58,32,73,116,101,109,115,32,79,116,104,101,114,32,84,104,97,110,32,67,111,110,116,97,105,110,101,114,115], [76,111,116,32,78,117,109,98,101,114,58,32,73,116,101,109,115,32,79,116,104,101,114,32,84,104,97,110,32,67,111,110,116,97,105,110,101,114,115], [67,111,109,112,111,117,110,100,32,77,101,115,115,97,103,101], [80,97,116,105,101,110,116,32,68,97,116,101,32,111,102,32,66,105,114,116,104], [80,97,116,105,101,110,116,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [69,120,112,105,114,97,116,105,111,110,32,77,111,110,116,104,32,97,110,100,32,89,101,97,114], [84,114,97,110,115,102,117,115,105,111,110,32,84,114,97,110,115,109,105,116,116,101,100,32,73,110,102,101,99,116,105,111,110,32,77,97,114,107,101,114], [80,114,111,100,117,99,116,32,67,111,110,115,105,103,110,109,101,110,116], [68,105,109,101,110,115,105,111,110,115], [82,101,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,32,119,105,116,104,32,84,101,115,116,32,72,105,115,116,111,114,121], [70,108,101,120,105,98,108,101,32,68,97,116,101,32,97,110,100,32,84,105,109,101], [80,114,111,100,117,99,116,32,68,105,118,105,115,105,111,110,115], [80,114,111,99,101,115,115,105,110,103,32,70,97,99,105,108,105,116,121,32,73,110,102,111,114,109,97,116,105,111,110,32,67,111,100,101], [80,114,111,99,101,115,115,111,114,32,80,114,111,100,117,99,116,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,67,111,100,101], [77,80,72,79,32,76,111,116,32,78,117,109,98,101,114], [77,80,72,79,32,83,117,112,112,108,101,109,101,110,116,97,108,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [71,108,111,98,97,108,32,82,101,103,105,115,116,114,97,116,105,111,110,32,73,100,101,110,116,105,102,105,101,114,32,102,111,114,32,68,111,110,111,114,115], [83,105,110,103,108,101,32,69,117,114,111,112,101,97,110,32,67,111,100,101], [71,108,111,98,97,108,32,82,101,103,105,115,116,114,97,116,105,111,110,32,73,100,101,110,116,105,102,105,101,114,32,102,111,114,32,68,111,110,111,114,115], [67,104,97,105,110,32,111,102,32,73,100,101,110,116,105,116,121,32,73,100,101,110,116,105,102,105,101,114], [68,97,116,97,32,83,116,114,117,99,116,117,114,101,115,32,78,111,116,32,68,101,102,105,110,101,100,32,98,121,32,73,67,67,66,66,65], makeNimstrLit("Reserved Data Identifiers for a Nationally Specified Donor Identification Number"), [67,111,110,102,105,100,101,110,116,105,97,108,32,85,110,105,116,32,69,120,99,108,117,115,105,111,110,32,83,116,97,116,117,115,32,68,97,116,97,32,83,116,114,117,99,116,117,114,101]];

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570425753 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570425753 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570425753;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570425753 = addInt(i_570425753, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function startsWith_704644521(s_704644522, prefix_704644523) {
  var result_704644524 = false;

    result_704644524 = ((0 < (s_704644522).length) && (s_704644522[chckIndx(0, 0, (s_704644522).length - 1)] == prefix_704644523));

  return result_704644524;

}

function nsuStartsWith(s_704644526, prefix_704644527) {
  var result_704644528 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_704644533 = (prefix_704644527).length;
    var sLenHEX60gensym146_704644534 = (s_704644526).length;
    var iHEX60gensym146_704644535 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_704644533 <= iHEX60gensym146_704644535)) {
          result_704644528 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_704644534 <= iHEX60gensym146_704644535) || !((s_704644526[chckIndx(iHEX60gensym146_704644535, 0, (s_704644526).length - 1)] == prefix_704644527[chckIndx(iHEX60gensym146_704644535, 0, (prefix_704644527).length - 1)])))) {
          result_704644528 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_704644535 = addInt(iHEX60gensym146_704644535, 1);
        }
    };
  };

  return result_704644528;

}

function classifyDataStructure_570425395(code_570425396) {
    var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_570425397 = 0;

      if (!startsWith_704644521(code_570425396, 61)) Temporary2 = false; else {        Temporary2 = (ConstSet2[code_570425396[chckIndx(1, 0, (code_570425396).length - 1)]] != undefined);      }    if (Temporary2) {
    Temporary1 = 0;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,37])) {
    Temporary1 = 1;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,60])) {
    Temporary1 = 2;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,62])) {
    Temporary1 = 3;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,62])) {
    Temporary1 = 4;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,42])) {
    Temporary1 = 5;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,42])) {
    Temporary1 = 6;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,125])) {
    Temporary1 = 7;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,125])) {
    Temporary1 = 8;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,40])) {
    Temporary1 = 9;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,123])) {
    Temporary1 = 10;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,92])) {
    Temporary1 = 11;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,92])) {
    Temporary1 = 12;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,123])) {
    Temporary1 = 13;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,91])) {
    Temporary1 = 14;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,34])) {
    Temporary1 = 15;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,41])) {
    Temporary1 = 16;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,41])) {
    Temporary1 = 17;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,59])) {
    Temporary1 = 18;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,39])) {
    Temporary1 = 19;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,45])) {
    Temporary1 = 20;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,45])) {
    Temporary1 = 21;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,43])) {
    Temporary1 = 22;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,35])) {
    Temporary1 = 23;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,35])) {
    Temporary1 = 24;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,93])) {
    Temporary1 = 25;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,34])) {
    Temporary1 = 26;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,36])) {
    Temporary1 = 27;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,36])) {
    Temporary1 = 28;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,37])) {
    Temporary1 = 29;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,32])) {
    Temporary1 = 30;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,44])) {
    Temporary1 = 31;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,43])) {
    Temporary1 = 32;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,47])) {
    Temporary1 = 33;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,49])) {
    Temporary1 = 34;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,50])) {
    Temporary1 = 35;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,51])) {
    Temporary1 = 36;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,52])) {
    Temporary1 = 37;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,41,58])) {
    Temporary1 = 38;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,47])) {
    Temporary1 = 39;
    }
    else {
      if (!startsWith_704644521(code_570425396, 38)) Temporary3 = false; else {        Temporary3 = (ConstSet3[code_570425396[chckIndx(1, 0, (code_570425396).length - 1)]] != undefined);      }    if (Temporary3) {
    Temporary1 = 40;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,59])) {
    Temporary1 = 41;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,33])) {
    Temporary1 = 42;
    }
    else {
      raiseException({message: ([111,107,195,164,110,116,32,112,114,101,102,105,120,58,32] || []).concat(code_570425396 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
    result_570425397 = Temporary1;

  return result_570425397;

}

function interpretFlagSwe_1124073577(din_1124073578) {
    var Temporary1;

  var result_1124073579 = [];

    switch (toJSStr(din_1124073578.flagCharacters)) {
    case "01":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "02":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "03":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "04":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "31":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "32":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "33":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "34":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "41":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "42":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "43":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "44":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "51":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "52":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "53":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "54":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "05":
      Temporary1 = [65,110,110,97,110,32,40,117,112,112,114,101,112,97,100,41,32,34,111,110,32,100,101,109,97,110,100,34,45,116,114,121,99,107,116,32,100,101,108,32,97,118,32,101,116,105,107,101,116,116,101,110];
      break;
    case "06":
      Temporary1 = [80,105,108,111,116,114,195,182,114];
      break;
    case "07":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,115,109,105,116,116,101,115,116,101,114];
      break;
    case "08":
      Temporary1 = [71,105,118,97,114,100,111,107,117,109,101,110,116,97,116,105,111,110,32,40,98,108,97,110,107,101,116,116,32,102,195,182,114,32,104,195,164,108,115,111,100,101,107,108,97,114,97,116,105,111,110,41];
      break;
    case "09":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,78,65,84];
      break;
    case "10":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,117,110,100,101,114,115,195,182,107,110,105,110,103,32,97,118,32,98,97,107,116,101,114,105,101,108,108,32,118,195,164,120,116];
      break;
    case "20":
      Temporary1 = [80,97,99,107,115,101,100,101,108,32,40,118,105,100,32,116,114,97,110,115,112,111,114,116,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,116,105,108,108,32,97,110,110,97,110,32,98,108,111,100,99,101,110,116,114,97,108,41];
      break;
    case "30":
      Temporary1 = [70,195,182,108,106,101,115,101,100,101,108,32,116,105,108,108,32,98,108,111,100,112,195,165,115,101,110];
      break;
    case "40":
      Temporary1 = [65,110,118,195,164,110,100,101,115,32,118,105,100,32,105,110,107,195,182,112,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,109,195,164,114,107,116,97,32,109,101,100,32,110,117,109,109,101,114,32,48,48];
      break;
    case "50":
      Temporary1 = [75,118,105,116,116,101,110,115,44,32,97,110,118,195,164,110,100,115,32,118,105,100,32,111,98,101,109,97,110,110,97,100,32,100,101,112,195,165];
      break;
    default: 
      Temporary1 = [69,106,32,100,101,102,105,110,105,101,114,97,100,32,105,32,72,97,110,100,98,111,107,32,102,195,182,114,32,98,108,111,100,118,101,114,107,115,97,109,104,101,116];
      break;
    }
    result_1124073579 = nimCopy(null, Temporary1, NTI33554449);

  return result_1124073579;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_738197829() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_738197867(s_738197868, b_738197869, b_738197869_Idx) {
      var Temporary1;
          var Temporary4;

  var result_738197870 = 0;

    var sign_738197871 = (-1n);
    var i_738197872 = 0;
    if ((i_738197872 < (s_738197868).length)) {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 43)) {
    i_738197872 += 1;
    }
    else {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 45)) {
    i_738197872 += 1;
    sign_738197871 = 1n;
    }
    }
    }
    
      if (!(i_738197872 < (s_738197868).length)) Temporary1 = false; else {        Temporary1 = (ConstSet4[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);      }    if (Temporary1) {
    b_738197869[b_738197869_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_738197872 < (s_738197868).length)) Temporary4 = false; else {            Temporary4 = (ConstSet5[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_738197906 = (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_738197906)) / 10n <= b_738197869[b_738197869_Idx])) {
          b_738197869[b_738197869_Idx] = ((b_738197869[b_738197869_Idx] * 10n) - BigInt(c_738197906));
          }
          else {
          integerOutOfRangeError_738197829();
          }
          
          i_738197872 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_738197872 < (s_738197868).length) && (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 95))) break Label6;
                i_738197872 += 1;
              }
          };
        }
    };
    if (((sign_738197871 == (-1n)) && (b_738197869[b_738197869_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_738197829();
    }
    else {
      b_738197869[b_738197869_Idx] = (b_738197869[b_738197869_Idx] * sign_738197871);
      result_738197870 = i_738197872;
    }
    
    }
    

  return result_738197870;

}

function npuParseBiggestInt(s_738197929, number_738197930, number_738197930_Idx) {
  var result_738197931 = 0;

    var res_738197932 = [0n];
    result_738197931 = rawParseInt_738197867(s_738197929, res_738197932, 0);
    if (!((result_738197931 == 0))) {
    number_738197930[number_738197930_Idx] = res_738197932[0];
    }
    

  return result_738197931;

}

function npuParseInt(s_738197934, number_738197935, number_738197935_Idx) {
  var result_738197936 = 0;

    var res_738197937 = [0n];
    result_738197936 = npuParseBiggestInt(s_738197934, res_738197937, 0);
    if (((res_738197937[0] < (-2147483648n)) || (2147483647n < res_738197937[0]))) {
    integerOutOfRangeError_738197829();
    }
    
    if (!((result_738197936 == 0))) {
    number_738197935[number_738197935_Idx] = chckRange(Number(res_738197937[0]), (-2147483648), 2147483647);
    }
    

  return result_738197936;

}

function parseInt_738198447(s_738198448, number_738198449, number_738198449_Idx, start_738198450) {
  var result_738198451 = 0;

    result_738198451 = npuParseInt((s_738198448.slice(start_738198450, (s_738198448).length - 1 + 1)), number_738198449, number_738198449_Idx);

  return result_738198451;

}

function nsuParseInt(s_704643929) {
  var result_704643930 = [0];

    result_704643930[0] = 0;
    var L_704643931 = parseInt_738198447(s_704643929, result_704643930, 0, 0);
    if ((!((L_704643931 == (s_704643929).length)) || (L_704643931 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_704643929 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643930[0];

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function interpretFlag_1124073580(din_1124073581) {
  var result_1124073582 = [];

    switch (toJSStr(din_1124073581.flagCharacters)) {
    case "00":
      result_1124073582 = nimCopy(null, [70,108,97,103,32,110,111,116,32,117,115,101,100,59,32,110,117,108,108,32,118,97,108,117,101], NTI33554449);
      break;
    case "01":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,49,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "02":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,50,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "03":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,51,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "04":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,52,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "05":
      result_1124073582 = nimCopy(null, [83,101,99,111,110,100,32,40,111,114,32,114,101,112,101,97,116,101,100,41,32,226,128,156,100,101,109,97,110,100,45,112,114,105,110,116,101,100,226,128,157,32,108,97,98,101,108], NTI33554449);
      break;
    case "06":
      result_1124073582 = nimCopy(null, [80,105,108,111,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "07":
      result_1124073582 = nimCopy(null, [84,101,115,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "08":
      result_1124073582 = nimCopy(null, [68,111,110,111,114,32,114,101,99,111,114,100,32,108,97,98,101,108], NTI33554449);
      break;
    case "09":
      result_1124073582 = nimCopy(null, [83,97,109,112,108,101,32,116,117,98,101,32,102,111,114,32,78,65,84,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "10":
      result_1124073582 = nimCopy(null, [83,97,109,112,108,101,115,32,102,111,114,32,98,97,99,116,101,114,105,97,108,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "11":
      result_1124073582 = nimCopy(null, [77,97,116,99,104,32,119,105,116,104,32,85,110,105,116,32,108,97,98,101,108], NTI33554449);
      break;
    case "12":
      result_1124073582 = nimCopy(null, [65,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108], NTI33554449);
      break;
    case "13":
      result_1124073582 = nimCopy(null, [65,116,116,97,99,104,101,100,32,108,97,98,101,108,32,40,105,110,116,101,110,100,101,100,32,116,111,32,98,101,32,117,115,101,100,32,119,105,116,104,32,97,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108,41], NTI33554449);
      break;
    case "14":
      result_1124073582 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      break;
    case "15":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,53,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "16":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,54,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "17":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,55,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "18":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,56,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "19":
      result_1124073582 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,57,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    default: 
++excHandler;
      try {
      var numeric_1124073583 = nsuParseInt(din_1124073581.flagCharacters);
      if (      numeric_1124073583 >= 20 && numeric_1124073583 <= 59      ){        result_1124073582 = nimCopy(null, makeNimstrLit("Reserved for assignment and use by each local facility. Therefore the meaning and interpretation of flag values 20\xE2\x80\x9359 may differ with each FIN and should not be interpreted at any other site"), NTI33554449);
        }
      else if (      numeric_1124073583 >= 60 && numeric_1124073583 <= 96      ){        result_1124073582 = nimCopy(null, makeNimstrLit("ISO/IEC 7064 modulo 37-2 check character on the preceding thirteen (13) data characters, \xCE\xB1ppppyynnnnnn including the FIN, year and the unit sequence number \xE2\x80\x94 value is assigned as 60 plus the modulo 37-2 checksum"), NTI33554449);
        }
      else{
        result_1124073582 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      result_1124073582 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    }

  return result_1124073582;

}

function toHtml_1124073584(din_1124073585) {
  var result_1124073586 = [];

    var head_1124073619 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1124073634 = (makeNimstrLit("<tbody><tr><td>Blodcentralskod (Facility Identification Number)</td><td>") || []).concat(din_1124073585.facilityIdentificationNumber || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],din_1124073585.year || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,76,195,182,112,110,117,109,109,101,114,60,47,116,100,62,60,116,100,62] || [],din_1124073585.sequence || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,78,117,109,109,101,114,109,97,114,107,195,182,114,60,47,116,100,62,60,116,100,62] || [],din_1124073585.flagCharacters || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Svensk standard</td><td>") || [],interpretFlagSwe_1124073577(din_1124073585) || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,73,83,66,84,32,49,50,56,60,47,116,100,62,60,116,100,62] || [],interpretFlag_1124073580(din_1124073585) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1124073586.push.apply(result_1124073586, ([60,116,97,98,108,101,62] || []).concat(head_1124073619 || [],body_1124073634 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1124073586;

}

function verifyDonationIdentificationNumber_1124073481(din_1124073482) {
    if (!(((din_1124073482).length == 16))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((din_1124073482).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570425761 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425761 < L_704644360)) break Label3;
            i_704644365 = i_570425761;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570425761 = addInt(i_570425761, 1);
          }
      };
    };

  return result_704644356;

}

function HEX2EHEX2E_1040187440(a_1040187443, b_1040187444) {
  var result_1040187445 = ({a: 0, b: 0});

    result_1040187445 = nimCopy(result_1040187445, {a: a_1040187443, b: b_1040187444}, NTI771752005);

  return result_1040187445;

}

function parseDonationIdentificationNumber_1124073484(code_1124073485) {
  var result_1124073486 = ({dataIdentifier: [], facilityIdentificationNumber: [], year: [], sequence: [], flagCharacters: []});

    verifyDonationIdentificationNumber_1124073481(code_1124073485);
    result_1124073486.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1124073485, HEX2EHEX2E_1040187440(0, 0)), NTI33554449);
    result_1124073486.facilityIdentificationNumber = nimCopy(null, HEX5BHEX5D_704644351(code_1124073485, HEX2EHEX2E_1040187440(1, 5)), NTI33554449);
    result_1124073486.year = nimCopy(null, HEX5BHEX5D_704644351(code_1124073485, HEX2EHEX2E_1040187440(6, 7)), NTI33554449);
    result_1124073486.sequence = nimCopy(null, HEX5BHEX5D_704644351(code_1124073485, HEX2EHEX2E_1040187440(8, 13)), NTI33554449);
    result_1124073486.flagCharacters = nimCopy(null, HEX5BHEX5D_704644351(code_1124073485, HEX2EHEX2E_1040187440(14, 15)), NTI33554449);

  return result_1124073486;

}

function interpretCollectionInformation_1140850797(bg_1140850798) {
  var result_1140850799 = 0;

++excHandler;
    try {
    var numeric_1140850800 = nsuParseInt(bg_1140850798.aboRhD);
    if (    numeric_1140850800 == 95 || 
    numeric_1140850800 == 51 || 
    numeric_1140850800 == 6 || 
    numeric_1140850800 == 62 || 
    numeric_1140850800 == 17 || 
    numeric_1140850800 == 73 || 
    numeric_1140850800 == 28 || 
    numeric_1140850800 == 84 || 
    numeric_1140850800 == 55 || 
    numeric_1140850800 == 66 || 
    numeric_1140850800 == 77 || 
    numeric_1140850800 == 88    ){      result_1140850799 = 0;
      }
    else if (    numeric_1140850800 == 91 || 
    numeric_1140850800 == 47 || 
    numeric_1140850800 == 2 || 
    numeric_1140850800 == 58 || 
    numeric_1140850800 == 13 || 
    numeric_1140850800 == 69 || 
    numeric_1140850800 == 24 || 
    numeric_1140850800 == 80    ){      result_1140850799 = 1;
      }
    else if (    numeric_1140850800 == 92 || 
    numeric_1140850800 == 48 || 
    numeric_1140850800 == 3 || 
    numeric_1140850800 == 59 || 
    numeric_1140850800 == 14 || 
    numeric_1140850800 == 70 || 
    numeric_1140850800 == 25 || 
    numeric_1140850800 == 81    ){      result_1140850799 = 2;
      }
    else if (    numeric_1140850800 == 93 || 
    numeric_1140850800 == 49 || 
    numeric_1140850800 == 4 || 
    numeric_1140850800 == 60 || 
    numeric_1140850800 == 15 || 
    numeric_1140850800 == 71 || 
    numeric_1140850800 == 26 || 
    numeric_1140850800 == 82    ){      result_1140850799 = 3;
      }
    else if (    numeric_1140850800 == 94 || 
    numeric_1140850800 == 50 || 
    numeric_1140850800 == 5 || 
    numeric_1140850800 == 61 || 
    numeric_1140850800 == 16 || 
    numeric_1140850800 == 72 || 
    numeric_1140850800 == 27 || 
    numeric_1140850800 == 83    ){      result_1140850799 = 4;
      }
    else if (    numeric_1140850800 == 96 || 
    numeric_1140850800 == 52 || 
    numeric_1140850800 == 7 || 
    numeric_1140850800 == 63 || 
    numeric_1140850800 == 18 || 
    numeric_1140850800 == 74 || 
    numeric_1140850800 == 29 || 
    numeric_1140850800 == 85    ){      result_1140850799 = 5;
      }
    else if (    numeric_1140850800 == 97 || 
    numeric_1140850800 == 53 || 
    numeric_1140850800 == 8 || 
    numeric_1140850800 == 64 || 
    numeric_1140850800 == 19 || 
    numeric_1140850800 == 75 || 
    numeric_1140850800 == 30 || 
    numeric_1140850800 == 86    ){      result_1140850799 = 6;
      }
    else if (    numeric_1140850800 == 98 || 
    numeric_1140850800 == 54 || 
    numeric_1140850800 == 9 || 
    numeric_1140850800 == 65 || 
    numeric_1140850800 == 20 || 
    numeric_1140850800 == 76 || 
    numeric_1140850800 == 31 || 
    numeric_1140850800 == 87    ){      result_1140850799 = 7;
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var two_1140850801 = bg_1140850798.aboRhD[chckIndx(1, 0, (bg_1140850798.aboRhD).length - 1)];
    switch (two_1140850801) {
    case 48:
    case 54:
      result_1140850799 = 0;
      break;
    case 50:
      result_1140850799 = 1;
      break;
    case 51:
      result_1140850799 = 2;
      break;
    case 52:
      result_1140850799 = 3;
      break;
    case 53:
      result_1140850799 = 4;
      break;
    case 55:
      result_1140850799 = 5;
      break;
    case 56:
      result_1140850799 = 6;
      break;
    case 57:
      result_1140850799 = 7;
      break;
    default: 
      break;
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1140850799;

}

function interpretABORhD_1140850818(bg_1140850819) {
  var result_1140850820 = ({kind: 0, group: [], collectionInformation: 0, message: []});

  BeforeRet: {
    var group_1140850821 = [];
    var collect_1140850822 = 0;
++excHandler;
    try {
    var numeric_1140850823 = nsuParseInt(bg_1140850819.aboRhD);
    if (    numeric_1140850823 >= 91 && numeric_1140850823 <= 98    ){      group_1140850821 = nimCopy(null, [79,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 47 && numeric_1140850823 <= 54    ){      group_1140850821 = nimCopy(null, [79,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 2 && numeric_1140850823 <= 9    ){      group_1140850821 = nimCopy(null, [65,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 58 && numeric_1140850823 <= 65    ){      group_1140850821 = nimCopy(null, [65,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 13 && numeric_1140850823 <= 20    ){      group_1140850821 = nimCopy(null, [66,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1140850823 >= 69 && numeric_1140850823 <= 76    ){      group_1140850821 = nimCopy(null, [66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 24 && numeric_1140850823 <= 31    ){      group_1140850821 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 >= 80 && numeric_1140850823 <= 87    ){      group_1140850821 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1140850823 == 55    ){      group_1140850821 = nimCopy(null, [79], NTI33554449);
      }
    else if (    numeric_1140850823 == 66    ){      group_1140850821 = nimCopy(null, [65], NTI33554449);
      }
    else if (    numeric_1140850823 == 77    ){      group_1140850821 = nimCopy(null, [66], NTI33554449);
      }
    else if (    numeric_1140850823 == 88    ){      group_1140850821 = nimCopy(null, [65,66], NTI33554449);
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var one_1140850824 = bg_1140850819.aboRhD[chckIndx(0, 0, (bg_1140850819.aboRhD).length - 1)];
    var two_1140850825 = bg_1140850819.aboRhD[chckIndx(1, 0, (bg_1140850819.aboRhD).length - 1)];
    if ((ConstSet6[two_1140850825] != undefined)) {
    switch (one_1140850824) {
    case 80:
      group_1140850821 = nimCopy(null, [79], NTI33554449);
      break;
    case 65:
      group_1140850821 = nimCopy(null, [65], NTI33554449);
      break;
    case 66:
      group_1140850821 = nimCopy(null, [66], NTI33554449);
      break;
    case 67:
      group_1140850821 = nimCopy(null, [65,66], NTI33554449);
      break;
    case 68:
      group_1140850821 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 69:
      group_1140850821 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 71:
      group_1140850821 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 72:
      group_1140850821 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 73:
      group_1140850821 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 74:
      group_1140850821 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 75:
      group_1140850821 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 76:
      group_1140850821 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 77:
      group_1140850821 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 78:
      group_1140850821 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 79:
      group_1140850821 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 81:
      group_1140850821 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    default: 
      break;
    }
    }
    else {
    if ((two_1140850825 == 48)) {
    switch (one_1140850824) {
    case 65:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,65,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 66:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,66,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 67:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,65,66,44,32,112,111,111,108,101,100,32,82,104,68,32,91,80,111,111,108,101,100,32,80,114,111,100,117,99,116,115,93], NTI33554449);
      break;
    case 68:
      group_1140850821 = nimCopy(null, [71,114,117,112,112,32,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 69:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 70:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 71:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 72:
      group_1140850821 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,32,40,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100,41], NTI33554449);
      break;
    case 73:
      group_1140850821 = nimCopy(null, [65,49], NTI33554449);
      break;
    case 74:
      group_1140850821 = nimCopy(null, [65,50], NTI33554449);
      break;
    case 75:
      group_1140850821 = nimCopy(null, [65,60,115,117,98,62,49,60,47,115,117,98,62,66], NTI33554449);
      break;
    case 76:
      group_1140850821 = nimCopy(null, [65,60,115,117,98,62,50,60,47,115,117,98,62,66], NTI33554449);
      break;
    default: 
      break;
    }
    }
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    if ((0 < (group_1140850821).length)) {
    collect_1140850822 = interpretCollectionInformation_1140850797(bg_1140850819);
    result_1140850820 = nimCopy(result_1140850820, {kind: 0, group: nimCopy(null, group_1140850821, NTI33554449), collectionInformation: collect_1140850822, message: []}, NTI1140850765);
    break BeforeRet;
    }
    else {
      switch (toJSStr(bg_1140850819.aboRhD)) {
      case "00":
        group_1140850821 = nimCopy(null, [78,111,32,65,66,79,32,111,114,32,82,104,32,105,110,102,111,114,109,97,116,105,111,110,32,105,115,32,97,118,97,105,108,97,98,108,101], NTI33554449);
        break;
      case "Ma":
        group_1140850821 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110], NTI33554449);
        break;
      case "Mb":
        group_1140850821 = nimCopy(null, [66,105,111,104,97,122,97,114,100,111,117,115], NTI33554449);
        break;
      case "Md":
        group_1140850821 = nimCopy(null, [68,105,115,99,97,114,100,32,40,116,111,32,98,101,32,100,101,115,116,114,111,121,101,100,41], NTI33554449);
        break;
      case "Mf":
        group_1140850821 = nimCopy(null, [70,111,114,32,102,114,97,99,116,105,111,110,97,116,105,111,110,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mq":
        group_1140850821 = nimCopy(null, [81,117,97,114,97,110,116,105,110,101,47,104,111,108,100,32,102,111,114,32,102,117,114,116,104,101,114,32,116,101,115,116,105,110,103,32,111,114,32,112,114,111,99,101,115,115,105,110,103], NTI33554449);
        break;
      case "Mr":
        group_1140850821 = nimCopy(null, [70,111,114,32,114,101,115,101,97,114,99,104,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mx":
        group_1140850821 = nimCopy(null, [78,111,116,32,102,111,114,32,116,114,97,110,115,102,117,115,105,111,110,32,98,97,115,101,100,32,111,110,32,116,101,115,116,32,114,101,115,117,108,116,115], NTI33554449);
        break;
      case "T1":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,112,111,115,105,116,105,118,101], NTI33554449);
        break;
      case "T2":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,101,103,97,116,105,118,101], NTI33554449);
        break;
      case "T3":
        group_1140850821 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100], NTI33554449);
        break;
      case "T4":
        group_1140850821 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110,47,105,110,32,113,117,97,114,97,110,116,105,110,101], NTI33554449);
        break;
      case "T5":
        group_1140850821 = nimCopy(null, [83,101,101,32,111,117,116,101,114,32,112,97,99,107,97,103,105,110,103,32,102,111,114,32,112,114,111,100,117,99,116,32,115,116,97,116,117,115], NTI33554449);
        break;
      case "T6":
        group_1140850821 = nimCopy(null, [77,117,115,116,32,98,101,32,115,116,101,114,105,108,105,122,101,100,32,98,101,102,111,114,101,32,114,101,108,101,97,115,101], NTI33554449);
        break;
      default: 
        break;
      }
      if ((0 < (group_1140850821).length)) {
      result_1140850820 = nimCopy(result_1140850820, {kind: 1, message: nimCopy(null, group_1140850821, NTI33554449), group: [], collectionInformation: 0}, NTI1140850765);
      break BeforeRet;
      }
      
    }
    
    if (eqStrings(group_1140850821, [])) {
    raiseException({message: ([107,117,110,100,101,32,105,110,116,101,32,116,111,108,107,97,32,98,108,111,100,103,114,117,112,112,32,102,195,182,114,58,32,39] || []).concat(bg_1140850819.aboRhD || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  };

  return result_1140850820;

}

function interpretKell_1140850896(bg_1140850897) {
  var result_1140850898 = 0;

    switch (bg_1140850897.rhKellMi[chckIndx(0, 0, (bg_1140850897.rhKellMi).length - 1)]) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 88:
      result_1140850898 = 2;
      break;
    case 83:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 89:
      result_1140850898 = 1;
      break;
    case 84:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 90:
      result_1140850898 = 0;
      break;
    case 85:
    case 86:
    case 87:
      result_1140850898 = 3;
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,75,101,108,108,58,32,39] || []).concat(bg_1140850897.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1140850898;

}

function interpretRh_1140850916(bg_1140850917) {
  var result_1140850918 = new Uint8Array(4);

    switch (bg_1140850917.rhKellMi[chckIndx(0, 0, (bg_1140850917.rhKellMi).length - 1)]) {
    case 48:
    case 83:
    case 84:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([2, 2, 2, 2]), NTI1140850839);
      break;
    case 49:
    case 65:
    case 74:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 1, 0]), NTI1140850839);
      break;
    case 50:
    case 66:
    case 75:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 1, 0]), NTI1140850839);
      break;
    case 51:
    case 67:
    case 76:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 0, 0]), NTI1140850839);
      break;
    case 52:
    case 68:
    case 77:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 0, 0, 1]), NTI1140850839);
      break;
    case 53:
    case 69:
    case 78:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 0, 0]), NTI1140850839);
      break;
    case 54:
    case 70:
    case 79:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 0, 0, 1]), NTI1140850839);
      break;
    case 55:
    case 71:
    case 80:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 1, 0]), NTI1140850839);
      break;
    case 56:
    case 72:
    case 81:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 0, 0]), NTI1140850839);
      break;
    case 57:
    case 73:
    case 82:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([0, 1, 0, 1]), NTI1140850839);
      break;
    case 88:
    case 89:
    case 90:
      result_1140850918 = nimCopy(result_1140850918, new Uint8Array([1, 2, 1, 2]), NTI1140850839);
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,82,104,58,32,39] || []).concat(bg_1140850917.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1140850918;

}

function interpretMi_1140850936(bg_1140850937) {
  var result_1140850938 = 0;

    if (eqStrings(bg_1140850937.rhKellMi, [85])) {
    result_1140850938 = 1;
    }
    else {
    if (eqStrings(bg_1140850937.rhKellMi, [86])) {
    result_1140850938 = 0;
    }
    }

  return result_1140850938;

}

function interpretRhKellMi_1140850939(bg_1140850940) {
  var result_1140850941 = ({kind: 0, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0});

  BeforeRet: {
    if (eqStrings(bg_1140850940.rhKellMi, [87])) {
    result_1140850941 = nimCopy(result_1140850941, {kind: 2, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0}, NTI1140850821);
    break BeforeRet;
    }
    
    var kell_1140850942 = interpretKell_1140850896(bg_1140850940);
    if (!((kell_1140850942 == 3))) {
    var rh_1140850948 = interpretRh_1140850916(bg_1140850940);
    result_1140850941 = nimCopy(result_1140850941, {kind: 0, kell: kell_1140850942, rhC: rh_1140850948[chckIndx(0, 0, (rh_1140850948).length - 1)], rhsmallc: rh_1140850948[chckIndx(1, 0, (rh_1140850948).length - 1)], rhE: rh_1140850948[chckIndx(2, 0, (rh_1140850948).length - 1)], rhsmalle: rh_1140850948[chckIndx(3, 0, (rh_1140850948).length - 1)], mipheno: 0}, NTI1140850821);
    }
    else {
      var mi_1140850949 = interpretMi_1140850936(bg_1140850940);
      result_1140850941 = nimCopy(result_1140850941, {kind: 1, mipheno: mi_1140850949, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0}, NTI1140850821);
    }
    
  };

  return result_1140850941;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_385875976(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}

function toHtml_1140851014(bg_1140851015) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;

  var result_1140851016 = [];

    var aboRhD_1140851018 = interpretABORhD_1140850818(bg_1140851015);
    var rhKellMi_1140851019 = interpretRhKellMi_1140850939(bg_1140851015);
    var aboRows_1140851020 = ([60,116,114,62,60,116,100,62,65,66,79,32,111,99,104,32,82,104,68,45,75,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1140851015.aboRhD || [],[60,47,116,100,62,60,47,116,114,62] || []);
    if ((aboRhD_1140851018.kind == 0)) {
    var Temporary1 = aboRhD_1140851018;
    if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'group\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1140850763)); }
    aboRows_1140851020.push.apply(aboRows_1140851020, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,65,66,79,32,111,99,104,32,82,104,68,60,47,116,100,62,60,116,100,62] || []).concat(Temporary1.group || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    var Temporary2 = aboRhD_1140851018;
    if (ConstSet8[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'collectionInformation\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1140850763)); }
    aboRows_1140851020.push.apply(aboRows_1140851020, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,84,97,112,112,110,105,110,103,115,116,121,112,60,47,116,100,62,60,116,100,62] || []).concat(reprEnum(Temporary2.collectionInformation, NTI1140850764) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    else {
      var Temporary3 = aboRhD_1140851018;
      if (ConstSet9[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'message\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1140850763)); }
    aboRows_1140851020.push.apply(aboRows_1140851020, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,77,101,100,100,101,108,97,110,100,101,60,47,116,100,62,60,116,100,62] || []).concat(Temporary3.message || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    
    var phenoRows_1140851029 = ([60,116,114,62,60,116,100,62,70,101,110,111,116,121,112,115,107,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1140851015.rhKellMi || [],[60,47,116,100,62,60,47,116,114,62] || []);
    switch (rhKellMi_1140851019.kind) {
    case 0:
      var Temporary4 = rhKellMi_1140851019;
      if (ConstSet10[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kell\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1140850819)); }
      var Temporary5 = rhKellMi_1140851019;
      if (ConstSet11[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhC\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1140850819)); }
      var Temporary6 = rhKellMi_1140851019;
      if (ConstSet12[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmallc\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1140850819)); }
      var Temporary7 = rhKellMi_1140851019;
      if (ConstSet13[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhE\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1140850819)); }
      var Temporary8 = rhKellMi_1140851019;
      if (ConstSet14[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmalle\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1140850819)); }
      var phenoString_1140851045 = ([75] || []).concat(reprEnum(Temporary4.kell, NTI1140850820) || [],[32,67] || [],reprEnum(Temporary5.rhC, NTI1140850820) || [],[32,99] || [],reprEnum(Temporary6.rhsmallc, NTI1140850820) || [],[32,69] || [],reprEnum(Temporary7.rhE, NTI1140850820) || [],[32,101] || [],reprEnum(Temporary8.rhsmalle, NTI1140850820) || []);
      phenoRows_1140851029.push.apply(phenoRows_1140851029, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,70,101,110,111,116,121,112,32,40,82,104,47,75,41,60,47,116,100,62,60,116,100,62] || []).concat(phenoString_1140851045 || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 1:
      var Temporary9 = rhKellMi_1140851019;
      if (ConstSet15[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'mipheno\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1140850819)); }
      phenoRows_1140851029.push.apply(phenoRows_1140851029, (makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Fenotyp (Mi<sup>a</sup>/Mur)</td><td>") || []).concat(reprEnum(Temporary9.mipheno, NTI1140850820) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 2:
      phenoRows_1140851029.push.apply(phenoRows_1140851029, makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Fenotyp (ok\xC3\xA4nd)</td><td>Special Testing bar code present and must be scanned and interpreted</td></tr>"));;
      break;
    }
    var head_1140851049 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1140851050 = ([60,116,98,111,100,121,62] || []).concat(aboRows_1140851020 || [],phenoRows_1140851029 || [],[60,116,114,62,60,116,100,62,101,60,47,116,100,62,60,116,100,62] || [],bg_1140851015.e || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1140851016.push.apply(result_1140851016, ([60,116,97,98,108,101,62] || []).concat(head_1140851049 || [],body_1140851050 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1140851016;

}

function verifyBloodGroupsABORhD_1140850696(code_1140850697) {
    if (!(((code_1140850697).length == 6))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1140850697).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseBloodGroupsABORhD_1140850699(code_1140850700) {
  var result_1140850701 = ({dataIdentifier: [], aboRhD: [], rhKellMi: [], e: []});

    verifyBloodGroupsABORhD_1140850696(code_1140850700);
    result_1140850701.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1140850701.aboRhD = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1040187440(2, 3)), NTI33554449);
    result_1140850701.rhKellMi = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1040187440(4, 4)), NTI33554449);
    result_1140850701.e = nimCopy(null, HEX5BHEX5D_704644351(code_1140850700, HEX2EHEX2E_1040187440(5, 5)), NTI33554449);

  return result_1140850701;

}

function parseProductDescription_1157627971(code_1157627972) {
        var Temporary7;
        var Temporary8;

  var result_1157627973 = [];

    switch (code_1157627972.productDescriptionCode[chckIndx(0, 0, (code_1157627972.productDescriptionCode).length - 1)]) {
    case 69:
    case 70:
      result_1157627973 = nimCopy(null, [66,108,111,111,100,32,67,111,109,112,111,110,101,110,116,115], NTI33554449);
      break;
    case 72:
      result_1157627973 = nimCopy(null, makeNimstrLit("Medical products of human origin (MPHO) with International Nonproprietary Names (INN) and/or United States Adopted Name (USAN) names"), NTI33554449);
      break;
    case 77:
++excHandler;
      try {
      var numeric_1157627992 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1157627992 >= 1 && numeric_1157627992 <= 999      ){        result_1157627973 = nimCopy(null, [72,117,109,97,110,32,77,105,108,107], NTI33554449);
        }
      else if (      numeric_1157627992 >= 1000 && numeric_1157627992 <= 8999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else if (      numeric_1157627992 >= 9000 && numeric_1157627992 <= 9999      ){        result_1157627973 = nimCopy(null, [84,111,112,105,99,97,108,32,80,114,111,100,117,99,116,115,32,111,102,32,72,117,109,97,110,32,79,114,105,103,105,110], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 78:
++excHandler;
      try {
      var numeric_1157628011 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1157628011 >= 1 && numeric_1157628011 <= 999      ){        result_1157627973 = nimCopy(null, [79,114,103,97,110,115], NTI33554449);
        }
      else if (      numeric_1157628011 >= 1000 && numeric_1157628011 <= 9999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 80:
      result_1157627973 = nimCopy(null, [82,101,103,101,110,101,114,97,116,101,100,32,84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 82:
++excHandler;
      try {
      var numeric_1157628030 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1157628030 >= 1 && numeric_1157628030 <= 999      ){        result_1157627973 = nimCopy(null, [82,101,112,114,111,100,117,99,116,105,118,101,32,84,105,115,115,117,101,32,97,110,100,32,67,101,108,108,32,112,114,111,100,117,99,116,115], NTI33554449);
        }
      else if (      numeric_1157628030 >= 1000 && numeric_1157628030 <= 9999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 83:
      result_1157627973 = nimCopy(null, [67,101,108,108,117,108,97,114,32,84,104,101,114,97,112,121,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 84:
      result_1157627973 = nimCopy(null, [84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 86:
      result_1157627973 = nimCopy(null, [79,99,117,108,97,114,32,84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 87:
++excHandler;
      try {
      var numeric_1157628049 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1157628049 >= 1 && numeric_1157628049 <= 999      ){        result_1157627973 = nimCopy(null, [70,101,99,97,108,32,77,105,99,114,111,98,105,111,116,97], NTI33554449);
        }
      else if (      numeric_1157628049 >= 1000 && numeric_1157628049 <= 9999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 88:
++excHandler;
      try {
      var numeric_1157628068 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1157628068 >= 1 && numeric_1157628068 <= 999      ){        result_1157627973 = nimCopy(null, [80,108,97,115,109,97,32,68,101,114,105,118,97,116,105,118,101,115], NTI33554449);
        }
      else if (      numeric_1157628068 >= 1000 && numeric_1157628068 <= 4999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else if (      numeric_1157628068 >= 5000 && numeric_1157628068 <= 5999      ){        result_1157627973 = nimCopy(null, [73,110,32,86,105,118,111,32,68,105,97,103,110,111,115,116,105,99,32,77,101,100,105,99,97,108,32,112,114,111,100,117,99,116,115,32,111,102,32,104,117,109,97,110,32,111,114,105,103,105,110,32,40,77,80,72,79,41], NTI33554449);
        }
      else if (      numeric_1157628068 >= 6000 && numeric_1157628068 <= 9999      ){        result_1157627973 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 89:
++excHandler;
      try {
      var second_1157628069 = code_1157627972.productDescriptionCode[chckIndx(1, 0, (code_1157627972.productDescriptionCode).length - 1)];
      var numeric_1157628088 = nsuParseInt(HEX5BHEX5D_704644351(code_1157627972.productDescriptionCode, HEX2EHEX2E_1040187440(2, 4)));
        if (!(ConstSet16[second_1157628069] != undefined)) Temporary8 = false; else {          Temporary8 = (0 <= numeric_1157628088);        }        if (!Temporary8) Temporary7 = false; else {          Temporary7 = (numeric_1157628088 <= 999);        }      if (Temporary7) {
      result_1157627973 = nimCopy(null, [67,108,105,110,105,99,97,108,32,84,114,105,97,108,115,32,112,114,111,100,117,99,116,115], NTI33554449);
      }
      else {
      }
      
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 65:
    case 66:
    case 67:
    case 68:
      result_1157627973 = nimCopy(null, [78,97,116,105,111,110,97,108,32,111,114,32,76,111,99,97,108,47,70,97,99,105,108,105,116,121,32,99,111,100,101,115], NTI33554449);
      break;
    default: 
      break;
    }
    if (((result_1157627973).length == 0)) {
    raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,58,32] || []).concat(code_1157627972.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1157627973;

}

function parseCollectionType_1157628094(first_1157628095) {
    var Temporary1;

  var result_1157628096 = [];

    switch (first_1157628095) {
    case 48:
      Temporary1 = [78,111,116,32,115,112,101,99,105,102,105,101,100,32,40,110,117,108,108,32,118,97,108,117,101,41];
      break;
    case 86:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,104,111,109,111,108,111,103,111,117,115,32,40,97,108,108,111,103,101,110,101,105,99,41,32,40,100,101,102,97,117,108,116,41];
      break;
    case 82:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,114,101,115,101,97,114,99,104,32,40,80,114,111,100,117,99,116,32,110,111,116,32,105,110,116,101,110,100,101,100,32,102,111,114,32,104,117,109,97,110,32,97,112,112,108,105,99,97,116,105,111,110,41];
      break;
    case 83:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,115,111,117,114,99,101];
      break;
    case 84:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,116,104,101,114,97,112,101,117,116,105,99];
      break;
    case 80:
      Temporary1 = [80,97,105,100,32,104,111,109,111,108,111,103,111,117,115,32,40,97,108,108,111,103,101,110,101,105,99,41];
      break;
    case 114:
      Temporary1 = [80,97,105,100,32,114,101,115,101,97,114,99,104,32,40,80,114,111,100,117,99,116,32,110,111,116,32,105,110,116,101,110,100,101,100,32,102,111,114,32,104,117,109,97,110,32,97,112,112,108,105,99,97,116,105,111,110,41];
      break;
    case 115:
      Temporary1 = [80,97,105,100,32,115,111,117,114,99,101];
      break;
    case 65:
      Temporary1 = [65,117,116,111,108,111,103,111,117,115,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 49:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,32,111,110,108,121];
      break;
    case 88:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,32,111,110,108,121,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 68:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,100,105,114,101,99,116,101,100,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 100:
      Temporary1 = [80,97,105,100,32,100,105,114,101,99,116,101,100,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 50:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121];
      break;
    case 76:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121,44,32,108,105,109,105,116,101,100,32,101,120,112,111,115,117,114,101];
      break;
    case 69:
      Temporary1 = [77,101,100,105,99,97,108,32,101,120,99,101,112,116,105,111,110,44,32,102,111,114,32,115,112,101,99,105,102,105,101,100,32,114,101,99,105,112,105,101,110,116,32,111,110,108,121,32,40,97,108,108,111,103,101,110,101,105,99,41];
      break;
    case 81:
      Temporary1 = [83,101,101,32,40,105,46,101,46,44,32,114,101,97,100,32,91,115,99,97,110,93,41,32,83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,32,98,97,114,32,99,111,100,101];
      break;
    case 51:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 52:
      Temporary1 = [68,101,115,105,103,110,97,116,101,100];
      break;
    case 53:
      Temporary1 = [68,101,100,105,99,97,116,101,100];
      break;
    case 54:
      Temporary1 = [68,101,115,105,103,110,97,116,101,100,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 70:
      Temporary1 = [70,97,109,105,108,121,32,114,101,115,101,114,118,101,100];
      break;
    case 67:
      Temporary1 = [82,101,112,108,97,99,101,109,101,110,116];
      break;
    case 55:
      Temporary1 = [70,111,114,32,97,108,108,111,103,101,110,101,105,99,32,117,115,101,46];
      break;
    case 56:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,46,32,67,111,110,116,97,105,110,115,32,97,108,108,111,103,101,110,101,105,99,32,109,97,116,101,114,105,97,108,46];
      break;
    case 66:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,32,85,115,101,32,79,110,108,121];
      break;
    case 72:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,47,66,105,111,104,97,122,97,114,100,111,117,115];
      break;
    case 74:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,47,69,108,105,103,105,98,108,101,32,102,111,114,32,67,114,111,115,115,111,118,101,114];
      break;
    case 71:
      Temporary1 = [70,111,114,32,69,109,101,114,103,101,110,99,121,32,85,115,101,32,79,110,108,121];
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,100,32,116,121,112,32,97,118,32,116,97,112,112,110,105,110,103,32,101,108,108,101,114,32,100,111,110,97,116,105,111,110,58,32] || []).concat([first_1157628095]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1157628096 = nimCopy(null, Temporary1, NTI33554449);

  return result_1157628096;

}

function parseTds_1157628108(code_1157628109) {
        var Temporary1;

  var result_1157628110 = ({division: [], kind: 0, collectionType: []});

    var first_1157628111 = code_1157628109.productDescriptionCode[chckIndx(0, 0, (code_1157628109.productDescriptionCode).length - 1)];
    var second_1157628112 = code_1157628109.productDescriptionCode[chckIndx(0, 0, (code_1157628109.productDescriptionCode).length - 1)];
    switch (first_1157628111) {
    case 69:
    case 70:
    case 72:
    case 83:
    case 80:
    case 88:
    case 89:
      if (((first_1157628111 == 88) && !((second_1157628112 == 48)))) {
      if ((ConstSet17[second_1157628112] != undefined)) {
      result_1157628110 = nimCopy(result_1157628110, {kind: 0, division: nimCopy(null, code_1157628109.tds, NTI33554449), collectionType: []}, NTI1157628087);
      }
      else {
        raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,32,102,195,182,114,32,116,100,115,58,32] || []).concat(code_1157628109.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
      }
      else {
        if (!(first_1157628111 == 89)) Temporary1 = false; else {          Temporary1 = !((ConstSet18[second_1157628112] != undefined));        }      if (Temporary1) {
      raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,32,102,195,182,114,32,116,100,115,58,32] || []).concat(code_1157628109.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      }
      var collectionType_1157628123 = parseCollectionType_1157628094(code_1157628109.tds[chckIndx(0, 0, (code_1157628109.tds).length - 1)]);
      var division_1157628142 = HEX5BHEX5D_704644351(code_1157628109.tds, HEX2EHEX2E_1040187440(1, 2));
      result_1157628110 = nimCopy(result_1157628110, {kind: 1, collectionType: nimCopy(null, collectionType_1157628123, NTI33554449), division: nimCopy(null, division_1157628142, NTI33554449)}, NTI1157628087);
      break;
    case 77:
    case 78:
    case 82:
    case 84:
    case 86:
    case 87:
      result_1157628110 = nimCopy(result_1157628110, {kind: 0, division: nimCopy(null, code_1157628109.tds, NTI33554449), collectionType: []}, NTI1157628087);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
      result_1157628110 = nimCopy(result_1157628110, {kind: 0, division: nimCopy(null, code_1157628109.tds, NTI33554449), collectionType: []}, NTI1157628087);
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,58,32] || []).concat(code_1157628109.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1157628110;

}

function toHtml_1157628183(code_1157628184) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_1157628185 = [];

    var productType_1157628187 = parseProductDescription_1157627971(code_1157628184);
    var tds_1157628188 = parseTds_1157628108(code_1157628184);
    var tdsRows_1157628189 = [];
    switch (tds_1157628188.kind) {
    case 0:
      if (eqStrings(tds_1157628188.division, [48,48,48])) {
      Temporary1 = [101,106,32,100,101,108,97,100];
      }
      else {
      Temporary1 = [100,101,108,97,100];
      }
      
      tdsRows_1157628189 = nimCopy(null, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,101,108,110,105,110,103,60,47,116,100,62,60,116,100,62] || []).concat(Temporary1 || [],[60,47,116,100,62,60,47,116,114,62] || []), NTI33554449);
      break;
    case 1:
      var Temporary2 = tds_1157628188;
      if (ConstSet19[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'collectionType\' is not accessible for type \'Tds\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1157628086)); }
      tdsRows_1157628189.push.apply(tdsRows_1157628189, (makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Typ av tappning och anv\xC3\xA4ndning</td><td>") || []).concat(Temporary2.collectionType || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      if ((ConstSet20[code_1157628184.productDescriptionCode[chckIndx(0, 0, (code_1157628184.productDescriptionCode).length - 1)]] != undefined)) {
      tdsRows_1157628189.push.apply(tdsRows_1157628189, makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Delning</td><td>lokalt eller nationellt definierad kod</td></tr>"));;
      }
      else {
        if (eqStrings(tds_1157628188.division, [57,57])) {
        Temporary3 = [100,97,116,97,115,116,114,117,107,116,117,114,32,48,51,50,32,103,101,114,32,105,110,102,111,114,109,97,116,105,111,110,32,111,109,32,100,101,108,110,105,110,103];
        }
        else {
        if (eqStrings(tds_1157628188.division, [48,48])) {
        Temporary3 = [101,106,32,100,101,108,97,100];
        }
        else {
        Temporary3 = [100,101,108,97,100];
        }
        }
        var divisionField_1157628194 = nimCopy(null, Temporary3, NTI33554449);
        tdsRows_1157628189.push.apply(tdsRows_1157628189, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,101,108,110,105,110,103,60,47,116,100,62,60,116,100,62] || []).concat(divisionField_1157628194 || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      }
      
      break;
    }
    var head_1157628195 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1157628196 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,80,114,111,100,117,107,116,107,111,100,60,47,116,100,62,60,116,100,62] || []).concat(code_1157628184.productDescriptionCode || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Komponenttyp</td><td>") || [],productType_1157628187 || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,116,100,115,60,47,116,100,62,60,116,100,62] || [],code_1157628184.tds || [],[60,47,116,100,62,60,47,116,114,62] || [],tdsRows_1157628189 || [],[60,47,116,98,111,100,121,62] || []);
    result_1157628185.push.apply(result_1157628185, ([60,116,97,98,108,101,62] || []).concat(head_1157628195 || [],body_1157628196 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1157628185;

}

function verifyProductCode_1157627911(code_1157627912) {
    if (!(((code_1157627912).length == 10))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1157627912).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductCode_1157627914(code_1157627915) {
  var result_1157627916 = ({dataIdentifier: [], productDescriptionCode: [], tds: []});

    verifyProductCode_1157627911(code_1157627915);
    result_1157627916.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1157627915, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1157627916.productDescriptionCode = nimCopy(null, HEX5BHEX5D_704644351(code_1157627915, HEX2EHEX2E_1040187440(2, 6)), NTI33554449);
    result_1157627916.tds = nimCopy(null, HEX5BHEX5D_704644351(code_1157627915, HEX2EHEX2E_1040187440(7, 9)), NTI33554449);

  return result_1157627916;

}

function toHtml_1174405205(date_1174405206) {
  var result_1174405207 = [];

    var head_1174405208 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1174405209 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1174405206.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1174405206.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1174405206.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1174405207.push.apply(result_1174405207, ([60,116,97,98,108,101,62] || []).concat(head_1174405208 || [],body_1174405209 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1174405207;

}

function verifyExpirationDate_1174405127(code_1174405128) {
    if (!(((code_1174405128).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1174405128).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseExpirationDate_1174405130(code_1174405131) {
  var result_1174405132 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyExpirationDate_1174405127(code_1174405131);
    result_1174405132.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1174405131, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1174405132.c = nimCopy(null, HEX5BHEX5D_704644351(code_1174405131, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1174405132.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1174405131, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1174405132.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1174405131, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1174405132;

}

function toHtml_1191182459(date_1191182460) {
  var result_1191182461 = [];

    var head_1191182462 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1191182463 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1191182460.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1191182460.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1191182460.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1191182460.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1191182460.mm || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1191182461.push.apply(result_1191182461, ([60,116,97,98,108,101,62] || []).concat(head_1191182462 || [],body_1191182463 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1191182461;

}

function verifyExpirationDateAndTime_1191182345(code_1191182346) {
    if (!(((code_1191182346).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1191182346).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseExpirationDateAndTime_1191182348(code_1191182349) {
  var result_1191182350 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyExpirationDateAndTime_1191182345(code_1191182349);
    result_1191182350.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1191182350.c = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1191182350.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1191182350.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1191182350.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1191182350.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1191182349, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1191182350;

}

function toHtml_1207959637(date_1207959638) {
  var result_1207959639 = [];

    var head_1207959640 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1207959641 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1207959638.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1207959638.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1207959638.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1207959639.push.apply(result_1207959639, ([60,116,97,98,108,101,62] || []).concat(head_1207959640 || [],body_1207959641 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1207959639;

}

function verifyCollectionDate_1207959559(code_1207959560) {
    if (!(((code_1207959560).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1207959560).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseCollectionDate_1207959562(code_1207959563) {
  var result_1207959564 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyCollectionDate_1207959559(code_1207959563);
    result_1207959564.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1207959563, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1207959564.c = nimCopy(null, HEX5BHEX5D_704644351(code_1207959563, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1207959564.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1207959563, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1207959564.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1207959563, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1207959564;

}

function toHtml_1224736891(date_1224736892) {
  var result_1224736893 = [];

    var head_1224736894 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1224736895 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1224736892.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1224736892.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1224736892.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1224736892.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1224736892.mm || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1224736893.push.apply(result_1224736893, ([60,116,97,98,108,101,62] || []).concat(head_1224736894 || [],body_1224736895 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1224736893;

}

function verifyCollectionDateAndTime_1224736777(code_1224736778) {
    if (!(((code_1224736778).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1224736778).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseCollectionDateAndTime_1224736780(code_1224736781) {
  var result_1224736782 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyCollectionDateAndTime_1224736777(code_1224736781);
    result_1224736782.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1224736782.c = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1224736782.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1224736782.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1224736782.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1224736782.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1224736781, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1224736782;

}

function toHtml_1241514069(date_1241514070) {
  var result_1241514071 = [];

    var head_1241514072 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1241514073 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1241514070.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1241514070.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1241514070.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1241514071.push.apply(result_1241514071, ([60,116,97,98,108,101,62] || []).concat(head_1241514072 || [],body_1241514073 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1241514071;

}

function verifyProductionDate_1241513991(code_1241513992) {
    if (!(((code_1241513992).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1241513992).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductionDate_1241513994(code_1241513995) {
  var result_1241513996 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyProductionDate_1241513991(code_1241513995);
    result_1241513996.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1241513995, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1241513996.c = nimCopy(null, HEX5BHEX5D_704644351(code_1241513995, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1241513996.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1241513995, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1241513996.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1241513995, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1241513996;

}

function toHtml_1258291323(date_1258291324) {
  var result_1258291325 = [];

    var head_1258291326 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1258291327 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1258291324.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1258291324.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1258291324.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1258291324.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1258291324.mm || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1258291325.push.apply(result_1258291325, ([60,116,97,98,108,101,62] || []).concat(head_1258291326 || [],body_1258291327 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1258291325;

}

function verifyProductionDateAndTime_1258291209(code_1258291210) {
    if (!(((code_1258291210).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1258291210).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductionDateAndTime_1258291212(code_1258291213) {
  var result_1258291214 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyProductionDateAndTime_1258291209(code_1258291213);
    result_1258291214.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1258291214.c = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1258291214.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1258291214.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1258291214.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1258291214.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1258291213, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1258291214;

}

function toHtml_1275068463(code_1275068464) {
  var result_1275068465 = [];

    var head_1275068467 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1275068468 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,122,122,122,122,122,60,47,116,100,62,60,116,100,62] || []).concat(code_1275068464.zzzzz || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Tolkning</td><td>G\xC3\xA5r ej att tolka, ej \xC3\xB6ppen tillg\xC3\xA5ng till information</td></tr></tbody>") || []);
    result_1275068465.push.apply(result_1275068465, ([60,116,97,98,108,101,62] || []).concat(head_1275068467 || [],body_1275068468 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1275068465;

}

function verifySpecialTestingGeneral_1275068421(code_1275068422) {
    if (!(((code_1275068422).length == 7))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,55,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1275068422).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingGeneral_1275068424(code_1275068425) {
  var result_1275068426 = ({dataIdentifier: [], zzzzz: []});

    verifySpecialTestingGeneral_1275068421(code_1275068425);
    result_1275068426.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1275068425, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1275068426.zzzzz = nimCopy(null, HEX5BHEX5D_704644351(code_1275068425, HEX2EHEX2E_1040187440(2, 6)), NTI33554449);

  return result_1275068426;

}

function add_1291845778(x_1291845780, x_1291845780_Idx, y_1291845781) {
    var Temporary1;

    var xl_1291845786 = (x_1291845780[x_1291845780_Idx]).length;
    if (x_1291845780[x_1291845780_Idx].length < (Temporary1 = chckRange(addInt(xl_1291845786, (y_1291845781).length), 0, 2147483647), Temporary1)) { for (var i = x_1291845780[x_1291845780_Idx].length ; i < Temporary1 ; ++i) x_1291845780[x_1291845780_Idx].push({Field0: [], Field1: 0}); }
               else { x_1291845780[x_1291845780_Idx].length = Temporary1; };
    Label2: {
      var i_1291845802 = 0;
      var colontmp__570425775 = 0;
      colontmp__570425775 = (y_1291845781).length - 1;
      var res_570425776 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425776 <= colontmp__570425775)) break Label4;
            i_1291845802 = res_570425776;
            x_1291845780[x_1291845780_Idx][chckIndx(addInt(xl_1291845786, i_1291845802), 0, (x_1291845780[x_1291845780_Idx]).length - 1)] = nimCopy(x_1291845780[x_1291845780_Idx][chckIndx(addInt(xl_1291845786, i_1291845802), 0, (x_1291845780[x_1291845780_Idx]).length - 1)], y_1291845781[chckIndx(i_1291845802, 0, (y_1291845781).length - 1)], NTI1291845693);
            res_570425776 = addInt(res_570425776, 1);
          }
      };
    };

  
}

function parseRh_1291845716(value_1291845717) {
  var result_1291845718 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1291845717) {
    case 48:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1291845716);
      break;
    case 49:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1291845716);
      break;
    case 50:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1291845716);
      break;
    case 51:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 52:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 53:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 54:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 55:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 56:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1291845716);
      break;
    case 57:
      result_1291845718 = nimCopy(result_1291845718, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1291845716);
      break;
    }

  return result_1291845718;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function parseAntigen_1291845768(spec_1291845769) {
  var result_1291845770 = [[]];

    var agIndex_1291845775 = 0;
    Label1: {
      var i_1291845776 = 0;
      var a_1291845777 = 0;
      var i_570425771 = 0;
      var L_570425772 = (spec_1291845769.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425771 < L_570425772)) break Label3;
            i_1291845776 = i_570425771;
            a_1291845777 = spec_1291845769.aaaaaaaaaaaaaaaa[chckIndx(i_570425771, 0, (spec_1291845769.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1291845776 == 0)) {
              add_1291845778(result_1291845770, 0, parseRh_1291845716(chckRange(a_1291845777, 48, 57)));
              break Label4;
              }
              
              result_1291845770[0].push({Field0: nimCopy(null, antigens_1291845713[chckIndx(agIndex_1291845775, 0, (antigens_1291845713).length - 1)], NTI33554449), Field1: phenoOne_1291845714[chckIndx(a_1291845777, 48, (phenoOne_1291845714).length + (48) - 1) - (48)]});;
              agIndex_1291845775 = addInt(agIndex_1291845775, 1);
              result_1291845770[0].push({Field0: nimCopy(null, antigens_1291845713[chckIndx(agIndex_1291845775, 0, (antigens_1291845713).length - 1)], NTI33554449), Field1: phenoTwo_1291845715[chckIndx(a_1291845777, 48, (phenoTwo_1291845715).length + (48) - 1) - (48)]});;
              agIndex_1291845775 = addInt(agIndex_1291845775, 1);
            };
            i_570425771 = addInt(i_570425771, 1);
            if (!(((spec_1291845769.aaaaaaaaaaaaaaaa).length == L_570425772))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291845770[0];

}

function parseNegativeAntigen_1291845869(spec_1291845870) {
  var result_1291845871 = [];

++excHandler;
    try {
    var numeric_1291845872 = nsuParseInt(spec_1291845870.ii);
    if ((((99 < numeric_1291845872) || (numeric_1291845872 == 7)) || (numeric_1291845872 == 8))) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1291845870.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1291845871 = nimCopy(null, antigenNegativ_1291845868[chckIndx(numeric_1291845872, 0, (antigenNegativ_1291845868).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1291845870.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291845871;

}

function toHtml_1291845875(spec_1291845876) {
  var result_1291845877 = [];

    var pheno_1291845879 = parseAntigen_1291845768(spec_1291845876);
    var phenotypeRows_1291845880 = [];
    Label1: {
      var pair_1291845902 = {Field0: [], Field1: 0};
      var i_570425765 = 0;
      var L_570425766 = (pheno_1291845879).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425765 < L_570425766)) break Label3;
            pair_1291845902 = pheno_1291845879[chckIndx(i_570425765, 0, (pheno_1291845879).length - 1)];
            phenotypeRows_1291845880.push.apply(phenotypeRows_1291845880, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1291845902.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1291845902.Field1, NTI1291845692) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425765 = addInt(i_570425765, 1);
            if (!(((pheno_1291845879).length == L_570425766))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1291845906 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1291845907 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1291845876.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1291845880 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1291845876.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1291845869(spec_1291845876) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1291845877.push.apply(result_1291845877, ([60,116,97,98,108,101,62] || []).concat(head_1291845906 || [],body_1291845907 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1291845877;

}

function verifySpecialTestingAntigensRetired_1291845639(code_1291845640) {
    if (!(((code_1291845640).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1291845640).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensRetired_1291845642(code_1291845643) {
  var result_1291845644 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensRetired_1291845639(code_1291845643);
    result_1291845644.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1291845643, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1291845644.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1291845643, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1291845644.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1291845643, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1291845644;

}

function add_1308622994(x_1308622996, x_1308622996_Idx, y_1308622997) {
    var Temporary1;

    var xl_1308623002 = (x_1308622996[x_1308622996_Idx]).length;
    if (x_1308622996[x_1308622996_Idx].length < (Temporary1 = chckRange(addInt(xl_1308623002, (y_1308622997).length), 0, 2147483647), Temporary1)) { for (var i = x_1308622996[x_1308622996_Idx].length ; i < Temporary1 ; ++i) x_1308622996[x_1308622996_Idx].push({Field0: [], Field1: 0}); }
               else { x_1308622996[x_1308622996_Idx].length = Temporary1; };
    Label2: {
      var i_1308623018 = 0;
      var colontmp__570425789 = 0;
      colontmp__570425789 = (y_1308622997).length - 1;
      var res_570425790 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425790 <= colontmp__570425789)) break Label4;
            i_1308623018 = res_570425790;
            x_1308622996[x_1308622996_Idx][chckIndx(addInt(xl_1308623002, i_1308623018), 0, (x_1308622996[x_1308622996_Idx]).length - 1)] = nimCopy(x_1308622996[x_1308622996_Idx][chckIndx(addInt(xl_1308623002, i_1308623018), 0, (x_1308622996[x_1308622996_Idx]).length - 1)], y_1308622997[chckIndx(i_1308623018, 0, (y_1308622997).length - 1)], NTI1308622909);
            res_570425790 = addInt(res_570425790, 1);
          }
      };
    };

  
}

function parseRh_1308622932(value_1308622933) {
  var result_1308622934 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1308622933) {
    case 48:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 49:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 50:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 51:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 52:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 53:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 54:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 55:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 56:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 57:
      result_1308622934 = nimCopy(result_1308622934, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1308622932);
      break;
    }

  return result_1308622934;

}

function parseAntigen_1308622984(spec_1308622985) {
  var result_1308622986 = [[]];

    var agIndex_1308622991 = 0;
    Label1: {
      var i_1308622992 = 0;
      var a_1308622993 = 0;
      var i_570425785 = 0;
      var L_570425786 = (spec_1308622985.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425785 < L_570425786)) break Label3;
            i_1308622992 = i_570425785;
            a_1308622993 = spec_1308622985.aaaaaaaaaaaaaaaa[chckIndx(i_570425785, 0, (spec_1308622985.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1308622992 == 0)) {
              add_1308622994(result_1308622986, 0, parseRh_1308622932(chckRange(a_1308622993, 48, 57)));
              break Label4;
              }
              
              result_1308622986[0].push({Field0: nimCopy(null, antigens_1308622929[chckIndx(agIndex_1308622991, 0, (antigens_1308622929).length - 1)], NTI33554449), Field1: phenoOne_1308622930[chckIndx(a_1308622993, 48, (phenoOne_1308622930).length + (48) - 1) - (48)]});;
              agIndex_1308622991 = addInt(agIndex_1308622991, 1);
              result_1308622986[0].push({Field0: nimCopy(null, antigens_1308622929[chckIndx(agIndex_1308622991, 0, (antigens_1308622929).length - 1)], NTI33554449), Field1: phenoTwo_1308622931[chckIndx(a_1308622993, 48, (phenoTwo_1308622931).length + (48) - 1) - (48)]});;
              agIndex_1308622991 = addInt(agIndex_1308622991, 1);
            };
            i_570425785 = addInt(i_570425785, 1);
            if (!(((spec_1308622985.aaaaaaaaaaaaaaaa).length == L_570425786))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1308622986[0];

}

function parseNegativeAntigen_1308623069(spec_1308623070) {
  var result_1308623071 = [];

++excHandler;
    try {
    var numeric_1308623072 = nsuParseInt(spec_1308623070.ii);
    if ((99 < numeric_1308623072)) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1308623070.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1308623071 = nimCopy(null, antigenNegativ_1308623068[chckIndx(numeric_1308623072, 0, (antigenNegativ_1308623068).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1308623070.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1308623071;

}

function toHtml_1308623075(spec_1308623076) {
  var result_1308623077 = [];

    var pheno_1308623079 = parseAntigen_1308622984(spec_1308623076);
    var phenotypeRows_1308623080 = [];
    Label1: {
      var pair_1308623102 = {Field0: [], Field1: 0};
      var i_570425780 = 0;
      var L_570425781 = (pheno_1308623079).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425780 < L_570425781)) break Label3;
            pair_1308623102 = pheno_1308623079[chckIndx(i_570425780, 0, (pheno_1308623079).length - 1)];
            phenotypeRows_1308623080.push.apply(phenotypeRows_1308623080, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1308623102.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1308623102.Field1, NTI1308622908) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425780 = addInt(i_570425780, 1);
            if (!(((pheno_1308623079).length == L_570425781))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1308623106 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1308623107 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1308623076.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1308623080 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1308623076.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1308623069(spec_1308623076) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1308623077.push.apply(result_1308623077, ([60,116,97,98,108,101,62] || []).concat(head_1308623106 || [],body_1308623107 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1308623077;

}

function verifySpecialTestingAntigensGeneral_1308622855(code_1308622856) {
    if (!(((code_1308622856).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1308622856).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensGeneral_1308622858(code_1308622859) {
  var result_1308622860 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensGeneral_1308622855(code_1308622859);
    result_1308622860.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1308622859, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1308622860.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1308622859, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1308622860.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1308622859, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1308622860;

}

function add_1325400210(x_1325400212, x_1325400212_Idx, y_1325400213) {
    var Temporary1;

    var xl_1325400218 = (x_1325400212[x_1325400212_Idx]).length;
    if (x_1325400212[x_1325400212_Idx].length < (Temporary1 = chckRange(addInt(xl_1325400218, (y_1325400213).length), 0, 2147483647), Temporary1)) { for (var i = x_1325400212[x_1325400212_Idx].length ; i < Temporary1 ; ++i) x_1325400212[x_1325400212_Idx].push({Field0: [], Field1: 0}); }
               else { x_1325400212[x_1325400212_Idx].length = Temporary1; };
    Label2: {
      var i_1325400234 = 0;
      var colontmp__570425803 = 0;
      colontmp__570425803 = (y_1325400213).length - 1;
      var res_570425804 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425804 <= colontmp__570425803)) break Label4;
            i_1325400234 = res_570425804;
            x_1325400212[x_1325400212_Idx][chckIndx(addInt(xl_1325400218, i_1325400234), 0, (x_1325400212[x_1325400212_Idx]).length - 1)] = nimCopy(x_1325400212[x_1325400212_Idx][chckIndx(addInt(xl_1325400218, i_1325400234), 0, (x_1325400212[x_1325400212_Idx]).length - 1)], y_1325400213[chckIndx(i_1325400234, 0, (y_1325400213).length - 1)], NTI1325400125);
            res_570425804 = addInt(res_570425804, 1);
          }
      };
    };

  
}

function parseRh_1325400148(value_1325400149) {
  var result_1325400150 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1325400149) {
    case 48:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 49:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 50:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 51:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 52:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 53:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 54:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 55:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 56:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 57:
      result_1325400150 = nimCopy(result_1325400150, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1325400148);
      break;
    }

  return result_1325400150;

}

function parseAntigen_1325400200(spec_1325400201) {
  var result_1325400202 = [[]];

    var agIndex_1325400207 = 0;
    Label1: {
      var i_1325400208 = 0;
      var a_1325400209 = 0;
      var i_570425799 = 0;
      var L_570425800 = (spec_1325400201.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425799 < L_570425800)) break Label3;
            i_1325400208 = i_570425799;
            a_1325400209 = spec_1325400201.aaaaaaaaaaaaaaaa[chckIndx(i_570425799, 0, (spec_1325400201.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1325400208 == 0)) {
              add_1325400210(result_1325400202, 0, parseRh_1325400148(chckRange(a_1325400209, 48, 57)));
              break Label4;
              }
              
              result_1325400202[0].push({Field0: nimCopy(null, antigens_1325400145[chckIndx(agIndex_1325400207, 0, (antigens_1325400145).length - 1)], NTI33554449), Field1: phenoOne_1325400146[chckIndx(a_1325400209, 48, (phenoOne_1325400146).length + (48) - 1) - (48)]});;
              agIndex_1325400207 = addInt(agIndex_1325400207, 1);
              result_1325400202[0].push({Field0: nimCopy(null, antigens_1325400145[chckIndx(agIndex_1325400207, 0, (antigens_1325400145).length - 1)], NTI33554449), Field1: phenoTwo_1325400147[chckIndx(a_1325400209, 48, (phenoTwo_1325400147).length + (48) - 1) - (48)]});;
              agIndex_1325400207 = addInt(agIndex_1325400207, 1);
            };
            i_570425799 = addInt(i_570425799, 1);
            if (!(((spec_1325400201.aaaaaaaaaaaaaaaa).length == L_570425800))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1325400202[0];

}

function parseNegativeAntigen_1325400269(spec_1325400270) {
  var result_1325400271 = [];

++excHandler;
    try {
    var numeric_1325400272 = nsuParseInt(spec_1325400270.ii);
    if ((99 < numeric_1325400272)) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1325400270.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1325400271 = nimCopy(null, antigenNegativ_1325400268[chckIndx(numeric_1325400272, 0, (antigenNegativ_1325400268).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1325400270.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325400271;

}

function toHtml_1325400275(spec_1325400276) {
  var result_1325400277 = [];

    var pheno_1325400279 = parseAntigen_1325400200(spec_1325400276);
    var phenotypeRows_1325400280 = [];
    Label1: {
      var pair_1325400302 = {Field0: [], Field1: 0};
      var i_570425794 = 0;
      var L_570425795 = (pheno_1325400279).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425794 < L_570425795)) break Label3;
            pair_1325400302 = pheno_1325400279[chckIndx(i_570425794, 0, (pheno_1325400279).length - 1)];
            phenotypeRows_1325400280.push.apply(phenotypeRows_1325400280, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1325400302.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1325400302.Field1, NTI1325400124) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425794 = addInt(i_570425794, 1);
            if (!(((pheno_1325400279).length == L_570425795))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1325400306 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1325400307 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1325400276.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1325400280 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1325400276.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1325400269(spec_1325400276) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1325400277.push.apply(result_1325400277, ([60,116,97,98,108,101,62] || []).concat(head_1325400306 || [],body_1325400307 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1325400277;

}

function verifySpecialTestingAntigensFinnish_1325400071(code_1325400072) {
    if (!(((code_1325400072).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1325400072).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensFinnish_1325400074(code_1325400075) {
  var result_1325400076 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensFinnish_1325400071(code_1325400075);
    result_1325400076.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1325400075, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1325400076.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1325400075, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1325400076.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1325400075, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1325400076;

}

function parseDataStructure_570425436(dataStructureType_570425437, code_570425438) {
  var result_570425439 = [];

    switch (dataStructureType_570425437) {
    case 0:
      result_570425439 = nimCopy(null, toHtml_1124073584(parseDonationIdentificationNumber_1124073484(code_570425438)), NTI33554449);
      break;
    case 1:
      result_570425439 = nimCopy(null, toHtml_1140851014(parseBloodGroupsABORhD_1140850699(code_570425438)), NTI33554449);
      break;
    case 2:
      result_570425439 = nimCopy(null, toHtml_1157628183(parseProductCode_1157627914(code_570425438)), NTI33554449);
      break;
    case 3:
      result_570425439 = nimCopy(null, toHtml_1174405205(parseExpirationDate_1174405130(code_570425438)), NTI33554449);
      break;
    case 4:
      result_570425439 = nimCopy(null, toHtml_1191182459(parseExpirationDateAndTime_1191182348(code_570425438)), NTI33554449);
      break;
    case 5:
      result_570425439 = nimCopy(null, toHtml_1207959637(parseCollectionDate_1207959562(code_570425438)), NTI33554449);
      break;
    case 6:
      result_570425439 = nimCopy(null, toHtml_1224736891(parseCollectionDateAndTime_1224736780(code_570425438)), NTI33554449);
      break;
    case 7:
      result_570425439 = nimCopy(null, toHtml_1241514069(parseProductionDate_1241513994(code_570425438)), NTI33554449);
      break;
    case 8:
      result_570425439 = nimCopy(null, toHtml_1258291323(parseProductionDateAndTime_1258291212(code_570425438)), NTI33554449);
      break;
    case 9:
      result_570425439 = nimCopy(null, toHtml_1275068463(parseSpecialTestingGeneral_1275068424(code_570425438)), NTI33554449);
      break;
    case 10:
      result_570425439 = nimCopy(null, toHtml_1291845875(parseSpecialTestingAntigensRetired_1291845642(code_570425438)), NTI33554449);
      break;
    case 11:
      result_570425439 = nimCopy(null, toHtml_1308623075(parseSpecialTestingAntigensGeneral_1308622858(code_570425438)), NTI33554449);
      break;
    case 12:
      result_570425439 = nimCopy(null, toHtml_1325400275(parseSpecialTestingAntigensFinnish_1325400074(code_570425438)), NTI33554449);
      break;
    default: 
      result_570425439 = nimCopy(null, ([84,111,108,107,110,105,110,103,32,195,164,114,32,105,110,116,101,32,105,109,112,108,101,109,101,110,116,101,114,97,100,32,102,195,182,114,32,100,97,116,97,116,121,112,101,110,58,32] || []).concat(reprEnum(dataStructureType_570425437, NTI570425347) || []), NTI33554449);
      break;
    }

  return result_570425439;

}

function nsuFindChar(s_704644756, sub_704644757, start_704644758, last_704644759) {
    var Temporary1;

  var result_704644760 = 0;

  BeforeRet: {
    result_704644760 = (-1);
    if ((last_704644759 < 0)) {
    Temporary1 = (s_704644756).length - 1;
    }
    else {
    Temporary1 = last_704644759;
    }
    
    var last_704644761 = Temporary1;
    Label2: {
      var iHEX60gensym176_704644775 = 0;
      var colontmp__570425813 = 0;
      colontmp__570425813 = start_704644758;
      var res_570425814 = colontmp__570425813;
      Label3: {
          Label4: while (true) {
          if (!(res_570425814 <= last_704644761)) break Label4;
            iHEX60gensym176_704644775 = res_570425814;
            if ((s_704644756[chckIndx(iHEX60gensym176_704644775, 0, (s_704644756).length - 1)] == sub_704644757)) {
            result_704644760 = iHEX60gensym176_704644775;
            break BeforeRet;
            }
            
            res_570425814 = addInt(res_570425814, 1);
          }
      };
    };
  };

  return result_704644760;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

    var first_33558084 = nimMax(first_33558081, 0);
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558090 = 0;
      var colontmp__1124073611 = 0;
      colontmp__1124073611 = subInt(L_33558085, 1);
      var res_1124073612 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1124073612 <= colontmp__1124073611)) break Label3;
            i_33558090 = res_1124073612;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            res_1124073612 = addInt(res_1124073612, 1);
          }
      };
    };

  return result_33558083;

}

function substr_33558091(s_33558092, first_33558093) {
  var result_33558094 = [];

    result_33558094 = nimCopy(null, substr_33558079(s_33558092, first_33558093, (s_33558092).length - 1), NTI33554449);

  return result_33558094;

}

function fill_704644694(a_704644696, value_704644697) {
    var xHEX60gensym172_704644703 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_704644703 <= (a_704644696).length - 1)) break Label2;
          a_704644696[chckIndx(xHEX60gensym172_704644703, 0, (a_704644696).length - 1)] = value_704644697;
          xHEX60gensym172_704644703 = addInt(xHEX60gensym172_704644703, 1);
        }
    };

  
}

function nsuInitSkipTable(a_704644691, sub_704644692) {
    var m_704644693 = (sub_704644692).length;
    fill_704644694(a_704644691, m_704644693);
    Label1: {
      var i_704644713 = 0;
      var colontmp__570425817 = 0;
      colontmp__570425817 = subInt(m_704644693, 1);
      var i_570425818 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425818 < colontmp__570425817)) break Label3;
            i_704644713 = i_570425818;
            a_704644691[chckIndx(sub_704644692[chckIndx(i_704644713, 0, (sub_704644692).length - 1)], 0, (a_704644691).length - 1)] = subInt(subInt(m_704644693, 1), i_704644713);
            i_570425818 = addInt(i_570425818, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_704644731) {
  var result_704644732 = [new Int32Array(256)];

    nsuInitSkipTable(result_704644732[0], sub_704644731);

  return result_704644732[0];

}

function nsuFindStrA(a_704644734, s_704644735, sub_704644736, start_704644737, last_704644738) {
    var Temporary1;

  var result_704644739 = 0;

  BeforeRet: {
    if ((last_704644738 < 0)) {
    Temporary1 = (s_704644735).length - 1;
    }
    else {
    Temporary1 = last_704644738;
    }
    
    var last_704644740 = Temporary1;
    var subLast_704644741 = subInt((sub_704644736).length, 1);
    if ((subLast_704644741 == (-1))) {
    result_704644739 = start_704644737;
    break BeforeRet;
    }
    
    result_704644739 = (-1);
    var skip_704644742 = start_704644737;
    Label2: {
        Label3: while (true) {
        if (!(subLast_704644741 <= subInt(last_704644740, skip_704644742))) break Label3;
          var i_704644743 = subLast_704644741;
          Label4: {
              Label5: while (true) {
              if (!(s_704644735[chckIndx(addInt(skip_704644742, i_704644743), 0, (s_704644735).length - 1)] == sub_704644736[chckIndx(i_704644743, 0, (sub_704644736).length - 1)])) break Label5;
                if ((i_704644743 == 0)) {
                result_704644739 = skip_704644742;
                break BeforeRet;
                }
                
                i_704644743 = subInt(i_704644743, 1);
              }
          };
          skip_704644742 = addInt(skip_704644742, a_704644734[chckIndx(s_704644735[chckIndx(addInt(skip_704644742, subLast_704644741), 0, (s_704644735).length - 1)], 0, (a_704644734).length - 1)]);
        }
    };
  };

  return result_704644739;

}

function nsuReplaceStr(s_704644944, sub_704644945, by_704644946) {
  var result_704644947 = [];

    result_704644947 = nimCopy(null, [], NTI33554449);
    var subLen_704644948 = (sub_704644945).length;
    if ((subLen_704644948 == 0)) {
    result_704644947 = nimCopy(null, s_704644944, NTI33554449);
    }
    else {
    if ((subLen_704644948 == 1)) {
    var c_704644949 = sub_704644945[chckIndx(0, 0, (sub_704644945).length - 1)];
    var last_704644950 = (s_704644944).length - 1;
    var i_704644951 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_704644952 = nsuFindChar(s_704644944, c_704644949, chckRange(i_704644951, 0, 2147483647), last_704644950);
          if ((j_704644952 < 0)) {
          break Label1;
          }
          
          result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644951, subInt(j_704644952, 1)));;
          result_704644947.push.apply(result_704644947, by_704644946);;
          i_704644951 = addInt(j_704644952, subLen_704644948);
        }
    };
    result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644951));;
    }
    else {
      var a_704644953 = nsuInitNewSkipTable(sub_704644945);
      var last_704644954 = (s_704644944).length - 1;
      var i_704644955 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_704644956 = nsuFindStrA(a_704644953, s_704644944, sub_704644945, chckRange(i_704644955, 0, 2147483647), last_704644954);
            if ((j_704644956 < 0)) {
            break Label3;
            }
            
            result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644955, subInt(j_704644956, 1)));;
            result_704644947.push.apply(result_704644947, by_704644946);;
            i_704644955 = addInt(j_704644956, subLen_704644948);
          }
      };
      result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644955));;
    }
    }

  return result_704644947;

}

function getCurrentExceptionMsg_33556463() {
  var result_33556464 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556443()) {
    result_33556464 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556469 = null;
            if (lastJSError.message !== undefined) {
        msg_33556469 = lastJSError.message;
      }
      
      if (!((msg_33556469 == null))) {
      result_33556464 = nimCopy(null, cstrToNimstr(msg_33556469), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556464 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556464;

}

function interpretCode() {
    document.getElementById("isbt128out").innerHTML = "";
++excHandler;
    try {
    var code_570425693 = cstrToNimstr(document.getElementById("code").value);
    var dataStructure_570425694 = classifyDataStructure_570425395(code_570425693);
    var html_570425695 = parseDataStructure_570425436(dataStructure_570425694, code_570425693);
    var cleanCode_570425696 = nsuReplaceStr(code_570425693, [60], [38,108,116,59]);
    var name_570425697 = nimCopy(null, dataStructureNames_570425394[chckIndx(dataStructure_570425694, 0, (dataStructureNames_570425394).length - 1)], NTI33554449);
    var contents_570425698 = ([60,104,50,62] || []).concat(name_570425697 || [],[60,47,104,50,62,60,112,62] || [],cleanCode_570425696 || [],[60,47,112,62] || [],html_570425695 || []);
    var toHist_570425699 = toJSStr(([60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62] || []).concat(cleanCode_570425696 || [],[32,38,110,100,97,115,104,59,32] || [],name_570425697 || [],[60,47,115,117,109,109,97,114,121,62] || [],html_570425695 || [],[60,47,100,101,116,97,105,108,115,62] || []));
    document.getElementById("isbt128out").innerHTML = toJSStr(contents_570425698);
    document.getElementById("isbt128history").insertAdjacentHTML("afterbegin", toHist_570425699);
    document.getElementById("code").value = "";
    document.getElementById("code").focus();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var s_570425700 = ([70,101,108,32,118,105,100,32,116,111,108,107,110,105,110,103,58,32] || []).concat(getCurrentExceptionMsg_33556463() || []);
    document.getElementById("isbt128out").innerHTML = toJSStr(s_570425700);
    lastJSError = prevJSError;
    } finally {
    }

  
}
