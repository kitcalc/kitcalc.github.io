/* Generated by the Nim Compiler v2.0.4 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI570425347 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1342177364 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1342177340 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1342177341 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400148 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1325400124 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1325400125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1308622932 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1308622908 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1308622909 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1140850705 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1140850704 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1174405302 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1174405303 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1157628055 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI1157628036 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1157628035 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1157628037 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1157627980 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1157627979 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1157627981 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI771752005 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555178;
var NNI771752005 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI771752005.node = NNI771752005;
var NNI1157627979 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1157627979, name: "bloodGroup", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1157627979, name: "specialMessage", len: 0, sons: null}}};
NTI1157627979.node = NNI1157627979;
var NNI1157627980 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1157627980, name: "Default: Intended Use Not Specified", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1157627980, name: "Directed (Dedicated/Designated) Collection Use Only", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1157627980, name: "For Emergency Use Only", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1157627980, name: "Directed (Dedicated/Designated) Collection/Biohazardous", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1157627980, name: "Directed (Dedicated/Designated) Collection/Eligible for Crossover", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1157627980, name: "Autologous Collection/Eligible for Crossover", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1157627980, name: "For Autologous Use Only", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1157627980, name: "For Autologous Use Only/Biohazardous", len: 0, sons: null}}};
NTI1157627980.node = NNI1157627980;
var NNI1157627981 = {kind: 3, offset: "kind", len: 2, typ: NTI1157627979, name: "kind", sons: [[setConstr(0), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "group", len: 0, typ: NTI33554449, name: "group", sons: null}, 
{kind: 1, offset: "collectionInformation", len: 0, typ: NTI1157627980, name: "collectionInformation", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null}]]};
NTI1157627981.node = NNI1157627981;
var NNI1157628035 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1157628035, name: "rhK", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1157628035, name: "mi", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1157628035, name: "special", len: 0, sons: null}}};
NTI1157628035.node = NNI1157628035;
var NNI1157628036 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1157628036, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1157628036, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1157628036, name: "?", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1157628036, name: "unknown", len: 0, sons: null}}};
NTI1157628036.node = NNI1157628036;
var NNI1157628037 = {kind: 3, offset: "kind", len: 3, typ: NTI1157628035, name: "kind", sons: [[setConstr(0), {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kell", len: 0, typ: NTI1157628036, name: "kell", sons: null}, 
{kind: 1, offset: "rhC", len: 0, typ: NTI1157628036, name: "rhC", sons: null}, 
{kind: 1, offset: "rhsmallc", len: 0, typ: NTI1157628036, name: "rhsmallc", sons: null}, 
{kind: 1, offset: "rhE", len: 0, typ: NTI1157628036, name: "rhE", sons: null}, 
{kind: 1, offset: "rhsmalle", len: 0, typ: NTI1157628036, name: "rhsmalle", sons: null}]}], 
[setConstr(1), {kind: 1, offset: "mipheno", len: 0, typ: NTI1157628036, name: "mipheno", sons: null}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}]]};
NTI1157628037.node = NNI1157628037;
NTI1157628055.base = NTI1157628036;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555178;
var NNI1174405302 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405302, name: "simple", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405302, name: "complex", len: 0, sons: null}}};
NTI1174405302.node = NNI1174405302;
var NNI1174405303 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "division", len: 0, typ: NTI33554449, name: "division", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI1174405302, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 1, offset: "collectionType", len: 0, typ: NTI33554449, name: "collectionType", sons: null}]]}]};
NTI1174405303.node = NNI1174405303;
NTI1140850704.base = NTI1140850705;
var NNI1308622908 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1308622908, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1308622908, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1308622908, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1308622908, name: "ej testad", len: 0, sons: null}}};
NTI1308622908.node = NNI1308622908;
var NNI1308622909 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1308622908, name: "Field1", sons: null}]};
NTI1308622909.node = NNI1308622909;
NTI1308622932.base = NTI1308622909;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI1325400124 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1325400124, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1325400124, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1325400124, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1325400124, name: "ej testad", len: 0, sons: null}}};
NTI1325400124.node = NNI1325400124;
var NNI1325400125 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1325400124, name: "Field1", sons: null}]};
NTI1325400125.node = NNI1325400125;
NTI1325400148.base = NTI1325400125;
var NNI1342177340 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1342177340, name: "+", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1342177340, name: "\xE2\x88\x92", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1342177340, name: "ingen info", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1342177340, name: "ej testad", len: 0, sons: null}}};
NTI1342177340.node = NNI1342177340;
var NNI1342177341 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1342177340, name: "Field1", sons: null}]};
NTI1342177341.node = NNI1342177341;
NTI1342177364.base = NTI1342177341;
var NNI570425347 = {kind: 2, offset: 0, typ: null, name: null, len: 43, sons: {"0": {kind: 1, offset: 0, typ: NTI570425347, name: "donationIdentificationNumber", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425347, name: "bloodGroupsABORhD", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425347, name: "productCode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425347, name: "expirationDate", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425347, name: "expirationDateAndTime", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425347, name: "collectionDate", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI570425347, name: "collectionDateAndTime", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI570425347, name: "productionDate", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI570425347, name: "productionDateAndTime", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI570425347, name: "specialTestingGeneral", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI570425347, name: "specialTestingAntigensRetired", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI570425347, name: "specialTestingAntigensGeneral", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI570425347, name: "specialTestingAntigensFinnish", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI570425347, name: "specialTestingPlatelet", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI570425347, name: "specialTestingHLAAB", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI570425347, name: "specialTestingHLADRB1", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI570425347, name: "containerManufacturerAndCatalogNumber", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI570425347, name: "containerLotNumber", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI570425347, name: "donorIdentificationNumber", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI570425347, name: "staffMemberIdentificationNumber", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI570425347, name: "manufacturerAndCatalogNumber", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI570425347, name: "lotNumber", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI570425347, name: "compoundMessage", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI570425347, name: "patientDateOfBirth", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI570425347, name: "patientIdentificationNumber", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI570425347, name: "expirationMonthAndYear", len: 0, sons: null}, 
"26": {kind: 1, offset: 26, typ: NTI570425347, name: "ttiMarker", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI570425347, name: "productConsignment", len: 0, sons: null}, 
"28": {kind: 1, offset: 28, typ: NTI570425347, name: "dimensions", len: 0, sons: null}, 
"29": {kind: 1, offset: 29, typ: NTI570425347, name: "redCellAntigensWithTestHistory", len: 0, sons: null}, 
"30": {kind: 1, offset: 30, typ: NTI570425347, name: "flexibleDateAndTime", len: 0, sons: null}, 
"31": {kind: 1, offset: 31, typ: NTI570425347, name: "productDivisions", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI570425347, name: "processingFacilityInformationCode", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI570425347, name: "processorProductIdentificationCode", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI570425347, name: "mphoLotNumber", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI570425347, name: "mphoSupplementalIdentificationNumber", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI570425347, name: "globalRegistrationIdentifierForDonorsRetired", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI570425347, name: "singleEuropeanCode", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI570425347, name: "globalRegistrationIdentifierForDonors", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI570425347, name: "chainOfIdentityIdentifier", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI570425347, name: "nonIccba", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI570425347, name: "reservedNationalDonorIdentificationNumber", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI570425347, name: "confidentialUnitExclusion", len: 0, sons: null}}};
NTI570425347.node = NNI570425347;

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33557003) {
        var result = new Array(len_33557003);
    for (var i = 0; i < len_33557003; i++) {result[i] = 0;}
    return result;
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr([65, 78], [80, 90], [49, 57]);
var ConstSet3 = setConstr([97, 122]);

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function isObj(obj_33557398, subclass_33557399) {
  var result_33557400 = false;

  BeforeRet: {
    var x_33557401 = obj_33557398;
    if ((x_33557401 == subclass_33557399)) {
    result_33557400 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557401 == subclass_33557399))) break Label2;
          if ((x_33557401 == null)) {
          result_33557400 = false;
          break BeforeRet;
          }
          
          x_33557401 = x_33557401.base;
        }
    };
    result_33557400 = true;
    break BeforeRet;
  };

  return result_33557400;

}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556443()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet6 = setConstr([50, 57]);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
var ConstSet7 = setConstr(0);

function raiseFieldError2(f_33556854, discVal_33556855) {
    raiseException({message: (f_33556854 || []).concat(discVal_33556855 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556438) {
  var result_33556439 = [];

    if (x_33556438) {
    result_33556439 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556439 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556439;

}

function reprDiscriminant(e_33557614, typ_33557615) {
    var Temporary1;

  var result_33557616 = [];

    switch (typ_33557615.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557614, typ_33557615);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557614 == 0)));
      break;
    default: 
      Temporary1 = HEX24_385875976(e_33557614);
      break;
    }
    result_33557616 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557616;

}
var ConstSet8 = setConstr(0);
var ConstSet9 = setConstr(1);
var ConstSet10 = setConstr(0);
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(0);
var ConstSet13 = setConstr(0);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(1);
var ConstSet16 = setConstr([65, 89]);
var ConstSet17 = setConstr([49, 57]);
var ConstSet18 = setConstr([65, 89]);
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 68]);

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}
    var monthsL_1140850698 = new Int32Array([31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]);
      var months_1140850697 = new Int32Array([31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]);
              var antigens_1308622930 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [86,115,47,86], [65,49], [77], [78], [83], [115], [85], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,105,60,115,117,112,62,97,60,47,115,117,112,62], [68,105,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,111,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,77,86,45,97,107]];
              var phenoOne_1308622931 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1308622932 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1308623085 = [[114,101,116,105,114,101,100], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [], [], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [], [], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [114,101,109,111,118,101,100], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [], [], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [], [], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [73,103,65,32,100,101,102,105,99,105,101,110,116], [40,105,110,103,101,116,41]];
              var antigens_1325400146 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [77], [78], [83], [115], [85], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [73,110,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [68,105,60,115,117,112,62,97,60,47,115,117,112,62], [86,83,47,86], [74,115,60,115,117,112,62,97,60,47,115,117,112,62], [67], [99], [69], [101], [67,77,86,45,97,107]];
              var phenoOne_1325400147 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1325400148 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1325400285 = [[105,110,102,111,114,109,97,116,105,111,110,32,101,108,115,101,119,104,101,114,101], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [80], [80,80,60,115,117,98,62,49,60,47,115,117,98,62,80,60,115,117,112,62,107,60,47,115,117,112,62], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [75,49,52], [75,49,55], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [68,105,60,115,117,112,62,98,60,47,115,117,112,62], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,98,60,47,115,117,112,62], [89,116,60,115,117,112,62,98,60,47,115,117,112,62], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,109,111,118,101,100], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [73], [69,114,60,115,117,112,62,97,60,47,115,117,112,62], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [71,101,52], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [78,97,116,105,111,110,97,108,108,121,32,115,112,101,99,105,102,105,101,100], [72,101,109,111,103,108,111,98,105,110,32,83,32,110,101,103,97,116,105,118,101], [112,97,114,118,111,118,105,114,117,115,32,66,49,57,32,97,110,116,105,98,111,100,121,32,112,114,101,115,101,110,116], [73,103,65,32,100,101,102,105,99,105,101,110,116], [110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,112,114,111,118,105,100,101,100]];
              var antigens_1342177362 = [[75], [107], [67,60,115,117,112,62,119,60,47,115,117,112,62], [77,105,60,115,117,112,62,97,60,47,115,117,112,62], [77], [78], [83], [115], [85], [80,49], [76,117,60,115,117,112,62,97,60,47,115,117,112,62], [75,112,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,97,60,47,115,117,112,62], [76,101,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,60,115,117,112,62,97,60,47,115,117,112,62], [70,121,60,115,117,112,62,98,60,47,115,117,112,62], [74,107,60,115,117,112,62,97,60,47,115,117,112,62], [74,107,60,115,117,112,62,98,60,47,115,117,112,62], [68,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [67,60,115,117,112,62,120,60,47,115,117,112,62], [67,111,60,115,117,112,62,98,60,47,115,117,112,62], [87,69,83,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115], [114,101,115], [67,77,86,45,97,107]];
              var phenoOne_1342177363 = new Uint8Array([3, 3, 3, 1, 1, 1, 0, 0, 0, 2]);
              var phenoTwo_1342177364 = new Uint8Array([3, 1, 0, 3, 1, 0, 3, 1, 0, 2]);
    var antigenNegativ_1342177485 = [[105,110,102,111,114,109,97,116,105,111,110,32,101,108,115,101,119,104,101,114,101], [69,110,60,115,117,112,62,97,60,47,115,117,112,62], [226,128,153,78,226,128,153], [86,60,115,117,112,62,119,60,47,115,117,112,62], [77,117,114], [72,117,116], [72,105,108], [80], [80,80,60,115,117,98,62,49,60,47,115,117,98,62,80,60,115,117,112,62,107,60,47,115,117,112,62], [104,114,60,115,117,112,62,83,60,47,115,117,112,62], [104,114,60,115,117,112,62,66,60,47,115,117,112,62], [102], [67,101], [71], [72,114,60,115,117,98,62,48,60,47,115,117,98,62], [67,69], [99,69], [67,60,115,117,112,62,120,60,47,115,117,112,62], [69,60,115,117,112,62,119,60,47,115,117,112,62], [68,60,115,117,112,62,119,60,47,115,117,112,62], [104,114,60,115,117,112,62,72,60,47,115,117,112,62], [71,111,60,115,117,112,62,97,60,47,115,117,112,62], [82,104,51,50], [82,104,51,51], [84,97,114], [75,112,60,115,117,112,62,98,60,47,115,117,112,62], [75,112,60,115,117,112,62,99,60,47,115,117,112,62], [74,115,60,115,117,112,62,98,60,47,115,117,112,62], [85,108,60,115,117,112,62,97,60,47,115,117,112,62], [75,49,49], [75,49,50], [75,49,51], [75,49,52], [75,49,55], [75,49,56], [75,49,57], [75,50,50], [75,50,51], [75,50,52], [76,117,60,115,117,112,62,98,60,47,115,117,112,62], [76,117,51], [76,117,52], [76,117,53], [76,117,54], [76,117,55], [76,117,56], [76,117,49,49], [76,117,49,50], [76,117,49,51], [76,117,50,48], [65,117,60,115,117,112,62,97,60,47,115,117,112,62], [65,117,60,115,117,112,62,98,60,47,115,117,112,62], [70,121,52], [70,121,53], [70,121,54], [114,101,109,111,118,101,100], [83,100,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,98,60,47,115,117,112,62], [89,116,60,115,117,112,62,98,60,47,115,117,112,62], [88,103,60,115,117,112,62,97,60,47,115,117,112,62], [83,99,49], [83,99,50], [83,99,51], [74,111,60,115,117,112,62,97,60,47,115,117,112,62], [68,111,60,115,117,112,62,98,60,47,115,117,112,62], [72,121], [71,121,60,115,117,112,62,97,60,47,115,117,112,62], [67,111,51], [76,87,60,115,117,112,62,97,60,47,115,117,112,62], [76,87,60,115,117,112,62,98,60,47,115,117,112,62], [75,120], [71,101,50], [71,101,51], [87,98], [76,115,60,115,117,112,62,97,60,47,115,117,112,62], [65,110,60,115,117,112,62,97,60,47,115,117,112,62], [68,104,60,115,117,112,62,97,60,47,115,117,112,62], [67,114,60,115,117,112,62,97,60,47,115,117,112,62], [73,70,67], [75,110,60,115,117,112,62,97,60,47,115,117,112,62], [73,110,60,115,117,112,62,98,60,47,115,117,112,62], [67,115,60,115,117,112,62,97,60,47,115,117,112,62], [73], [69,114,60,115,117,112,62,97,60,47,115,117,112,62], [86,101,108], [76,97,110], [65,116,60,115,117,112,62,97,60,47,115,117,112,62], [74,114,60,115,117,112,62,97,60,47,115,117,112,62], [79,107,60,115,117,112,62,97,60,47,115,117,112,62], [87,114,60,115,117,112,62,97,60,47,115,117,112,62], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [114,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,117,115,101], [73,103,65,32,100,101,102,105,99,105,101,110,116], [110,111,32,105,110,102,111,114,109,97,116,105,111,110,32,112,114,111,118,105,100,101,100]];

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}
    var dataStructureNames_570425394 = [[84,97,112,112,110,105,110,103,115,110,117,109,109,101,114,32,40,68,111,110,97,116,105,111,110,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114,41], [66,108,111,100,103,114,117,112,112,32,40,65,66,79,32,111,99,104,32,82,104,68,41], [80,114,111,100,117,107,116,107,111,100], [85,116,103,195,165,110,103,115,100,97,116,117,109], [85,116,103,195,165,110,103,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [84,97,112,112,110,105,110,103,115,100,97,116,117,109], [84,97,112,112,110,105,110,103,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [80,114,111,100,117,107,116,105,111,110,115,100,97,116,117,109], [80,114,111,100,117,107,116,105,111,110,115,100,97,116,117,109,32,111,99,104,32,116,105,100], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,71,101,110,101,114,97,108], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,226,128,148,71,101,110,101,114,97,108], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,82,101,100,32,66,108,111,111,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,226,128,148,70,105,110,110,105,115,104], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,80,108,97,116,101,108,101,116,32,72,76,65,32,97,110,100,32,80,108,97,116,101,108,101,116,32,83,112,101,99,105,102,105,99,32,65,110,116,105,103,101,110,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,72,76,65,45,65,32,97,110,100,32,45,66,32,65,108,108,101,108,101,115], [83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,58,32,72,76,65,45,68,82,66,49,32,65,108,108,101,108,101,115], [67,111,110,116,97,105,110,101,114,32,77,97,110,117,102,97,99,116,117,114,101,114,32,97,110,100,32,67,97,116,97,108,111,103,32,78,117,109,98,101,114], [67,111,110,116,97,105,110,101,114,32,76,111,116,32,78,117,109,98,101,114], [68,111,110,111,114,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [83,116,97,102,102,32,77,101,109,98,101,114,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [77,97,110,117,102,97,99,116,117,114,101,114,32,97,110,100,32,67,97,116,97,108,111,103,32,78,117,109,98,101,114,58,32,73,116,101,109,115,32,79,116,104,101,114,32,84,104,97,110,32,67,111,110,116,97,105,110,101,114,115], [76,111,116,32,78,117,109,98,101,114,58,32,73,116,101,109,115,32,79,116,104,101,114,32,84,104,97,110,32,67,111,110,116,97,105,110,101,114,115], [67,111,109,112,111,117,110,100,32,77,101,115,115,97,103,101], [80,97,116,105,101,110,116,32,68,97,116,101,32,111,102,32,66,105,114,116,104], [80,97,116,105,101,110,116,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [69,120,112,105,114,97,116,105,111,110,32,77,111,110,116,104,32,97,110,100,32,89,101,97,114], [84,114,97,110,115,102,117,115,105,111,110,32,84,114,97,110,115,109,105,116,116,101,100,32,73,110,102,101,99,116,105,111,110,32,77,97,114,107,101,114], [80,114,111,100,117,99,116,32,67,111,110,115,105,103,110,109,101,110,116], [68,105,109,101,110,115,105,111,110,115], [82,101,100,32,67,101,108,108,32,65,110,116,105,103,101,110,115,32,119,105,116,104,32,84,101,115,116,32,72,105,115,116,111,114,121], [70,108,101,120,105,98,108,101,32,68,97,116,101,32,97,110,100,32,84,105,109,101], [80,114,111,100,117,99,116,32,68,105,118,105,115,105,111,110,115], [80,114,111,99,101,115,115,105,110,103,32,70,97,99,105,108,105,116,121,32,73,110,102,111,114,109,97,116,105,111,110,32,67,111,100,101], [80,114,111,99,101,115,115,111,114,32,80,114,111,100,117,99,116,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,67,111,100,101], [77,80,72,79,32,76,111,116,32,78,117,109,98,101,114], [77,80,72,79,32,83,117,112,112,108,101,109,101,110,116,97,108,32,73,100,101,110,116,105,102,105,99,97,116,105,111,110,32,78,117,109,98,101,114], [71,108,111,98,97,108,32,82,101,103,105,115,116,114,97,116,105,111,110,32,73,100,101,110,116,105,102,105,101,114,32,102,111,114,32,68,111,110,111,114,115], [83,105,110,103,108,101,32,69,117,114,111,112,101,97,110,32,67,111,100,101], [71,108,111,98,97,108,32,82,101,103,105,115,116,114,97,116,105,111,110,32,73,100,101,110,116,105,102,105,101,114,32,102,111,114,32,68,111,110,111,114,115], [67,104,97,105,110,32,111,102,32,73,100,101,110,116,105,116,121,32,73,100,101,110,116,105,102,105,101,114], [68,97,116,97,32,83,116,114,117,99,116,117,114,101,115,32,78,111,116,32,68,101,102,105,110,101,100,32,98,121,32,73,67,67,66,66,65], makeNimstrLit("Reserved Data Identifiers for a Nationally Specified Donor Identification Number"), [67,111,110,102,105,100,101,110,116,105,97,108,32,85,110,105,116,32,69,120,99,108,117,115,105,111,110,32,83,116,97,116,117,115,32,68,97,116,97,32,83,116,114,117,99,116,117,114,101]];

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570425753 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570425753 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570425753;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570425753 = addInt(i_570425753, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function startsWith_704644521(s_704644522, prefix_704644523) {
  var result_704644524 = false;

    result_704644524 = ((0 < (s_704644522).length) && (s_704644522[chckIndx(0, 0, (s_704644522).length - 1)] == prefix_704644523));

  return result_704644524;

}

function nsuStartsWith(s_704644526, prefix_704644527) {
  var result_704644528 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_704644533 = (prefix_704644527).length;
    var sLenHEX60gensym146_704644534 = (s_704644526).length;
    var iHEX60gensym146_704644535 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_704644533 <= iHEX60gensym146_704644535)) {
          result_704644528 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_704644534 <= iHEX60gensym146_704644535) || !((s_704644526[chckIndx(iHEX60gensym146_704644535, 0, (s_704644526).length - 1)] == prefix_704644527[chckIndx(iHEX60gensym146_704644535, 0, (prefix_704644527).length - 1)])))) {
          result_704644528 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_704644535 = addInt(iHEX60gensym146_704644535, 1);
        }
    };
  };

  return result_704644528;

}

function classifyDataStructure_570425395(code_570425396) {
    var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_570425397 = 0;

      if (!startsWith_704644521(code_570425396, 61)) Temporary2 = false; else {        Temporary2 = (ConstSet2[code_570425396[chckIndx(1, 0, (code_570425396).length - 1)]] != undefined);      }    if (Temporary2) {
    Temporary1 = 0;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,37])) {
    Temporary1 = 1;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,60])) {
    Temporary1 = 2;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,62])) {
    Temporary1 = 3;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,62])) {
    Temporary1 = 4;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,42])) {
    Temporary1 = 5;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,42])) {
    Temporary1 = 6;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,125])) {
    Temporary1 = 7;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,125])) {
    Temporary1 = 8;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,40])) {
    Temporary1 = 9;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,123])) {
    Temporary1 = 10;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,92])) {
    Temporary1 = 11;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,92])) {
    Temporary1 = 12;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,123])) {
    Temporary1 = 13;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,91])) {
    Temporary1 = 14;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,34])) {
    Temporary1 = 15;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,41])) {
    Temporary1 = 16;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,41])) {
    Temporary1 = 17;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,59])) {
    Temporary1 = 18;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,39])) {
    Temporary1 = 19;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,45])) {
    Temporary1 = 20;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,45])) {
    Temporary1 = 21;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,43])) {
    Temporary1 = 22;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,35])) {
    Temporary1 = 23;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,35])) {
    Temporary1 = 24;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,93])) {
    Temporary1 = 25;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,34])) {
    Temporary1 = 26;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,36])) {
    Temporary1 = 27;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,36])) {
    Temporary1 = 28;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,37])) {
    Temporary1 = 29;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,32])) {
    Temporary1 = 30;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,44])) {
    Temporary1 = 31;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,43])) {
    Temporary1 = 32;
    }
    else {
    if (nsuStartsWith(code_570425396, [61,47])) {
    Temporary1 = 33;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,49])) {
    Temporary1 = 34;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,50])) {
    Temporary1 = 35;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,51])) {
    Temporary1 = 36;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,44,52])) {
    Temporary1 = 37;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,41,58])) {
    Temporary1 = 38;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,47])) {
    Temporary1 = 39;
    }
    else {
      if (!startsWith_704644521(code_570425396, 38)) Temporary3 = false; else {        Temporary3 = (ConstSet3[code_570425396[chckIndx(1, 0, (code_570425396).length - 1)]] != undefined);      }    if (Temporary3) {
    Temporary1 = 40;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,59])) {
    Temporary1 = 41;
    }
    else {
    if (nsuStartsWith(code_570425396, [38,33])) {
    Temporary1 = 42;
    }
    else {
      raiseException({message: ([111,107,195,164,110,116,32,112,114,101,102,105,120,58,32] || []).concat(code_570425396 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    }}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
    result_570425397 = Temporary1;

  return result_570425397;

}

function interpretFlagSwe_1124073578(din_1124073579) {
    var Temporary1;

  var result_1124073580 = [];

    switch (toJSStr(din_1124073579.flagCharacters)) {
    case "01":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "02":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "03":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "04":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "31":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "32":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "33":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "34":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,116,97,112,112,110,105,110,103,115,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "41":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "42":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "43":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "44":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,116,97,112,112,110,105,110,103];
      break;
    case "51":
      Temporary1 = [80,195,165,115,101,32,49,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "52":
      Temporary1 = [80,195,165,115,101,32,50,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "53":
      Temporary1 = [80,195,165,115,101,32,51,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "54":
      Temporary1 = [80,195,165,115,101,32,52,44,32,112,195,165,32,106,111,117,114,110,97,108,101,116,105,107,101,116,116,101,110,32,118,105,100,32,111,109,107,108,105,115,116,114,105,110,103];
      break;
    case "05":
      Temporary1 = [65,110,110,97,110,32,40,117,112,112,114,101,112,97,100,41,32,34,111,110,32,100,101,109,97,110,100,34,45,116,114,121,99,107,116,32,100,101,108,32,97,118,32,101,116,105,107,101,116,116,101,110];
      break;
    case "06":
      Temporary1 = [80,105,108,111,116,114,195,182,114];
      break;
    case "07":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,115,109,105,116,116,101,115,116,101,114];
      break;
    case "08":
      Temporary1 = [71,105,118,97,114,100,111,107,117,109,101,110,116,97,116,105,111,110,32,40,98,108,97,110,107,101,116,116,32,102,195,182,114,32,104,195,164,108,115,111,100,101,107,108,97,114,97,116,105,111,110,41];
      break;
    case "09":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,78,65,84];
      break;
    case "10":
      Temporary1 = [80,114,111,118,32,102,195,182,114,32,117,110,100,101,114,115,195,182,107,110,105,110,103,32,97,118,32,98,97,107,116,101,114,105,101,108,108,32,118,195,164,120,116];
      break;
    case "20":
      Temporary1 = [80,97,99,107,115,101,100,101,108,32,40,118,105,100,32,116,114,97,110,115,112,111,114,116,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,116,105,108,108,32,97,110,110,97,110,32,98,108,111,100,99,101,110,116,114,97,108,41];
      break;
    case "30":
      Temporary1 = [70,195,182,108,106,101,115,101,100,101,108,32,116,105,108,108,32,98,108,111,100,112,195,165,115,101,110];
      break;
    case "40":
      Temporary1 = [65,110,118,195,164,110,100,101,115,32,118,105,100,32,105,110,107,195,182,112,32,97,118,32,98,108,111,100,101,110,104,101,116,101,114,32,109,195,164,114,107,116,97,32,109,101,100,32,110,117,109,109,101,114,32,48,48];
      break;
    case "50":
      Temporary1 = [75,118,105,116,116,101,110,115,44,32,97,110,118,195,164,110,100,115,32,118,105,100,32,111,98,101,109,97,110,110,97,100,32,100,101,112,195,165];
      break;
    default: 
      Temporary1 = [69,106,32,100,101,102,105,110,105,101,114,97,100,32,105,32,72,97,110,100,98,111,107,32,102,195,182,114,32,98,108,111,100,118,101,114,107,115,97,109,104,101,116];
      break;
    }
    result_1124073580 = nimCopy(null, Temporary1, NTI33554449);

  return result_1124073580;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_738197829() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_738197867(s_738197868, b_738197869, b_738197869_Idx) {
      var Temporary1;
          var Temporary4;

  var result_738197870 = 0;

    var sign_738197871 = (-1n);
    var i_738197872 = 0;
    if ((i_738197872 < (s_738197868).length)) {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 43)) {
    i_738197872 += 1;
    }
    else {
    if ((s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 45)) {
    i_738197872 += 1;
    sign_738197871 = 1n;
    }
    }
    }
    
      if (!(i_738197872 < (s_738197868).length)) Temporary1 = false; else {        Temporary1 = (ConstSet4[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);      }    if (Temporary1) {
    b_738197869[b_738197869_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_738197872 < (s_738197868).length)) Temporary4 = false; else {            Temporary4 = (ConstSet5[s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_738197906 = (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_738197906)) / 10n <= b_738197869[b_738197869_Idx])) {
          b_738197869[b_738197869_Idx] = ((b_738197869[b_738197869_Idx] * 10n) - BigInt(c_738197906));
          }
          else {
          integerOutOfRangeError_738197829();
          }
          
          i_738197872 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_738197872 < (s_738197868).length) && (s_738197868[chckIndx(i_738197872, 0, (s_738197868).length - 1)] == 95))) break Label6;
                i_738197872 += 1;
              }
          };
        }
    };
    if (((sign_738197871 == (-1n)) && (b_738197869[b_738197869_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_738197829();
    }
    else {
      b_738197869[b_738197869_Idx] = (b_738197869[b_738197869_Idx] * sign_738197871);
      result_738197870 = i_738197872;
    }
    
    }
    

  return result_738197870;

}

function npuParseBiggestInt(s_738197929, number_738197930, number_738197930_Idx) {
  var result_738197931 = 0;

    var res_738197932 = [0n];
    result_738197931 = rawParseInt_738197867(s_738197929, res_738197932, 0);
    if (!((result_738197931 == 0))) {
    number_738197930[number_738197930_Idx] = res_738197932[0];
    }
    

  return result_738197931;

}

function npuParseInt(s_738197934, number_738197935, number_738197935_Idx) {
  var result_738197936 = 0;

    var res_738197937 = [0n];
    result_738197936 = npuParseBiggestInt(s_738197934, res_738197937, 0);
    if (((res_738197937[0] < (-2147483648n)) || (2147483647n < res_738197937[0]))) {
    integerOutOfRangeError_738197829();
    }
    
    if (!((result_738197936 == 0))) {
    number_738197935[number_738197935_Idx] = chckRange(Number(res_738197937[0]), (-2147483648), 2147483647);
    }
    

  return result_738197936;

}

function parseInt_738198447(s_738198448, number_738198449, number_738198449_Idx, start_738198450) {
  var result_738198451 = 0;

    result_738198451 = npuParseInt((s_738198448.slice(start_738198450, (s_738198448).length - 1 + 1)), number_738198449, number_738198449_Idx);

  return result_738198451;

}

function nsuParseInt(s_704643929) {
  var result_704643930 = [0];

    result_704643930[0] = 0;
    var L_704643931 = parseInt_738198447(s_704643929, result_704643930, 0, 0);
    if ((!((L_704643931 == (s_704643929).length)) || (L_704643931 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_704643929 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643930[0];

}

function isNimException_33556443() {
    return lastJSError && lastJSError.m_type;

  
}

function interpretFlag_1124073581(din_1124073582) {
  var result_1124073583 = [];

    switch (toJSStr(din_1124073582.flagCharacters)) {
    case "00":
      result_1124073583 = nimCopy(null, [70,108,97,103,32,110,111,116,32,117,115,101,100,59,32,110,117,108,108,32,118,97,108,117,101], NTI33554449);
      break;
    case "01":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,49,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "02":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,50,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "03":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,51,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "04":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,52,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "05":
      result_1124073583 = nimCopy(null, [83,101,99,111,110,100,32,40,111,114,32,114,101,112,101,97,116,101,100,41,32,226,128,156,100,101,109,97,110,100,45,112,114,105,110,116,101,100,226,128,157,32,108,97,98,101,108], NTI33554449);
      break;
    case "06":
      result_1124073583 = nimCopy(null, [80,105,108,111,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "07":
      result_1124073583 = nimCopy(null, [84,101,115,116,32,116,117,98,101,32,108,97,98,101,108], NTI33554449);
      break;
    case "08":
      result_1124073583 = nimCopy(null, [68,111,110,111,114,32,114,101,99,111,114,100,32,108,97,98,101,108], NTI33554449);
      break;
    case "09":
      result_1124073583 = nimCopy(null, [83,97,109,112,108,101,32,116,117,98,101,32,102,111,114,32,78,65,84,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "10":
      result_1124073583 = nimCopy(null, [83,97,109,112,108,101,115,32,102,111,114,32,98,97,99,116,101,114,105,97,108,32,116,101,115,116,105,110,103], NTI33554449);
      break;
    case "11":
      result_1124073583 = nimCopy(null, [77,97,116,99,104,32,119,105,116,104,32,85,110,105,116,32,108,97,98,101,108], NTI33554449);
      break;
    case "12":
      result_1124073583 = nimCopy(null, [65,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108], NTI33554449);
      break;
    case "13":
      result_1124073583 = nimCopy(null, [65,116,116,97,99,104,101,100,32,108,97,98,101,108,32,40,105,110,116,101,110,100,101,100,32,116,111,32,98,101,32,117,115,101,100,32,119,105,116,104,32,97,102,102,105,120,101,100,32,112,97,114,116,105,97,108,32,108,97,98,101,108,41], NTI33554449);
      break;
    case "14":
      result_1124073583 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      break;
    case "15":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,53,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "16":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,54,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "17":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,55,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "18":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,56,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    case "19":
      result_1124073583 = nimCopy(null, [67,111,110,116,97,105,110,101,114,32,57,32,111,102,32,97,32,115,101,116], NTI33554449);
      break;
    default: 
++excHandler;
      try {
      var numeric_1124073584 = nsuParseInt(din_1124073582.flagCharacters);
      if (      numeric_1124073584 >= 20 && numeric_1124073584 <= 59      ){        result_1124073583 = nimCopy(null, makeNimstrLit("Reserved for assignment and use by each local facility. Therefore the meaning and interpretation of flag values 20\xE2\x80\x9359 may differ with each FIN and should not be interpreted at any other site"), NTI33554449);
        }
      else if (      numeric_1124073584 >= 60 && numeric_1124073584 <= 96      ){        result_1124073583 = nimCopy(null, makeNimstrLit("ISO/IEC 7064 modulo 37-2 check character on the preceding thirteen (13) data characters, \xCE\xB1ppppyynnnnnn including the FIN, year and the unit sequence number \xE2\x80\x94 value is assigned as 60 plus the modulo 37-2 checksum"), NTI33554449);
        }
      else{
        result_1124073583 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      result_1124073583 = nimCopy(null, [82,101,115,101,114,118,101,100,32,102,111,114,32,102,117,116,117,114,101,32,97,115,115,105,103,110,109,101,110,116], NTI33554449);
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    }

  return result_1124073583;

}

function toHtml_1124073585(din_1124073586) {
  var result_1124073587 = [];

    var head_1124073619 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1124073634 = (makeNimstrLit("<tbody><tr><td>Blodcentralskod (Facility Identification Number)</td><td>") || []).concat(din_1124073586.facilityIdentificationNumber || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],din_1124073586.year || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,76,195,182,112,110,117,109,109,101,114,60,47,116,100,62,60,116,100,62] || [],din_1124073586.sequence || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,78,117,109,109,101,114,109,97,114,107,195,182,114,60,47,116,100,62,60,116,100,62] || [],din_1124073586.flagCharacters || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Svensk standard</td><td>") || [],interpretFlagSwe_1124073578(din_1124073586) || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,73,83,66,84,32,49,50,56,60,47,116,100,62,60,116,100,62] || [],interpretFlag_1124073581(din_1124073586) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1124073587.push.apply(result_1124073587, ([60,116,97,98,108,101,62] || []).concat(head_1124073619 || [],body_1124073634 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1124073587;

}

function verifyDonationIdentificationNumber_1124073482(din_1124073483) {
    if (!(((din_1124073483).length == 16))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((din_1124073483).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570425761 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425761 < L_704644360)) break Label3;
            i_704644365 = i_570425761;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570425761 = addInt(i_570425761, 1);
          }
      };
    };

  return result_704644356;

}

function HEX2EHEX2E_1040187440(a_1040187443, b_1040187444) {
  var result_1040187445 = ({a: 0, b: 0});

    result_1040187445 = nimCopy(result_1040187445, {a: a_1040187443, b: b_1040187444}, NTI771752005);

  return result_1040187445;

}

function parseDonationIdentificationNumber_1124073485(code_1124073486) {
  var result_1124073487 = ({dataIdentifier: [], facilityIdentificationNumber: [], year: [], sequence: [], flagCharacters: []});

    verifyDonationIdentificationNumber_1124073482(code_1124073486);
    result_1124073487.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1124073486, HEX2EHEX2E_1040187440(0, 0)), NTI33554449);
    result_1124073487.facilityIdentificationNumber = nimCopy(null, HEX5BHEX5D_704644351(code_1124073486, HEX2EHEX2E_1040187440(1, 5)), NTI33554449);
    result_1124073487.year = nimCopy(null, HEX5BHEX5D_704644351(code_1124073486, HEX2EHEX2E_1040187440(6, 7)), NTI33554449);
    result_1124073487.sequence = nimCopy(null, HEX5BHEX5D_704644351(code_1124073486, HEX2EHEX2E_1040187440(8, 13)), NTI33554449);
    result_1124073487.flagCharacters = nimCopy(null, HEX5BHEX5D_704644351(code_1124073486, HEX2EHEX2E_1040187440(14, 15)), NTI33554449);

  return result_1124073487;

}

function interpretCollectionInformation_1157628014(bg_1157628015) {
  var result_1157628016 = 0;

++excHandler;
    try {
    var numeric_1157628017 = nsuParseInt(bg_1157628015.aboRhD);
    if (    numeric_1157628017 == 95 || 
    numeric_1157628017 == 51 || 
    numeric_1157628017 == 6 || 
    numeric_1157628017 == 62 || 
    numeric_1157628017 == 17 || 
    numeric_1157628017 == 73 || 
    numeric_1157628017 == 28 || 
    numeric_1157628017 == 84 || 
    numeric_1157628017 == 55 || 
    numeric_1157628017 == 66 || 
    numeric_1157628017 == 77 || 
    numeric_1157628017 == 88    ){      result_1157628016 = 0;
      }
    else if (    numeric_1157628017 == 91 || 
    numeric_1157628017 == 47 || 
    numeric_1157628017 == 2 || 
    numeric_1157628017 == 58 || 
    numeric_1157628017 == 13 || 
    numeric_1157628017 == 69 || 
    numeric_1157628017 == 24 || 
    numeric_1157628017 == 80    ){      result_1157628016 = 1;
      }
    else if (    numeric_1157628017 == 92 || 
    numeric_1157628017 == 48 || 
    numeric_1157628017 == 3 || 
    numeric_1157628017 == 59 || 
    numeric_1157628017 == 14 || 
    numeric_1157628017 == 70 || 
    numeric_1157628017 == 25 || 
    numeric_1157628017 == 81    ){      result_1157628016 = 2;
      }
    else if (    numeric_1157628017 == 93 || 
    numeric_1157628017 == 49 || 
    numeric_1157628017 == 4 || 
    numeric_1157628017 == 60 || 
    numeric_1157628017 == 15 || 
    numeric_1157628017 == 71 || 
    numeric_1157628017 == 26 || 
    numeric_1157628017 == 82    ){      result_1157628016 = 3;
      }
    else if (    numeric_1157628017 == 94 || 
    numeric_1157628017 == 50 || 
    numeric_1157628017 == 5 || 
    numeric_1157628017 == 61 || 
    numeric_1157628017 == 16 || 
    numeric_1157628017 == 72 || 
    numeric_1157628017 == 27 || 
    numeric_1157628017 == 83    ){      result_1157628016 = 4;
      }
    else if (    numeric_1157628017 == 96 || 
    numeric_1157628017 == 52 || 
    numeric_1157628017 == 7 || 
    numeric_1157628017 == 63 || 
    numeric_1157628017 == 18 || 
    numeric_1157628017 == 74 || 
    numeric_1157628017 == 29 || 
    numeric_1157628017 == 85    ){      result_1157628016 = 5;
      }
    else if (    numeric_1157628017 == 97 || 
    numeric_1157628017 == 53 || 
    numeric_1157628017 == 8 || 
    numeric_1157628017 == 64 || 
    numeric_1157628017 == 19 || 
    numeric_1157628017 == 75 || 
    numeric_1157628017 == 30 || 
    numeric_1157628017 == 86    ){      result_1157628016 = 6;
      }
    else if (    numeric_1157628017 == 98 || 
    numeric_1157628017 == 54 || 
    numeric_1157628017 == 9 || 
    numeric_1157628017 == 65 || 
    numeric_1157628017 == 20 || 
    numeric_1157628017 == 76 || 
    numeric_1157628017 == 31 || 
    numeric_1157628017 == 87    ){      result_1157628016 = 7;
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var two_1157628018 = bg_1157628015.aboRhD[chckIndx(1, 0, (bg_1157628015.aboRhD).length - 1)];
    switch (two_1157628018) {
    case 48:
    case 54:
      result_1157628016 = 0;
      break;
    case 50:
      result_1157628016 = 1;
      break;
    case 51:
      result_1157628016 = 2;
      break;
    case 52:
      result_1157628016 = 3;
      break;
    case 53:
      result_1157628016 = 4;
      break;
    case 55:
      result_1157628016 = 5;
      break;
    case 56:
      result_1157628016 = 6;
      break;
    case 57:
      result_1157628016 = 7;
      break;
    default: 
      break;
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1157628016;

}

function interpretABORhD_1157628035(bg_1157628036) {
  var result_1157628037 = ({kind: 0, group: [], collectionInformation: 0, message: []});

  BeforeRet: {
    var group_1157628038 = [];
    var collect_1157628039 = 0;
++excHandler;
    try {
    var numeric_1157628040 = nsuParseInt(bg_1157628036.aboRhD);
    if (    numeric_1157628040 >= 91 && numeric_1157628040 <= 98    ){      group_1157628038 = nimCopy(null, [79,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1157628040 >= 47 && numeric_1157628040 <= 54    ){      group_1157628038 = nimCopy(null, [79,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1157628040 >= 2 && numeric_1157628040 <= 9    ){      group_1157628038 = nimCopy(null, [65,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1157628040 >= 58 && numeric_1157628040 <= 65    ){      group_1157628038 = nimCopy(null, [65,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1157628040 >= 13 && numeric_1157628040 <= 20    ){      group_1157628038 = nimCopy(null, [66,32,82,104,68,32,110,101,103], NTI33554449);
      }
    else if (    numeric_1157628040 >= 69 && numeric_1157628040 <= 76    ){      group_1157628038 = nimCopy(null, [66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1157628040 >= 24 && numeric_1157628040 <= 31    ){      group_1157628038 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1157628040 >= 80 && numeric_1157628040 <= 87    ){      group_1157628038 = nimCopy(null, [65,66,32,82,104,68,32,112,111,115], NTI33554449);
      }
    else if (    numeric_1157628040 == 55    ){      group_1157628038 = nimCopy(null, [79], NTI33554449);
      }
    else if (    numeric_1157628040 == 66    ){      group_1157628038 = nimCopy(null, [65], NTI33554449);
      }
    else if (    numeric_1157628040 == 77    ){      group_1157628038 = nimCopy(null, [66], NTI33554449);
      }
    else if (    numeric_1157628040 == 88    ){      group_1157628038 = nimCopy(null, [65,66], NTI33554449);
      }
    else{
      }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
    var one_1157628041 = bg_1157628036.aboRhD[chckIndx(0, 0, (bg_1157628036.aboRhD).length - 1)];
    var two_1157628042 = bg_1157628036.aboRhD[chckIndx(1, 0, (bg_1157628036.aboRhD).length - 1)];
    if ((ConstSet6[two_1157628042] != undefined)) {
    switch (one_1157628041) {
    case 80:
      group_1157628038 = nimCopy(null, [79], NTI33554449);
      break;
    case 65:
      group_1157628038 = nimCopy(null, [65], NTI33554449);
      break;
    case 66:
      group_1157628038 = nimCopy(null, [66], NTI33554449);
      break;
    case 67:
      group_1157628038 = nimCopy(null, [65,66], NTI33554449);
      break;
    case 68:
      group_1157628038 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 69:
      group_1157628038 = nimCopy(null, [112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 71:
      group_1157628038 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 72:
      group_1157628038 = nimCopy(null, [66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 73:
      group_1157628038 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 74:
      group_1157628038 = nimCopy(null, [79,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 75:
      group_1157628038 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 76:
      group_1157628038 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 77:
      group_1157628038 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 78:
      group_1157628038 = nimCopy(null, [65,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 79:
      group_1157628038 = nimCopy(null, [66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 81:
      group_1157628038 = nimCopy(null, [65,66,32,112,97,114,97,45,66,111,109,98,97,121,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    default: 
      break;
    }
    }
    else {
    if ((two_1157628042 == 48)) {
    switch (one_1157628041) {
    case 65:
      group_1157628038 = nimCopy(null, [71,114,117,112,112,32,65,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 66:
      group_1157628038 = nimCopy(null, [71,114,117,112,112,32,66,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 67:
      group_1157628038 = nimCopy(null, [71,114,117,112,112,32,65,66,44,32,112,111,111,108,101,100,32,82,104,68,32,91,80,111,111,108,101,100,32,80,114,111,100,117,99,116,115,93], NTI33554449);
      break;
    case 68:
      group_1157628038 = nimCopy(null, [71,114,117,112,112,32,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 69:
      group_1157628038 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,112,111,115], NTI33554449);
      break;
    case 70:
      group_1157628038 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,82,104,68,32,110,101,103], NTI33554449);
      break;
    case 71:
      group_1157628038 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,44,32,112,111,111,108,101,100,32,82,104,68], NTI33554449);
      break;
    case 72:
      group_1157628038 = nimCopy(null, [80,111,111,108,101,100,32,65,66,79,32,40,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100,41], NTI33554449);
      break;
    case 73:
      group_1157628038 = nimCopy(null, [65,49], NTI33554449);
      break;
    case 74:
      group_1157628038 = nimCopy(null, [65,50], NTI33554449);
      break;
    case 75:
      group_1157628038 = nimCopy(null, [65,60,115,117,98,62,49,60,47,115,117,98,62,66], NTI33554449);
      break;
    case 76:
      group_1157628038 = nimCopy(null, [65,60,115,117,98,62,50,60,47,115,117,98,62,66], NTI33554449);
      break;
    default: 
      break;
    }
    }
    }
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    if ((0 < (group_1157628038).length)) {
    collect_1157628039 = interpretCollectionInformation_1157628014(bg_1157628036);
    result_1157628037 = nimCopy(result_1157628037, {kind: 0, group: nimCopy(null, group_1157628038, NTI33554449), collectionInformation: collect_1157628039, message: []}, NTI1157627981);
    break BeforeRet;
    }
    else {
      switch (toJSStr(bg_1157628036.aboRhD)) {
      case "00":
        group_1157628038 = nimCopy(null, [78,111,32,65,66,79,32,111,114,32,82,104,32,105,110,102,111,114,109,97,116,105,111,110,32,105,115,32,97,118,97,105,108,97,98,108,101], NTI33554449);
        break;
      case "Ma":
        group_1157628038 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110], NTI33554449);
        break;
      case "Mb":
        group_1157628038 = nimCopy(null, [66,105,111,104,97,122,97,114,100,111,117,115], NTI33554449);
        break;
      case "Md":
        group_1157628038 = nimCopy(null, [68,105,115,99,97,114,100,32,40,116,111,32,98,101,32,100,101,115,116,114,111,121,101,100,41], NTI33554449);
        break;
      case "Mf":
        group_1157628038 = nimCopy(null, [70,111,114,32,102,114,97,99,116,105,111,110,97,116,105,111,110,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mq":
        group_1157628038 = nimCopy(null, [81,117,97,114,97,110,116,105,110,101,47,104,111,108,100,32,102,111,114,32,102,117,114,116,104,101,114,32,116,101,115,116,105,110,103,32,111,114,32,112,114,111,99,101,115,115,105,110,103], NTI33554449);
        break;
      case "Mr":
        group_1157628038 = nimCopy(null, [70,111,114,32,114,101,115,101,97,114,99,104,32,117,115,101,32,111,110,108,121], NTI33554449);
        break;
      case "Mx":
        group_1157628038 = nimCopy(null, [78,111,116,32,102,111,114,32,116,114,97,110,115,102,117,115,105,111,110,32,98,97,115,101,100,32,111,110,32,116,101,115,116,32,114,101,115,117,108,116,115], NTI33554449);
        break;
      case "T1":
        group_1157628038 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,112,111,115,105,116,105,118,101], NTI33554449);
        break;
      case "T2":
        group_1157628038 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,101,103,97,116,105,118,101], NTI33554449);
        break;
      case "T3":
        group_1157628038 = nimCopy(null, [65,66,79,32,110,111,116,32,115,112,101,99,105,102,105,101,100,44,32,82,104,68,32,110,111,116,32,115,112,101,99,105,102,105,101,100], NTI33554449);
        break;
      case "T4":
        group_1157628038 = nimCopy(null, [65,117,116,111,108,111,103,111,117,115,32,99,111,108,108,101,99,116,105,111,110,47,105,110,32,113,117,97,114,97,110,116,105,110,101], NTI33554449);
        break;
      case "T5":
        group_1157628038 = nimCopy(null, [83,101,101,32,111,117,116,101,114,32,112,97,99,107,97,103,105,110,103,32,102,111,114,32,112,114,111,100,117,99,116,32,115,116,97,116,117,115], NTI33554449);
        break;
      case "T6":
        group_1157628038 = nimCopy(null, [77,117,115,116,32,98,101,32,115,116,101,114,105,108,105,122,101,100,32,98,101,102,111,114,101,32,114,101,108,101,97,115,101], NTI33554449);
        break;
      default: 
        break;
      }
      if ((0 < (group_1157628038).length)) {
      result_1157628037 = nimCopy(result_1157628037, {kind: 1, message: nimCopy(null, group_1157628038, NTI33554449), group: [], collectionInformation: 0}, NTI1157627981);
      break BeforeRet;
      }
      
    }
    
    if (eqStrings(group_1157628038, [])) {
    raiseException({message: ([107,117,110,100,101,32,105,110,116,101,32,116,111,108,107,97,32,98,108,111,100,103,114,117,112,112,32,102,195,182,114,58,32,39] || []).concat(bg_1157628036.aboRhD || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
  };

  return result_1157628037;

}

function interpretKell_1157628113(bg_1157628114) {
  var result_1157628115 = 0;

    switch (bg_1157628114.rhKellMi[chckIndx(0, 0, (bg_1157628114.rhKellMi).length - 1)]) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 88:
      result_1157628115 = 2;
      break;
    case 83:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 89:
      result_1157628115 = 1;
      break;
    case 84:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 90:
      result_1157628115 = 0;
      break;
    case 85:
    case 86:
    case 87:
      result_1157628115 = 3;
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,75,101,108,108,58,32,39] || []).concat(bg_1157628114.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1157628115;

}

function interpretRh_1157628133(bg_1157628134) {
  var result_1157628135 = new Uint8Array(4);

    switch (bg_1157628134.rhKellMi[chckIndx(0, 0, (bg_1157628134.rhKellMi).length - 1)]) {
    case 48:
    case 83:
    case 84:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([2, 2, 2, 2]), NTI1157628055);
      break;
    case 49:
    case 65:
    case 74:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([1, 0, 1, 0]), NTI1157628055);
      break;
    case 50:
    case 66:
    case 75:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 0, 1, 0]), NTI1157628055);
      break;
    case 51:
    case 67:
    case 76:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 0, 0, 0]), NTI1157628055);
      break;
    case 52:
    case 68:
    case 77:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 0, 0, 1]), NTI1157628055);
      break;
    case 53:
    case 69:
    case 78:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([1, 0, 0, 0]), NTI1157628055);
      break;
    case 54:
    case 70:
    case 79:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([1, 0, 0, 1]), NTI1157628055);
      break;
    case 55:
    case 71:
    case 80:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 1, 1, 0]), NTI1157628055);
      break;
    case 56:
    case 72:
    case 81:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 1, 0, 0]), NTI1157628055);
      break;
    case 57:
    case 73:
    case 82:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([0, 1, 0, 1]), NTI1157628055);
      break;
    case 88:
    case 89:
    case 90:
      result_1157628135 = nimCopy(result_1157628135, new Uint8Array([1, 2, 1, 2]), NTI1157628055);
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,116,32,118,195,164,114,100,101,32,102,195,182,114,32,82,104,58,32,39] || []).concat(bg_1157628134.rhKellMi || [],[39] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1157628135;

}

function interpretMi_1157628153(bg_1157628154) {
  var result_1157628155 = 0;

    if (eqStrings(bg_1157628154.rhKellMi, [85])) {
    result_1157628155 = 1;
    }
    else {
    if (eqStrings(bg_1157628154.rhKellMi, [86])) {
    result_1157628155 = 0;
    }
    }

  return result_1157628155;

}

function interpretRhKellMi_1157628156(bg_1157628157) {
  var result_1157628158 = ({kind: 0, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0});

  BeforeRet: {
    if (eqStrings(bg_1157628157.rhKellMi, [87])) {
    result_1157628158 = nimCopy(result_1157628158, {kind: 2, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0, mipheno: 0}, NTI1157628037);
    break BeforeRet;
    }
    
    var kell_1157628159 = interpretKell_1157628113(bg_1157628157);
    if (!((kell_1157628159 == 3))) {
    var rh_1157628165 = interpretRh_1157628133(bg_1157628157);
    result_1157628158 = nimCopy(result_1157628158, {kind: 0, kell: kell_1157628159, rhC: rh_1157628165[chckIndx(0, 0, (rh_1157628165).length - 1)], rhsmallc: rh_1157628165[chckIndx(1, 0, (rh_1157628165).length - 1)], rhE: rh_1157628165[chckIndx(2, 0, (rh_1157628165).length - 1)], rhsmalle: rh_1157628165[chckIndx(3, 0, (rh_1157628165).length - 1)], mipheno: 0}, NTI1157628037);
    }
    else {
      var mi_1157628166 = interpretMi_1157628153(bg_1157628157);
      result_1157628158 = nimCopy(result_1157628158, {kind: 1, mipheno: mi_1157628166, kell: 0, rhC: 0, rhsmallc: 0, rhE: 0, rhsmalle: 0}, NTI1157628037);
    }
    
  };

  return result_1157628158;

}

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_385875976(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}

function toHtml_1157628231(bg_1157628232) {
    var Temporary1;
    var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;

  var result_1157628233 = [];

    var aboRhD_1157628234 = interpretABORhD_1157628035(bg_1157628232);
    var rhKellMi_1157628235 = interpretRhKellMi_1157628156(bg_1157628232);
    var aboRows_1157628236 = ([60,116,114,62,60,116,100,62,65,66,79,32,111,99,104,32,82,104,68,45,75,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1157628232.aboRhD || [],[60,47,116,100,62,60,47,116,114,62] || []);
    if ((aboRhD_1157628234.kind == 0)) {
    var Temporary1 = aboRhD_1157628234;
    if (ConstSet7[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'group\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1157627979)); }
    aboRows_1157628236.push.apply(aboRows_1157628236, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,65,66,79,32,111,99,104,32,82,104,68,60,47,116,100,62,60,116,100,62] || []).concat(Temporary1.group || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    var Temporary2 = aboRhD_1157628234;
    if (ConstSet8[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'collectionInformation\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1157627979)); }
    aboRows_1157628236.push.apply(aboRows_1157628236, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,84,97,112,112,110,105,110,103,115,116,121,112,60,47,116,100,62,60,116,100,62] || []).concat(reprEnum(Temporary2.collectionInformation, NTI1157627980) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    else {
      var Temporary3 = aboRhD_1157628234;
      if (ConstSet9[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'message\' is not accessible for type \'ABORhD\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1157627979)); }
    aboRows_1157628236.push.apply(aboRows_1157628236, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,77,101,100,100,101,108,97,110,100,101,60,47,116,100,62,60,116,100,62] || []).concat(Temporary3.message || [],[60,47,116,100,62,60,47,116,114,62] || []));;
    }
    
    var phenoRows_1157628245 = ([60,116,114,62,60,116,100,62,70,101,110,111,116,121,112,115,107,111,100,60,47,116,100,62,60,116,100,62] || []).concat(bg_1157628232.rhKellMi || [],[60,47,116,100,62,60,47,116,114,62] || []);
    switch (rhKellMi_1157628235.kind) {
    case 0:
      var Temporary4 = rhKellMi_1157628235;
      if (ConstSet10[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhC\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1157628035)); }
      var Temporary5 = rhKellMi_1157628235;
      if (ConstSet11[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmallc\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1157628035)); }
      var Temporary6 = rhKellMi_1157628235;
      if (ConstSet12[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhE\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1157628035)); }
      var Temporary7 = rhKellMi_1157628235;
      if (ConstSet13[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rhsmalle\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1157628035)); }
      var Temporary8 = rhKellMi_1157628235;
      if (ConstSet14[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'kell\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1157628035)); }
      var phenoString_1157628261 = ([32,67] || []).concat(reprEnum(Temporary4.rhC, NTI1157628036) || [],[32,99] || [],reprEnum(Temporary5.rhsmallc, NTI1157628036) || [],[32,69] || [],reprEnum(Temporary6.rhE, NTI1157628036) || [],[32,101] || [],reprEnum(Temporary7.rhsmalle, NTI1157628036) || [],[75] || [],reprEnum(Temporary8.kell, NTI1157628036) || []);
      phenoRows_1157628245.push.apply(phenoRows_1157628245, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,70,101,110,111,116,121,112,32,40,82,104,47,75,41,60,47,116,100,62,60,116,100,62] || []).concat(phenoString_1157628261 || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 1:
      var Temporary9 = rhKellMi_1157628235;
      if (ConstSet15[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'mipheno\' is not accessible for type \'RhKellMi\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1157628035)); }
      phenoRows_1157628245.push.apply(phenoRows_1157628245, (makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Fenotyp (Mi<sup>a</sup>/Mur)</td><td>") || []).concat(reprEnum(Temporary9.mipheno, NTI1157628036) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      break;
    case 2:
      phenoRows_1157628245.push.apply(phenoRows_1157628245, makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Fenotyp (ok\xC3\xA4nd)</td><td>Special Testing bar code present and must be scanned and interpreted</td></tr>"));;
      break;
    }
    var head_1157628265 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1157628266 = ([60,116,98,111,100,121,62] || []).concat(aboRows_1157628236 || [],phenoRows_1157628245 || [],[60,116,114,62,60,116,100,62,101,60,47,116,100,62,60,116,100,62] || [],bg_1157628232.e || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1157628233.push.apply(result_1157628233, ([60,116,97,98,108,101,62] || []).concat(head_1157628265 || [],body_1157628266 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1157628233;

}

function verifyBloodGroupsABORhD_1157627913(code_1157627914) {
    if (!(((code_1157627914).length == 6))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,54,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1157627914).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseBloodGroupsABORhD_1157627916(code_1157627917) {
  var result_1157627918 = ({dataIdentifier: [], aboRhD: [], rhKellMi: [], e: []});

    verifyBloodGroupsABORhD_1157627913(code_1157627917);
    result_1157627918.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1157627917, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1157627918.aboRhD = nimCopy(null, HEX5BHEX5D_704644351(code_1157627917, HEX2EHEX2E_1040187440(2, 3)), NTI33554449);
    result_1157627918.rhKellMi = nimCopy(null, HEX5BHEX5D_704644351(code_1157627917, HEX2EHEX2E_1040187440(4, 4)), NTI33554449);
    result_1157627918.e = nimCopy(null, HEX5BHEX5D_704644351(code_1157627917, HEX2EHEX2E_1040187440(5, 5)), NTI33554449);

  return result_1157627918;

}

function parseProductDescription_1174405188(code_1174405189) {
        var Temporary7;
        var Temporary8;

  var result_1174405190 = [];

    switch (code_1174405189.productDescriptionCode[chckIndx(0, 0, (code_1174405189.productDescriptionCode).length - 1)]) {
    case 69:
    case 70:
      result_1174405190 = nimCopy(null, [66,108,111,111,100,32,67,111,109,112,111,110,101,110,116,115], NTI33554449);
      break;
    case 72:
      result_1174405190 = nimCopy(null, makeNimstrLit("Medical products of human origin (MPHO) with International Nonproprietary Names (INN) and/or United States Adopted Name (USAN) names"), NTI33554449);
      break;
    case 77:
++excHandler;
      try {
      var numeric_1174405209 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1174405209 >= 1 && numeric_1174405209 <= 999      ){        result_1174405190 = nimCopy(null, [72,117,109,97,110,32,77,105,108,107], NTI33554449);
        }
      else if (      numeric_1174405209 >= 1000 && numeric_1174405209 <= 8999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else if (      numeric_1174405209 >= 9000 && numeric_1174405209 <= 9999      ){        result_1174405190 = nimCopy(null, [84,111,112,105,99,97,108,32,80,114,111,100,117,99,116,115,32,111,102,32,72,117,109,97,110,32,79,114,105,103,105,110], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 78:
++excHandler;
      try {
      var numeric_1174405228 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1174405228 >= 1 && numeric_1174405228 <= 999      ){        result_1174405190 = nimCopy(null, [79,114,103,97,110,115], NTI33554449);
        }
      else if (      numeric_1174405228 >= 1000 && numeric_1174405228 <= 9999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 80:
      result_1174405190 = nimCopy(null, [82,101,103,101,110,101,114,97,116,101,100,32,84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 82:
++excHandler;
      try {
      var numeric_1174405247 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1174405247 >= 1 && numeric_1174405247 <= 999      ){        result_1174405190 = nimCopy(null, [82,101,112,114,111,100,117,99,116,105,118,101,32,84,105,115,115,117,101,32,97,110,100,32,67,101,108,108,32,112,114,111,100,117,99,116,115], NTI33554449);
        }
      else if (      numeric_1174405247 >= 1000 && numeric_1174405247 <= 9999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 83:
      result_1174405190 = nimCopy(null, [67,101,108,108,117,108,97,114,32,84,104,101,114,97,112,121,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 84:
      result_1174405190 = nimCopy(null, [84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 86:
      result_1174405190 = nimCopy(null, [79,99,117,108,97,114,32,84,105,115,115,117,101,32,112,114,111,100,117,99,116,115], NTI33554449);
      break;
    case 87:
++excHandler;
      try {
      var numeric_1174405266 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1174405266 >= 1 && numeric_1174405266 <= 999      ){        result_1174405190 = nimCopy(null, [70,101,99,97,108,32,77,105,99,114,111,98,105,111,116,97], NTI33554449);
        }
      else if (      numeric_1174405266 >= 1000 && numeric_1174405266 <= 9999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 88:
++excHandler;
      try {
      var numeric_1174405285 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(1, 4)));
      if (      numeric_1174405285 >= 1 && numeric_1174405285 <= 999      ){        result_1174405190 = nimCopy(null, [80,108,97,115,109,97,32,68,101,114,105,118,97,116,105,118,101,115], NTI33554449);
        }
      else if (      numeric_1174405285 >= 1000 && numeric_1174405285 <= 4999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else if (      numeric_1174405285 >= 5000 && numeric_1174405285 <= 5999      ){        result_1174405190 = nimCopy(null, [73,110,32,86,105,118,111,32,68,105,97,103,110,111,115,116,105,99,32,77,101,100,105,99,97,108,32,112,114,111,100,117,99,116,115,32,111,102,32,104,117,109,97,110,32,111,114,105,103,105,110,32,40,77,80,72,79,41], NTI33554449);
        }
      else if (      numeric_1174405285 >= 6000 && numeric_1174405285 <= 9999      ){        result_1174405190 = nimCopy(null, [78,111,116,32,97,115,115,105,103,110,101,100], NTI33554449);
        }
      else{
        }
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 89:
++excHandler;
      try {
      var second_1174405286 = code_1174405189.productDescriptionCode[chckIndx(1, 0, (code_1174405189.productDescriptionCode).length - 1)];
      var numeric_1174405305 = nsuParseInt(HEX5BHEX5D_704644351(code_1174405189.productDescriptionCode, HEX2EHEX2E_1040187440(2, 4)));
        if (!(ConstSet16[second_1174405286] != undefined)) Temporary8 = false; else {          Temporary8 = (0 <= numeric_1174405305);        }        if (!Temporary8) Temporary7 = false; else {          Temporary7 = (numeric_1174405305 <= 999);        }      if (Temporary7) {
      result_1174405190 = nimCopy(null, [67,108,105,110,105,99,97,108,32,84,114,105,97,108,115,32,112,114,111,100,117,99,116,115], NTI33554449);
      }
      else {
      }
      
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      break;
    case 65:
    case 66:
    case 67:
    case 68:
      result_1174405190 = nimCopy(null, [78,97,116,105,111,110,97,108,32,111,114,32,76,111,99,97,108,47,70,97,99,105,108,105,116,121,32,99,111,100,101,115], NTI33554449);
      break;
    default: 
      break;
    }
    if (((result_1174405190).length == 0)) {
    raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,58,32] || []).concat(code_1174405189.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1174405190;

}

function parseCollectionType_1174405311(first_1174405312) {
    var Temporary1;

  var result_1174405313 = [];

    switch (first_1174405312) {
    case 48:
      Temporary1 = [78,111,116,32,115,112,101,99,105,102,105,101,100,32,40,110,117,108,108,32,118,97,108,117,101,41];
      break;
    case 86:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,104,111,109,111,108,111,103,111,117,115,32,40,97,108,108,111,103,101,110,101,105,99,41,32,40,100,101,102,97,117,108,116,41];
      break;
    case 82:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,114,101,115,101,97,114,99,104,32,40,80,114,111,100,117,99,116,32,110,111,116,32,105,110,116,101,110,100,101,100,32,102,111,114,32,104,117,109,97,110,32,97,112,112,108,105,99,97,116,105,111,110,41];
      break;
    case 83:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,115,111,117,114,99,101];
      break;
    case 84:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,116,104,101,114,97,112,101,117,116,105,99];
      break;
    case 80:
      Temporary1 = [80,97,105,100,32,104,111,109,111,108,111,103,111,117,115,32,40,97,108,108,111,103,101,110,101,105,99,41];
      break;
    case 114:
      Temporary1 = [80,97,105,100,32,114,101,115,101,97,114,99,104,32,40,80,114,111,100,117,99,116,32,110,111,116,32,105,110,116,101,110,100,101,100,32,102,111,114,32,104,117,109,97,110,32,97,112,112,108,105,99,97,116,105,111,110,41];
      break;
    case 115:
      Temporary1 = [80,97,105,100,32,115,111,117,114,99,101];
      break;
    case 65:
      Temporary1 = [65,117,116,111,108,111,103,111,117,115,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 49:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,32,111,110,108,121];
      break;
    case 88:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,32,111,110,108,121,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 68:
      Temporary1 = [86,111,108,117,110,116,101,101,114,32,100,105,114,101,99,116,101,100,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 100:
      Temporary1 = [80,97,105,100,32,100,105,114,101,99,116,101,100,44,32,101,108,105,103,105,98,108,101,32,102,111,114,32,99,114,111,115,115,111,118,101,114];
      break;
    case 50:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121];
      break;
    case 76:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121,44,32,108,105,109,105,116,101,100,32,101,120,112,111,115,117,114,101];
      break;
    case 69:
      Temporary1 = [77,101,100,105,99,97,108,32,101,120,99,101,112,116,105,111,110,44,32,102,111,114,32,115,112,101,99,105,102,105,101,100,32,114,101,99,105,112,105,101,110,116,32,111,110,108,121,32,40,97,108,108,111,103,101,110,101,105,99,41];
      break;
    case 81:
      Temporary1 = [83,101,101,32,40,105,46,101,46,44,32,114,101,97,100,32,91,115,99,97,110,93,41,32,83,112,101,99,105,97,108,32,84,101,115,116,105,110,103,32,98,97,114,32,99,111,100,101];
      break;
    case 51:
      Temporary1 = [70,111,114,32,100,105,114,101,99,116,101,100,32,114,101,99,105,112,105,101,110,116,32,117,115,101,32,111,110,108,121,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 52:
      Temporary1 = [68,101,115,105,103,110,97,116,101,100];
      break;
    case 53:
      Temporary1 = [68,101,100,105,99,97,116,101,100];
      break;
    case 54:
      Temporary1 = [68,101,115,105,103,110,97,116,101,100,44,32,98,105,111,104,97,122,97,114,100];
      break;
    case 70:
      Temporary1 = [70,97,109,105,108,121,32,114,101,115,101,114,118,101,100];
      break;
    case 67:
      Temporary1 = [82,101,112,108,97,99,101,109,101,110,116];
      break;
    case 55:
      Temporary1 = [70,111,114,32,97,108,108,111,103,101,110,101,105,99,32,117,115,101,46];
      break;
    case 56:
      Temporary1 = [70,111,114,32,97,117,116,111,108,111,103,111,117,115,32,117,115,101,46,32,67,111,110,116,97,105,110,115,32,97,108,108,111,103,101,110,101,105,99,32,109,97,116,101,114,105,97,108,46];
      break;
    case 66:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,32,85,115,101,32,79,110,108,121];
      break;
    case 72:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,47,66,105,111,104,97,122,97,114,100,111,117,115];
      break;
    case 74:
      Temporary1 = [68,105,114,101,99,116,101,100,47,68,101,100,105,99,97,116,101,100,47,68,101,115,105,103,110,97,116,101,100,32,67,111,108,108,101,99,116,105,111,110,47,69,108,105,103,105,98,108,101,32,102,111,114,32,67,114,111,115,115,111,118,101,114];
      break;
    case 71:
      Temporary1 = [70,111,114,32,69,109,101,114,103,101,110,99,121,32,85,115,101,32,79,110,108,121];
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,100,32,116,121,112,32,97,118,32,116,97,112,112,110,105,110,103,32,101,108,108,101,114,32,100,111,110,97,116,105,111,110,58,32] || []).concat([first_1174405312]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1174405313 = nimCopy(null, Temporary1, NTI33554449);

  return result_1174405313;

}

function parseTds_1174405325(code_1174405326) {
        var Temporary1;

  var result_1174405327 = ({division: [], kind: 0, collectionType: []});

    var first_1174405328 = code_1174405326.productDescriptionCode[chckIndx(0, 0, (code_1174405326.productDescriptionCode).length - 1)];
    var second_1174405329 = code_1174405326.productDescriptionCode[chckIndx(0, 0, (code_1174405326.productDescriptionCode).length - 1)];
    switch (first_1174405328) {
    case 69:
    case 70:
    case 72:
    case 83:
    case 80:
    case 88:
    case 89:
      if (((first_1174405328 == 88) && !((second_1174405329 == 48)))) {
      if ((ConstSet17[second_1174405329] != undefined)) {
      result_1174405327 = nimCopy(result_1174405327, {kind: 0, division: nimCopy(null, code_1174405326.tds, NTI33554449), collectionType: []}, NTI1174405303);
      }
      else {
        raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,32,102,195,182,114,32,116,100,115,58,32] || []).concat(code_1174405326.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      
      }
      else {
        if (!(first_1174405328 == 89)) Temporary1 = false; else {          Temporary1 = !((ConstSet18[second_1174405329] != undefined));        }      if (Temporary1) {
      raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,32,102,195,182,114,32,116,100,115,58,32] || []).concat(code_1174405326.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      }
      }
      var collectionType_1174405340 = parseCollectionType_1174405311(code_1174405326.tds[chckIndx(0, 0, (code_1174405326.tds).length - 1)]);
      var division_1174405359 = HEX5BHEX5D_704644351(code_1174405326.tds, HEX2EHEX2E_1040187440(1, 2));
      result_1174405327 = nimCopy(result_1174405327, {kind: 1, collectionType: nimCopy(null, collectionType_1174405340, NTI33554449), division: nimCopy(null, division_1174405359, NTI33554449)}, NTI1174405303);
      break;
    case 77:
    case 78:
    case 82:
    case 84:
    case 86:
    case 87:
      result_1174405327 = nimCopy(result_1174405327, {kind: 0, division: nimCopy(null, code_1174405326.tds, NTI33554449), collectionType: []}, NTI1174405303);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
      result_1174405327 = nimCopy(result_1174405327, {kind: 0, division: nimCopy(null, code_1174405326.tds, NTI33554449), collectionType: []}, NTI1174405303);
      break;
    default: 
      raiseException({message: ([111,107,195,164,110,100,32,112,114,111,100,117,107,116,107,111,100,58,32] || []).concat(code_1174405326.productDescriptionCode || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }

  return result_1174405327;

}

function toHtml_1174405400(code_1174405401) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

  var result_1174405402 = [];

    var productType_1174405403 = parseProductDescription_1174405188(code_1174405401);
    var tds_1174405404 = parseTds_1174405325(code_1174405401);
    var tdsRows_1174405405 = [];
    switch (tds_1174405404.kind) {
    case 0:
      if (eqStrings(tds_1174405404.division, [48,48,48])) {
      Temporary1 = [101,106,32,100,101,108,97,100];
      }
      else {
      Temporary1 = [100,101,108,97,100];
      }
      
      tdsRows_1174405405 = nimCopy(null, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,101,108,110,105,110,103,60,47,116,100,62,60,116,100,62] || []).concat(Temporary1 || [],[60,47,116,100,62,60,47,116,114,62] || []), NTI33554449);
      break;
    case 1:
      var Temporary2 = tds_1174405404;
      if (ConstSet19[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'collectionType\' is not accessible for type \'Tds\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1174405302)); }
      tdsRows_1174405405.push.apply(tdsRows_1174405405, (makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Typ av tappning och anv\xC3\xA4ndning</td><td>") || []).concat(Temporary2.collectionType || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      if ((ConstSet20[code_1174405401.productDescriptionCode[chckIndx(0, 0, (code_1174405401.productDescriptionCode).length - 1)]] != undefined)) {
      tdsRows_1174405405.push.apply(tdsRows_1174405405, makeNimstrLit("<tr><td style=\"padding-left: 2em;\">Delning</td><td>lokalt eller nationellt definierad kod</td></tr>"));;
      }
      else {
        if (eqStrings(tds_1174405404.division, [57,57])) {
        Temporary3 = [100,97,116,97,115,116,114,117,107,116,117,114,32,48,51,50,32,103,101,114,32,105,110,102,111,114,109,97,116,105,111,110,32,111,109,32,100,101,108,110,105,110,103];
        }
        else {
        if (eqStrings(tds_1174405404.division, [48,48])) {
        Temporary3 = [101,106,32,100,101,108,97,100];
        }
        else {
        Temporary3 = [100,101,108,97,100];
        }
        }
        var divisionField_1174405410 = nimCopy(null, Temporary3, NTI33554449);
        tdsRows_1174405405.push.apply(tdsRows_1174405405, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,101,108,110,105,110,103,60,47,116,100,62,60,116,100,62] || []).concat(divisionField_1174405410 || [],[60,47,116,100,62,60,47,116,114,62] || []));;
      }
      
      break;
    }
    var head_1174405411 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1174405412 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,80,114,111,100,117,107,116,107,111,100,60,47,116,100,62,60,116,100,62] || []).concat(code_1174405401.productDescriptionCode || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Komponenttyp</td><td>") || [],productType_1174405403 || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,116,100,115,60,47,116,100,62,60,116,100,62] || [],code_1174405401.tds || [],[60,47,116,100,62,60,47,116,114,62] || [],tdsRows_1174405405 || [],[60,47,116,98,111,100,121,62] || []);
    result_1174405402.push.apply(result_1174405402, ([60,116,97,98,108,101,62] || []).concat(head_1174405411 || [],body_1174405412 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1174405402;

}

function verifyProductCode_1174405128(code_1174405129) {
    if (!(((code_1174405129).length == 10))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1174405129).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductCode_1174405131(code_1174405132) {
  var result_1174405133 = ({dataIdentifier: [], productDescriptionCode: [], tds: []});

    verifyProductCode_1174405128(code_1174405132);
    result_1174405133.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1174405132, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1174405133.productDescriptionCode = nimCopy(null, HEX5BHEX5D_704644351(code_1174405132, HEX2EHEX2E_1040187440(2, 6)), NTI33554449);
    result_1174405133.tds = nimCopy(null, HEX5BHEX5D_704644351(code_1174405132, HEX2EHEX2E_1040187440(7, 9)), NTI33554449);

  return result_1174405133;

}

function longYear_1140850693(century_1140850694, year_1140850695) {
  var result_1140850696 = 0;

    if ((century_1140850694 == 0)) {
    result_1140850696 = addInt(2000, year_1140850695);
    }
    else {
      result_1140850696 = addInt(addInt(1000, mulInt(century_1140850694, 100)), year_1140850695);
    }
    

  return result_1140850696;

}

function isLeapYear_1140850690(year_1140850691) {
  var result_1140850692 = false;

    result_1140850692 = false;
    if ((modInt(year_1140850691, 4) == 0)) {
    if (((modInt(year_1140850691, 100) == 0) && (0 < modInt(year_1140850691, 400)))) {
    result_1140850692 = false;
    }
    else {
      result_1140850692 = true;
    }
    
    }
    

  return result_1140850692;

}

function ordinalToDate_1140850699(century_1140850700, year_1140850701, ordinal_1140850702) {
    var Temporary1;
    var Temporary5;
    var Temporary6;

  var result_1140850703 = [];

  BeforeRet: {
    var long_1140850704 = longYear_1140850693(nsuParseInt(century_1140850700), nsuParseInt(year_1140850701));
    if (isLeapYear_1140850690(long_1140850704)) {
    Temporary1 = monthsL_1140850698;
    }
    else {
    Temporary1 = months_1140850697;
    }
    
    var mtab_1140850705 = nimCopy(null, Temporary1, NTI1140850704);
    var ordinalint_1140850706 = nsuParseInt(ordinal_1140850702);
    var day_1140850707 = ordinalint_1140850706;
    var days_1140850708 = 0;
    var month_1140850709 = 0;
    Label2: {
      var m_1140850745 = 0;
      var res_570425765 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425765 <= 11)) break Label4;
            m_1140850745 = chckRange(res_570425765, 0, 11);
            days_1140850708 = addInt(days_1140850708, mtab_1140850705[chckIndx(m_1140850745, 0, (mtab_1140850705).length - 1)]);
            if ((ordinalint_1140850706 <= days_1140850708)) {
            month_1140850709 = addInt(m_1140850745, 1);
            break Label2;
            }
            
            day_1140850707 = subInt(day_1140850707, mtab_1140850705[chckIndx(m_1140850745, 0, (mtab_1140850705).length - 1)]);
            res_570425765 = addInt(res_570425765, 1);
          }
      };
    };
    if ((month_1140850709 < 10)) {
    Temporary5 = ([48] || []).concat(HEX24_385875976(month_1140850709) || []);
    }
    else {
    Temporary5 = HEX24_385875976(month_1140850709);
    }
    
    var monthString_1140850756 = nimCopy(null, Temporary5, NTI33554449);
    if ((day_1140850707 < 10)) {
    Temporary6 = ([48] || []).concat(HEX24_385875976(day_1140850707) || []);
    }
    else {
    Temporary6 = HEX24_385875976(day_1140850707);
    }
    
    var dayString_1140850757 = nimCopy(null, Temporary6, NTI33554449);
    result_1140850703 = nimCopy(null, (HEX24_385875976(long_1140850704) || []).concat([45] || [],monthString_1140850756 || [],[45] || [],dayString_1140850757 || []), NTI33554449);
    break BeforeRet;
  };

  return result_1140850703;

}

function toHtml_1191182422(date_1191182423) {
  var result_1191182424 = [];

    var head_1191182425 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1191182426 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1191182423.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1191182423.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1191182423.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,97,116,117,109,60,47,116,100,62,60,116,100,62] || [],ordinalToDate_1140850699(date_1191182423.c, date_1191182423.yy, date_1191182423.jjj) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1191182424.push.apply(result_1191182424, ([60,116,97,98,108,101,62] || []).concat(head_1191182425 || [],body_1191182426 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1191182424;

}

function verifyExpirationDate_1191182344(code_1191182345) {
    if (!(((code_1191182345).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1191182345).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseExpirationDate_1191182347(code_1191182348) {
  var result_1191182349 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyExpirationDate_1191182344(code_1191182348);
    result_1191182349.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1191182348, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1191182349.c = nimCopy(null, HEX5BHEX5D_704644351(code_1191182348, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1191182349.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1191182348, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1191182349.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1191182348, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1191182349;

}

function toDateTime_1140850774(century_1140850775, year_1140850776, ordinal_1140850777, hh_1140850778, mm_1140850779) {
  var result_1140850780 = [];

    var date_1140850781 = ordinalToDate_1140850699(century_1140850775, year_1140850776, ordinal_1140850777);
    result_1140850780 = nimCopy(null, (date_1140850781 || []).concat([32] || [],hh_1140850778 || [],[58] || [],mm_1140850779 || []), NTI33554449);

  return result_1140850780;

}

function toHtml_1207959676(date_1207959677) {
  var result_1207959678 = [];

    var head_1207959679 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1207959680 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1207959677.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1207959677.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1207959677.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1207959677.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1207959677.mm || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Datum och tid</td><td>") || [],toDateTime_1140850774(date_1207959677.c, date_1207959677.yy, date_1207959677.jjj, date_1207959677.hh, date_1207959677.mm) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1207959678.push.apply(result_1207959678, ([60,116,97,98,108,101,62] || []).concat(head_1207959679 || [],body_1207959680 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1207959678;

}

function verifyExpirationDateAndTime_1207959562(code_1207959563) {
    if (!(((code_1207959563).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1207959563).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseExpirationDateAndTime_1207959565(code_1207959566) {
  var result_1207959567 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyExpirationDateAndTime_1207959562(code_1207959566);
    result_1207959567.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1207959567.c = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1207959567.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1207959567.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1207959567.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1207959567.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1207959566, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1207959567;

}

function toHtml_1224736854(date_1224736855) {
  var result_1224736856 = [];

    var head_1224736857 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1224736858 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1224736855.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1224736855.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1224736855.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,97,116,117,109,60,47,116,100,62,60,116,100,62] || [],ordinalToDate_1140850699(date_1224736855.c, date_1224736855.yy, date_1224736855.jjj) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1224736856.push.apply(result_1224736856, ([60,116,97,98,108,101,62] || []).concat(head_1224736857 || [],body_1224736858 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1224736856;

}

function verifyCollectionDate_1224736776(code_1224736777) {
    if (!(((code_1224736777).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1224736777).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseCollectionDate_1224736779(code_1224736780) {
  var result_1224736781 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyCollectionDate_1224736776(code_1224736780);
    result_1224736781.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1224736780, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1224736781.c = nimCopy(null, HEX5BHEX5D_704644351(code_1224736780, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1224736781.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1224736780, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1224736781.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1224736780, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1224736781;

}

function toHtml_1241514108(date_1241514109) {
  var result_1241514110 = [];

    var head_1241514111 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1241514112 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1241514109.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1241514109.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1241514109.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1241514109.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1241514109.mm || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Datum och tid</td><td>") || [],toDateTime_1140850774(date_1241514109.c, date_1241514109.yy, date_1241514109.jjj, date_1241514109.hh, date_1241514109.mm) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1241514110.push.apply(result_1241514110, ([60,116,97,98,108,101,62] || []).concat(head_1241514111 || [],body_1241514112 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1241514110;

}

function verifyCollectionDateAndTime_1241513994(code_1241513995) {
    if (!(((code_1241513995).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1241513995).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseCollectionDateAndTime_1241513997(code_1241513998) {
  var result_1241513999 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyCollectionDateAndTime_1241513994(code_1241513998);
    result_1241513999.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1241513999.c = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1241513999.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1241513999.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1241513999.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1241513999.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1241513998, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1241513999;

}

function toHtml_1258291286(date_1258291287) {
  var result_1258291288 = [];

    var head_1258291289 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1258291290 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1258291287.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1258291287.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1258291287.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62,68,97,116,117,109,60,47,116,100,62,60,116,100,62] || [],ordinalToDate_1140850699(date_1258291287.c, date_1258291287.yy, date_1258291287.jjj) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1258291288.push.apply(result_1258291288, ([60,116,97,98,108,101,62] || []).concat(head_1258291289 || [],body_1258291290 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1258291288;

}

function verifyProductionDate_1258291208(code_1258291209) {
    if (!(((code_1258291209).length == 8))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,56,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1258291209).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductionDate_1258291211(code_1258291212) {
  var result_1258291213 = ({dataIdentifier: [], c: [], yy: [], jjj: []});

    verifyProductionDate_1258291208(code_1258291212);
    result_1258291213.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1258291212, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1258291213.c = nimCopy(null, HEX5BHEX5D_704644351(code_1258291212, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1258291213.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1258291212, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1258291213.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1258291212, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);

  return result_1258291213;

}

function toHtml_1275068540(date_1275068541) {
  var result_1275068542 = [];

    var head_1275068543 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1275068544 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,83,101,107,101,108,60,47,116,100,62,60,116,100,62] || []).concat(date_1275068541.c || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,195,133,114,60,47,116,100,62,60,116,100,62] || [],date_1275068541.yy || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,68,97,116,117,109,110,117,109,109,101,114,32,40,49,32,106,97,110,117,97,114,105,32,61,32,49,41,60,47,116,100,62,60,116,100,62] || [],date_1275068541.jjj || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,84,105,109,109,101,60,47,116,100,62,60,116,100,62] || [],date_1275068541.hh || [],[60,47,116,100,62,60,47,116,114,62,60,116,114,62,60,116,100,62,77,105,110,117,116,60,47,116,100,62,60,116,100,62] || [],date_1275068541.mm || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Datum och tid</td><td>") || [],toDateTime_1140850774(date_1275068541.c, date_1275068541.yy, date_1275068541.jjj, date_1275068541.hh, date_1275068541.mm) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1275068542.push.apply(result_1275068542, ([60,116,97,98,108,101,62] || []).concat(head_1275068543 || [],body_1275068544 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1275068542;

}

function verifyProductionDateAndTime_1275068426(code_1275068427) {
    if (!(((code_1275068427).length == 12))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,49,50,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1275068427).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseProductionDateAndTime_1275068429(code_1275068430) {
  var result_1275068431 = ({dataIdentifier: [], c: [], yy: [], jjj: [], hh: [], mm: []});

    verifyProductionDateAndTime_1275068426(code_1275068430);
    result_1275068431.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1275068431.c = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(2, 2)), NTI33554449);
    result_1275068431.yy = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(3, 4)), NTI33554449);
    result_1275068431.jjj = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(5, 7)), NTI33554449);
    result_1275068431.hh = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(8, 9)), NTI33554449);
    result_1275068431.mm = nimCopy(null, HEX5BHEX5D_704644351(code_1275068430, HEX2EHEX2E_1040187440(10, 11)), NTI33554449);

  return result_1275068431;

}

function toHtml_1291845680(code_1291845681) {
  var result_1291845682 = [];

    var head_1291845683 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1291845684 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,122,122,122,122,122,60,47,116,100,62,60,116,100,62] || []).concat(code_1291845681.zzzzz || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Tolkning</td><td>G\xC3\xA5r ej att tolka, ej \xC3\xB6ppen tillg\xC3\xA5ng till information</td></tr></tbody>") || []);
    result_1291845682.push.apply(result_1291845682, ([60,116,97,98,108,101,62] || []).concat(head_1291845683 || [],body_1291845684 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1291845682;

}

function verifySpecialTestingGeneral_1291845638(code_1291845639) {
    if (!(((code_1291845639).length == 7))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,55,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1291845639).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingGeneral_1291845641(code_1291845642) {
  var result_1291845643 = ({dataIdentifier: [], zzzzz: []});

    verifySpecialTestingGeneral_1291845638(code_1291845642);
    result_1291845643.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1291845642, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1291845643.zzzzz = nimCopy(null, HEX5BHEX5D_704644351(code_1291845642, HEX2EHEX2E_1040187440(2, 6)), NTI33554449);

  return result_1291845643;

}

function add_1308622995(x_1308622997, x_1308622997_Idx, y_1308622998) {
    var Temporary1;

    var xl_1308623003 = (x_1308622997[x_1308622997_Idx]).length;
    if (x_1308622997[x_1308622997_Idx].length < (Temporary1 = chckRange(addInt(xl_1308623003, (y_1308622998).length), 0, 2147483647), Temporary1)) { for (var i = x_1308622997[x_1308622997_Idx].length ; i < Temporary1 ; ++i) x_1308622997[x_1308622997_Idx].push({Field0: [], Field1: 0}); }
               else { x_1308622997[x_1308622997_Idx].length = Temporary1; };
    Label2: {
      var i_1308623019 = 0;
      var colontmp__570425779 = 0;
      colontmp__570425779 = (y_1308622998).length - 1;
      var res_570425780 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425780 <= colontmp__570425779)) break Label4;
            i_1308623019 = res_570425780;
            x_1308622997[x_1308622997_Idx][chckIndx(addInt(xl_1308623003, i_1308623019), 0, (x_1308622997[x_1308622997_Idx]).length - 1)] = nimCopy(x_1308622997[x_1308622997_Idx][chckIndx(addInt(xl_1308623003, i_1308623019), 0, (x_1308622997[x_1308622997_Idx]).length - 1)], y_1308622998[chckIndx(i_1308623019, 0, (y_1308622998).length - 1)], NTI1308622909);
            res_570425780 = addInt(res_570425780, 1);
          }
      };
    };

  
}

function parseRh_1308622933(value_1308622934) {
  var result_1308622935 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1308622934) {
    case 48:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 49:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 50:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1308622932);
      break;
    case 51:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 52:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 53:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 54:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 55:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 56:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1308622932);
      break;
    case 57:
      result_1308622935 = nimCopy(result_1308622935, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1308622932);
      break;
    }

  return result_1308622935;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function parseAntigen_1308622985(spec_1308622986) {
  var result_1308622987 = [[]];

    var agIndex_1308622992 = 0;
    Label1: {
      var i_1308622993 = 0;
      var a_1308622994 = 0;
      var i_570425775 = 0;
      var L_570425776 = (spec_1308622986.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425775 < L_570425776)) break Label3;
            i_1308622993 = i_570425775;
            a_1308622994 = spec_1308622986.aaaaaaaaaaaaaaaa[chckIndx(i_570425775, 0, (spec_1308622986.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1308622993 == 0)) {
              add_1308622995(result_1308622987, 0, parseRh_1308622933(chckRange(a_1308622994, 48, 57)));
              break Label4;
              }
              
              result_1308622987[0].push({Field0: nimCopy(null, antigens_1308622930[chckIndx(agIndex_1308622992, 0, (antigens_1308622930).length - 1)], NTI33554449), Field1: phenoOne_1308622931[chckIndx(a_1308622994, 48, (phenoOne_1308622931).length + (48) - 1) - (48)]});;
              agIndex_1308622992 = addInt(agIndex_1308622992, 1);
              result_1308622987[0].push({Field0: nimCopy(null, antigens_1308622930[chckIndx(agIndex_1308622992, 0, (antigens_1308622930).length - 1)], NTI33554449), Field1: phenoTwo_1308622932[chckIndx(a_1308622994, 48, (phenoTwo_1308622932).length + (48) - 1) - (48)]});;
              agIndex_1308622992 = addInt(agIndex_1308622992, 1);
            };
            i_570425775 = addInt(i_570425775, 1);
            if (!(((spec_1308622986.aaaaaaaaaaaaaaaa).length == L_570425776))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1308622987[0];

}

function parseNegativeAntigen_1308623086(spec_1308623087) {
  var result_1308623088 = [];

++excHandler;
    try {
    var numeric_1308623089 = nsuParseInt(spec_1308623087.ii);
    if ((((99 < numeric_1308623089) || (numeric_1308623089 == 7)) || (numeric_1308623089 == 8))) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1308623087.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1308623088 = nimCopy(null, antigenNegativ_1308623085[chckIndx(numeric_1308623089, 0, (antigenNegativ_1308623085).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1308623087.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1308623088;

}

function toHtml_1308623092(spec_1308623093) {
  var result_1308623094 = [];

    var pheno_1308623095 = parseAntigen_1308622985(spec_1308623093);
    var phenotypeRows_1308623096 = [];
    Label1: {
      var pair_1308623118 = {Field0: [], Field1: 0};
      var i_570425769 = 0;
      var L_570425770 = (pheno_1308623095).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425769 < L_570425770)) break Label3;
            pair_1308623118 = pheno_1308623095[chckIndx(i_570425769, 0, (pheno_1308623095).length - 1)];
            phenotypeRows_1308623096.push.apply(phenotypeRows_1308623096, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1308623118.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1308623118.Field1, NTI1308622908) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425769 = addInt(i_570425769, 1);
            if (!(((pheno_1308623095).length == L_570425770))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1308623122 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1308623123 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1308623093.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1308623096 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1308623093.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1308623086(spec_1308623093) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1308623094.push.apply(result_1308623094, ([60,116,97,98,108,101,62] || []).concat(head_1308623122 || [],body_1308623123 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1308623094;

}

function verifySpecialTestingAntigensRetired_1308622856(code_1308622857) {
    if (!(((code_1308622857).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1308622857).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensRetired_1308622859(code_1308622860) {
  var result_1308622861 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensRetired_1308622856(code_1308622860);
    result_1308622861.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1308622860, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1308622861.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1308622860, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1308622861.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1308622860, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1308622861;

}

function add_1325400211(x_1325400213, x_1325400213_Idx, y_1325400214) {
    var Temporary1;

    var xl_1325400219 = (x_1325400213[x_1325400213_Idx]).length;
    if (x_1325400213[x_1325400213_Idx].length < (Temporary1 = chckRange(addInt(xl_1325400219, (y_1325400214).length), 0, 2147483647), Temporary1)) { for (var i = x_1325400213[x_1325400213_Idx].length ; i < Temporary1 ; ++i) x_1325400213[x_1325400213_Idx].push({Field0: [], Field1: 0}); }
               else { x_1325400213[x_1325400213_Idx].length = Temporary1; };
    Label2: {
      var i_1325400235 = 0;
      var colontmp__570425793 = 0;
      colontmp__570425793 = (y_1325400214).length - 1;
      var res_570425794 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425794 <= colontmp__570425793)) break Label4;
            i_1325400235 = res_570425794;
            x_1325400213[x_1325400213_Idx][chckIndx(addInt(xl_1325400219, i_1325400235), 0, (x_1325400213[x_1325400213_Idx]).length - 1)] = nimCopy(x_1325400213[x_1325400213_Idx][chckIndx(addInt(xl_1325400219, i_1325400235), 0, (x_1325400213[x_1325400213_Idx]).length - 1)], y_1325400214[chckIndx(i_1325400235, 0, (y_1325400214).length - 1)], NTI1325400125);
            res_570425794 = addInt(res_570425794, 1);
          }
      };
    };

  
}

function parseRh_1325400149(value_1325400150) {
  var result_1325400151 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1325400150) {
    case 48:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 49:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 50:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1325400148);
      break;
    case 51:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 52:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 53:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 54:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 55:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 56:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1325400148);
      break;
    case 57:
      result_1325400151 = nimCopy(result_1325400151, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1325400148);
      break;
    }

  return result_1325400151;

}

function parseAntigen_1325400201(spec_1325400202) {
  var result_1325400203 = [[]];

    var agIndex_1325400208 = 0;
    Label1: {
      var i_1325400209 = 0;
      var a_1325400210 = 0;
      var i_570425789 = 0;
      var L_570425790 = (spec_1325400202.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425789 < L_570425790)) break Label3;
            i_1325400209 = i_570425789;
            a_1325400210 = spec_1325400202.aaaaaaaaaaaaaaaa[chckIndx(i_570425789, 0, (spec_1325400202.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1325400209 == 0)) {
              add_1325400211(result_1325400203, 0, parseRh_1325400149(chckRange(a_1325400210, 48, 57)));
              break Label4;
              }
              
              result_1325400203[0].push({Field0: nimCopy(null, antigens_1325400146[chckIndx(agIndex_1325400208, 0, (antigens_1325400146).length - 1)], NTI33554449), Field1: phenoOne_1325400147[chckIndx(a_1325400210, 48, (phenoOne_1325400147).length + (48) - 1) - (48)]});;
              agIndex_1325400208 = addInt(agIndex_1325400208, 1);
              result_1325400203[0].push({Field0: nimCopy(null, antigens_1325400146[chckIndx(agIndex_1325400208, 0, (antigens_1325400146).length - 1)], NTI33554449), Field1: phenoTwo_1325400148[chckIndx(a_1325400210, 48, (phenoTwo_1325400148).length + (48) - 1) - (48)]});;
              agIndex_1325400208 = addInt(agIndex_1325400208, 1);
            };
            i_570425789 = addInt(i_570425789, 1);
            if (!(((spec_1325400202.aaaaaaaaaaaaaaaa).length == L_570425790))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1325400203[0];

}

function parseNegativeAntigen_1325400286(spec_1325400287) {
  var result_1325400288 = [];

++excHandler;
    try {
    var numeric_1325400289 = nsuParseInt(spec_1325400287.ii);
    if ((99 < numeric_1325400289)) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1325400287.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1325400288 = nimCopy(null, antigenNegativ_1325400285[chckIndx(numeric_1325400289, 0, (antigenNegativ_1325400285).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1325400287.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1325400288;

}

function toHtml_1325400292(spec_1325400293) {
  var result_1325400294 = [];

    var pheno_1325400295 = parseAntigen_1325400201(spec_1325400293);
    var phenotypeRows_1325400296 = [];
    Label1: {
      var pair_1325400318 = {Field0: [], Field1: 0};
      var i_570425784 = 0;
      var L_570425785 = (pheno_1325400295).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425784 < L_570425785)) break Label3;
            pair_1325400318 = pheno_1325400295[chckIndx(i_570425784, 0, (pheno_1325400295).length - 1)];
            phenotypeRows_1325400296.push.apply(phenotypeRows_1325400296, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1325400318.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1325400318.Field1, NTI1325400124) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425784 = addInt(i_570425784, 1);
            if (!(((pheno_1325400295).length == L_570425785))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1325400322 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1325400323 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1325400293.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1325400296 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1325400293.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1325400286(spec_1325400293) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1325400294.push.apply(result_1325400294, ([60,116,97,98,108,101,62] || []).concat(head_1325400322 || [],body_1325400323 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1325400294;

}

function verifySpecialTestingAntigensGeneral_1325400072(code_1325400073) {
    if (!(((code_1325400073).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1325400073).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensGeneral_1325400075(code_1325400076) {
  var result_1325400077 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensGeneral_1325400072(code_1325400076);
    result_1325400077.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1325400076, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1325400077.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1325400076, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1325400077.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1325400076, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1325400077;

}

function add_1342177427(x_1342177429, x_1342177429_Idx, y_1342177430) {
    var Temporary1;

    var xl_1342177435 = (x_1342177429[x_1342177429_Idx]).length;
    if (x_1342177429[x_1342177429_Idx].length < (Temporary1 = chckRange(addInt(xl_1342177435, (y_1342177430).length), 0, 2147483647), Temporary1)) { for (var i = x_1342177429[x_1342177429_Idx].length ; i < Temporary1 ; ++i) x_1342177429[x_1342177429_Idx].push({Field0: [], Field1: 0}); }
               else { x_1342177429[x_1342177429_Idx].length = Temporary1; };
    Label2: {
      var i_1342177451 = 0;
      var colontmp__570425807 = 0;
      colontmp__570425807 = (y_1342177430).length - 1;
      var res_570425808 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570425808 <= colontmp__570425807)) break Label4;
            i_1342177451 = res_570425808;
            x_1342177429[x_1342177429_Idx][chckIndx(addInt(xl_1342177435, i_1342177451), 0, (x_1342177429[x_1342177429_Idx]).length - 1)] = nimCopy(x_1342177429[x_1342177429_Idx][chckIndx(addInt(xl_1342177435, i_1342177451), 0, (x_1342177429[x_1342177429_Idx]).length - 1)], y_1342177430[chckIndx(i_1342177451, 0, (y_1342177430).length - 1)], NTI1342177341);
            res_570425808 = addInt(res_570425808, 1);
          }
      };
    };

  
}

function parseRh_1342177365(value_1342177366) {
  var result_1342177367 = [{Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}, {Field0: [], Field1: 0}];

    switch (value_1342177366) {
    case 48:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1342177364);
      break;
    case 49:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1342177364);
      break;
    case 50:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 1}], NTI1342177364);
      break;
    case 51:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 52:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 53:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 0}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 54:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 1}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 55:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 0}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 56:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 1}, {Field0: [99], Field1: 0}, {Field0: [69], Field1: 1}, {Field0: [101], Field1: 0}], NTI1342177364);
      break;
    case 57:
      result_1342177367 = nimCopy(result_1342177367, [{Field0: [67], Field1: 2}, {Field0: [99], Field1: 2}, {Field0: [69], Field1: 2}, {Field0: [101], Field1: 2}], NTI1342177364);
      break;
    }

  return result_1342177367;

}

function parseAntigen_1342177417(spec_1342177418) {
  var result_1342177419 = [[]];

    var agIndex_1342177424 = 0;
    Label1: {
      var i_1342177425 = 0;
      var a_1342177426 = 0;
      var i_570425803 = 0;
      var L_570425804 = (spec_1342177418.aaaaaaaaaaaaaaaa).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425803 < L_570425804)) break Label3;
            i_1342177425 = i_570425803;
            a_1342177426 = spec_1342177418.aaaaaaaaaaaaaaaa[chckIndx(i_570425803, 0, (spec_1342177418.aaaaaaaaaaaaaaaa).length - 1)];
            Label4: {
              if ((i_1342177425 == 0)) {
              add_1342177427(result_1342177419, 0, parseRh_1342177365(chckRange(a_1342177426, 48, 57)));
              break Label4;
              }
              
              result_1342177419[0].push({Field0: nimCopy(null, antigens_1342177362[chckIndx(agIndex_1342177424, 0, (antigens_1342177362).length - 1)], NTI33554449), Field1: phenoOne_1342177363[chckIndx(a_1342177426, 48, (phenoOne_1342177363).length + (48) - 1) - (48)]});;
              agIndex_1342177424 = addInt(agIndex_1342177424, 1);
              result_1342177419[0].push({Field0: nimCopy(null, antigens_1342177362[chckIndx(agIndex_1342177424, 0, (antigens_1342177362).length - 1)], NTI33554449), Field1: phenoTwo_1342177364[chckIndx(a_1342177426, 48, (phenoTwo_1342177364).length + (48) - 1) - (48)]});;
              agIndex_1342177424 = addInt(agIndex_1342177424, 1);
            };
            i_570425803 = addInt(i_570425803, 1);
            if (!(((spec_1342177418.aaaaaaaaaaaaaaaa).length == L_570425804))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(198, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1342177419[0];

}

function parseNegativeAntigen_1342177486(spec_1342177487) {
  var result_1342177488 = [];

++excHandler;
    try {
    var numeric_1342177489 = nsuParseInt(spec_1342177487.ii);
    if ((99 < numeric_1342177489)) {
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1342177487.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    result_1342177488 = nimCopy(null, antigenNegativ_1342177485[chckIndx(numeric_1342177489, 0, (antigenNegativ_1342177485).length - 1)], NTI33554449);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: ([111,107,195,164,110,100,32,107,111,100,32,102,195,182,114,32,97,110,116,105,103,101,110,58,32] || []).concat(spec_1342177487.ii || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    lastJSError = prevJSError;
    } finally {
    }

  return result_1342177488;

}

function toHtml_1342177492(spec_1342177493) {
  var result_1342177494 = [];

    var pheno_1342177495 = parseAntigen_1342177417(spec_1342177493);
    var phenotypeRows_1342177496 = [];
    Label1: {
      var pair_1342177518 = {Field0: [], Field1: 0};
      var i_570425798 = 0;
      var L_570425799 = (pheno_1342177495).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425798 < L_570425799)) break Label3;
            pair_1342177518 = pheno_1342177495[chckIndx(i_570425798, 0, (pheno_1342177495).length - 1)];
            phenotypeRows_1342177496.push.apply(phenotypeRows_1342177496, ([60,116,114,62,60,116,100,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,108,101,102,116,58,32,50,101,109,59,34,62] || []).concat(pair_1342177518.Field0 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(pair_1342177518.Field1, NTI1342177340) || [],[60,47,116,100,62,60,47,116,114,62] || []));;
            i_570425798 = addInt(i_570425798, 1);
            if (!(((pheno_1342177495).length == L_570425799))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var head_1342177522 = [60,116,104,101,97,100,62,60,116,114,62,60,116,104,62,69,108,101,109,101,110,116,60,47,116,104,62,60,116,104,62,86,195,164,114,100,101,60,47,116,104,62,60,47,116,114,62,60,47,116,104,101,97,100,62];
    var body_1342177523 = ([60,116,98,111,100,121,62,60,116,114,62,60,116,100,62,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,60,47,116,100,62,60,116,100,62] || []).concat(spec_1342177493.aaaaaaaaaaaaaaaa || [],[60,47,116,100,62,60,47,116,114,62] || [],phenotypeRows_1342177496 || [],[60,116,114,62,60,116,100,62,105,105,60,47,116,100,62,60,116,100,62] || [],spec_1342177493.ii || [],makeNimstrLit("</td></tr><tr><td style=\"padding-left: 2em;\">Negativ f\xC3\xB6r</td><td>") || [],parseNegativeAntigen_1342177486(spec_1342177493) || [],[60,47,116,100,62,60,47,116,114,62,60,47,116,98,111,100,121,62] || []);
    result_1342177494.push.apply(result_1342177494, ([60,116,97,98,108,101,62] || []).concat(head_1342177522 || [],body_1342177523 || [],[60,47,116,97,98,108,101,62] || []));;

  return result_1342177494;

}

function verifySpecialTestingAntigensFinnish_1342177288(code_1342177289) {
    if (!(((code_1342177289).length == 20))) {
    raiseException({message: ([70,101,108,32,108,195,164,110,103,100,58,32,108,195,164,110,103,100,32,50,48,32,102,195,182,114,118,195,164,110,116,97,100,101,115,32,109,101,110,32,101,110,100,97,115,116,32] || []).concat(HEX24_385875976((code_1342177289).length) || [],[32,116,101,99,107,101,110,32,102,97,110,110,115,32,105,32,107,111,100,101,110] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  
}

function parseSpecialTestingAntigensFinnish_1342177291(code_1342177292) {
  var result_1342177293 = ({dataIdentifier: [], aaaaaaaaaaaaaaaa: [], ii: []});

    verifySpecialTestingAntigensFinnish_1342177288(code_1342177292);
    result_1342177293.dataIdentifier = nimCopy(null, HEX5BHEX5D_704644351(code_1342177292, HEX2EHEX2E_1040187440(0, 1)), NTI33554449);
    result_1342177293.aaaaaaaaaaaaaaaa = nimCopy(null, HEX5BHEX5D_704644351(code_1342177292, HEX2EHEX2E_1040187440(2, 17)), NTI33554449);
    result_1342177293.ii = nimCopy(null, HEX5BHEX5D_704644351(code_1342177292, HEX2EHEX2E_1040187440(18, 19)), NTI33554449);

  return result_1342177293;

}

function parseDataStructure_570425436(dataStructureType_570425437, code_570425438) {
  var result_570425439 = [];

    switch (dataStructureType_570425437) {
    case 0:
      result_570425439 = nimCopy(null, toHtml_1124073585(parseDonationIdentificationNumber_1124073485(code_570425438)), NTI33554449);
      break;
    case 1:
      result_570425439 = nimCopy(null, toHtml_1157628231(parseBloodGroupsABORhD_1157627916(code_570425438)), NTI33554449);
      break;
    case 2:
      result_570425439 = nimCopy(null, toHtml_1174405400(parseProductCode_1174405131(code_570425438)), NTI33554449);
      break;
    case 3:
      result_570425439 = nimCopy(null, toHtml_1191182422(parseExpirationDate_1191182347(code_570425438)), NTI33554449);
      break;
    case 4:
      result_570425439 = nimCopy(null, toHtml_1207959676(parseExpirationDateAndTime_1207959565(code_570425438)), NTI33554449);
      break;
    case 5:
      result_570425439 = nimCopy(null, toHtml_1224736854(parseCollectionDate_1224736779(code_570425438)), NTI33554449);
      break;
    case 6:
      result_570425439 = nimCopy(null, toHtml_1241514108(parseCollectionDateAndTime_1241513997(code_570425438)), NTI33554449);
      break;
    case 7:
      result_570425439 = nimCopy(null, toHtml_1258291286(parseProductionDate_1258291211(code_570425438)), NTI33554449);
      break;
    case 8:
      result_570425439 = nimCopy(null, toHtml_1275068540(parseProductionDateAndTime_1275068429(code_570425438)), NTI33554449);
      break;
    case 9:
      result_570425439 = nimCopy(null, toHtml_1291845680(parseSpecialTestingGeneral_1291845641(code_570425438)), NTI33554449);
      break;
    case 10:
      result_570425439 = nimCopy(null, toHtml_1308623092(parseSpecialTestingAntigensRetired_1308622859(code_570425438)), NTI33554449);
      break;
    case 11:
      result_570425439 = nimCopy(null, toHtml_1325400292(parseSpecialTestingAntigensGeneral_1325400075(code_570425438)), NTI33554449);
      break;
    case 12:
      result_570425439 = nimCopy(null, toHtml_1342177492(parseSpecialTestingAntigensFinnish_1342177291(code_570425438)), NTI33554449);
      break;
    default: 
      result_570425439 = nimCopy(null, ([84,111,108,107,110,105,110,103,32,195,164,114,32,105,110,116,101,32,105,109,112,108,101,109,101,110,116,101,114,97,100,32,102,195,182,114,32,100,97,116,97,116,121,112,101,110,58,32] || []).concat(reprEnum(dataStructureType_570425437, NTI570425347) || []), NTI33554449);
      break;
    }

  return result_570425439;

}

function nsuFindChar(s_704644756, sub_704644757, start_704644758, last_704644759) {
    var Temporary1;

  var result_704644760 = 0;

  BeforeRet: {
    result_704644760 = (-1);
    if ((last_704644759 < 0)) {
    Temporary1 = (s_704644756).length - 1;
    }
    else {
    Temporary1 = last_704644759;
    }
    
    var last_704644761 = Temporary1;
    Label2: {
      var iHEX60gensym176_704644775 = 0;
      var colontmp__570425817 = 0;
      colontmp__570425817 = start_704644758;
      var res_570425818 = colontmp__570425817;
      Label3: {
          Label4: while (true) {
          if (!(res_570425818 <= last_704644761)) break Label4;
            iHEX60gensym176_704644775 = res_570425818;
            if ((s_704644756[chckIndx(iHEX60gensym176_704644775, 0, (s_704644756).length - 1)] == sub_704644757)) {
            result_704644760 = iHEX60gensym176_704644775;
            break BeforeRet;
            }
            
            res_570425818 = addInt(res_570425818, 1);
          }
      };
    };
  };

  return result_704644760;

}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

    var first_33558084 = nimMax(first_33558081, 0);
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558090 = 0;
      var colontmp__1124073611 = 0;
      colontmp__1124073611 = subInt(L_33558085, 1);
      var res_1124073612 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1124073612 <= colontmp__1124073611)) break Label3;
            i_33558090 = res_1124073612;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            res_1124073612 = addInt(res_1124073612, 1);
          }
      };
    };

  return result_33558083;

}

function substr_33558091(s_33558092, first_33558093) {
  var result_33558094 = [];

    result_33558094 = nimCopy(null, substr_33558079(s_33558092, first_33558093, (s_33558092).length - 1), NTI33554449);

  return result_33558094;

}

function fill_704644694(a_704644696, value_704644697) {
    var xHEX60gensym172_704644703 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_704644703 <= (a_704644696).length - 1)) break Label2;
          a_704644696[chckIndx(xHEX60gensym172_704644703, 0, (a_704644696).length - 1)] = value_704644697;
          xHEX60gensym172_704644703 = addInt(xHEX60gensym172_704644703, 1);
        }
    };

  
}

function nsuInitSkipTable(a_704644691, sub_704644692) {
    var m_704644693 = (sub_704644692).length;
    fill_704644694(a_704644691, m_704644693);
    Label1: {
      var i_704644713 = 0;
      var colontmp__570425821 = 0;
      colontmp__570425821 = subInt(m_704644693, 1);
      var i_570425822 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425822 < colontmp__570425821)) break Label3;
            i_704644713 = i_570425822;
            a_704644691[chckIndx(sub_704644692[chckIndx(i_704644713, 0, (sub_704644692).length - 1)], 0, (a_704644691).length - 1)] = subInt(subInt(m_704644693, 1), i_704644713);
            i_570425822 = addInt(i_570425822, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_704644731) {
  var result_704644732 = [new Int32Array(256)];

    nsuInitSkipTable(result_704644732[0], sub_704644731);

  return result_704644732[0];

}

function nsuFindStrA(a_704644734, s_704644735, sub_704644736, start_704644737, last_704644738) {
    var Temporary1;

  var result_704644739 = 0;

  BeforeRet: {
    if ((last_704644738 < 0)) {
    Temporary1 = (s_704644735).length - 1;
    }
    else {
    Temporary1 = last_704644738;
    }
    
    var last_704644740 = Temporary1;
    var subLast_704644741 = subInt((sub_704644736).length, 1);
    if ((subLast_704644741 == (-1))) {
    result_704644739 = start_704644737;
    break BeforeRet;
    }
    
    result_704644739 = (-1);
    var skip_704644742 = start_704644737;
    Label2: {
        Label3: while (true) {
        if (!(subLast_704644741 <= subInt(last_704644740, skip_704644742))) break Label3;
          var i_704644743 = subLast_704644741;
          Label4: {
              Label5: while (true) {
              if (!(s_704644735[chckIndx(addInt(skip_704644742, i_704644743), 0, (s_704644735).length - 1)] == sub_704644736[chckIndx(i_704644743, 0, (sub_704644736).length - 1)])) break Label5;
                if ((i_704644743 == 0)) {
                result_704644739 = skip_704644742;
                break BeforeRet;
                }
                
                i_704644743 = subInt(i_704644743, 1);
              }
          };
          skip_704644742 = addInt(skip_704644742, a_704644734[chckIndx(s_704644735[chckIndx(addInt(skip_704644742, subLast_704644741), 0, (s_704644735).length - 1)], 0, (a_704644734).length - 1)]);
        }
    };
  };

  return result_704644739;

}

function nsuReplaceStr(s_704644944, sub_704644945, by_704644946) {
  var result_704644947 = [];

    result_704644947 = nimCopy(null, [], NTI33554449);
    var subLen_704644948 = (sub_704644945).length;
    if ((subLen_704644948 == 0)) {
    result_704644947 = nimCopy(null, s_704644944, NTI33554449);
    }
    else {
    if ((subLen_704644948 == 1)) {
    var c_704644949 = sub_704644945[chckIndx(0, 0, (sub_704644945).length - 1)];
    var last_704644950 = (s_704644944).length - 1;
    var i_704644951 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_704644952 = nsuFindChar(s_704644944, c_704644949, chckRange(i_704644951, 0, 2147483647), last_704644950);
          if ((j_704644952 < 0)) {
          break Label1;
          }
          
          result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644951, subInt(j_704644952, 1)));;
          result_704644947.push.apply(result_704644947, by_704644946);;
          i_704644951 = addInt(j_704644952, subLen_704644948);
        }
    };
    result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644951));;
    }
    else {
      var a_704644953 = nsuInitNewSkipTable(sub_704644945);
      var last_704644954 = (s_704644944).length - 1;
      var i_704644955 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_704644956 = nsuFindStrA(a_704644953, s_704644944, sub_704644945, chckRange(i_704644955, 0, 2147483647), last_704644954);
            if ((j_704644956 < 0)) {
            break Label3;
            }
            
            result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644955, subInt(j_704644956, 1)));;
            result_704644947.push.apply(result_704644947, by_704644946);;
            i_704644955 = addInt(j_704644956, subLen_704644948);
          }
      };
      result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644955));;
    }
    }

  return result_704644947;

}

function getCurrentExceptionMsg_33556463() {
  var result_33556464 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556443()) {
    result_33556464 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556469 = null;
            if (lastJSError.message !== undefined) {
        msg_33556469 = lastJSError.message;
      }
      
      if (!((msg_33556469 == null))) {
      result_33556464 = nimCopy(null, cstrToNimstr(msg_33556469), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556464 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556464;

}

function interpretCode() {
    document.getElementById("isbt128out").innerHTML = "";
++excHandler;
    try {
    var code_570425693 = cstrToNimstr(document.getElementById("code").value);
    var dataStructure_570425694 = classifyDataStructure_570425395(code_570425693);
    var html_570425695 = parseDataStructure_570425436(dataStructure_570425694, code_570425693);
    var cleanCode_570425696 = nsuReplaceStr(code_570425693, [60], [38,108,116,59]);
    var name_570425697 = nimCopy(null, dataStructureNames_570425394[chckIndx(dataStructure_570425694, 0, (dataStructureNames_570425394).length - 1)], NTI33554449);
    var contents_570425698 = ([60,104,50,62] || []).concat(name_570425697 || [],[60,47,104,50,62,60,112,62] || [],cleanCode_570425696 || [],[60,47,112,62] || [],html_570425695 || []);
    var toHist_570425699 = toJSStr(([60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62] || []).concat(cleanCode_570425696 || [],[32,38,110,100,97,115,104,59,32] || [],name_570425697 || [],[60,47,115,117,109,109,97,114,121,62] || [],html_570425695 || [],[60,47,100,101,116,97,105,108,115,62] || []));
    document.getElementById("isbt128out").innerHTML = toJSStr(contents_570425698);
    document.getElementById("isbt128history").insertAdjacentHTML("afterbegin", toHist_570425699);
    document.getElementById("code").value = "";
    document.getElementById("code").focus();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var s_570425700 = ([70,101,108,32,118,105,100,32,116,111,108,107,110,105,110,103,58,32] || []).concat(getCurrentExceptionMsg_33556463() || []);
    document.getElementById("isbt128out").innerHTML = toJSStr(s_570425700);
    lastJSError = prevJSError;
    } finally {
    }

  
}
