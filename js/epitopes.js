/* Generated by the Nim Compiler v1.0.4 */
/*   (c) 2019 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI205476 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI228016 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI228015 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI228154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI228151 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI228148 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI222473 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI222470 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI222467 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI222480 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI205522 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI44006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI221017 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI220044 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI221015 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI221026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI221019 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI89017 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI228030 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI228027 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI228024 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI47408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47514 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI44016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI44040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI44042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI47508 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI47426 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47430 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47452 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI47454 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI47454 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47454.node = NNI47454;
var NNI47452 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47452.node = NNI47452;
var NNI47430 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47430.node = NNI47430;
NTI47508.base = NTI47426;
NTI47514.base = NTI47426;
var NNI47426 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI47508, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI44042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI44040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI44040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI44016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI47514, name: "up", sons: null}]};
NTI47426.node = NNI47426;
var NNI47408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI47408.node = NNI47408;
NTI47426.base = NTI47408;
NTI47430.base = NTI47426;
NTI47452.base = NTI47430;
NTI47454.base = NTI47452;
var NNI221015 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI221015, name: "epVerified", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI221015, name: "epVerifiedPair", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI221015, name: "epOther", len: 0, sons: null}}};
NTI221015.node = NNI221015;
var NNI220044 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI220044, name: "ABC", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI220044, name: "DRB", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI220044, name: "DQA1", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI220044, name: "DQB1", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI220044, name: "DPA1", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI220044, name: "DPB1", len: 0, sons: null}}};
NTI220044.node = NNI220044;
var NNI221017 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI221017, name: "stBoth", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI221017, name: "stAlgorithm", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI221017, name: "stTable", len: 0, sons: null}}};
NTI221017.node = NNI221017;
var NNI221026 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}, 
{kind: 1, offset: "evidence", len: 0, typ: NTI221015, name: "evidence", sons: null}, 
{kind: 1, offset: "locus", len: 0, typ: NTI220044, name: "locus", sons: null}, 
{kind: 1, offset: "status", len: 0, typ: NTI221017, name: "status", sons: null}]};
NTI221026.node = NNI221026;
NTI221019.base = NTI221026;
var NNI228030 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI89017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI221019, name: "Field1", sons: null}]};
NTI228030.node = NNI228030;
NTI228027.base = NTI228030;
var NNI228024 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI228027, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI228024.node = NNI228024;
NTI205522.base = NTI44040;
var NNI222473 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI89017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI221019, name: "Field2", sons: null}]};
NTI222473.node = NNI222473;
NTI222470.base = NTI222473;
var NNI222467 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI222470, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI222467.node = NNI222467;
NTI222480.base = NTI222467;
var NNI228016 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI44040, name: "name", sons: null}, 
{kind: 1, offset: "eplets", len: 0, typ: NTI228024, name: "eplets", sons: null}, 
{kind: 1, offset: "locus", len: 0, typ: NTI220044, name: "locus", sons: null}]};
NTI228016.node = NNI228016;
NTI228015.base = NTI228016;
var NNI228154 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI89017, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI44040, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI228015, name: "Field2", sons: null}]};
NTI228154.node = NNI228154;
NTI228151.base = NTI228154;
var NNI228148 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI228151, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI44006, name: "counter", sons: null}]};
NTI228148.node = NNI228148;
NTI205476.base = NTI44040;

function makeNimstrLit(c_67270) {
		  var ln = c_67270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_67270.charCodeAt(i);
  }
  return result;
  

	
}
						var loci_240041 = [makeNimstrLit("A"), makeNimstrLit("B"), makeNimstrLit("C"), makeNimstrLit("DRB1"), makeNimstrLit("DRB345"), makeNimstrLit("DQA1"), makeNimstrLit("DQB1"), makeNimstrLit("DPA1"), makeNimstrLit("DPB1")];
										var fields_240044 = [makeNimstrLit("_1"), makeNimstrLit("_2")];

function cstrToNimstr(c_67287) {
		  var ln = c_67287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_67287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_67287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_67304) {
										var Tmp5;
						var Tmp7;

	var result_67305 = null;

		var res_67363 = new_seq_67336((s_67304 != null ? s_67304.length : 0));
		var i_67365 = 0;
		var j_67367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_67365 < (s_67304 != null ? s_67304.length : 0))) break L2;
					var c_67368 = s_67304[i_67365];
					if ((c_67368 < 128)) {
					res_67363[j_67367] = String.fromCharCode(c_67368);
					i_67365 += 1;
					}
					else {
						var helper_67391 = new_seq_67336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_67392 = c_67368.toString(16);
									if (((code_67392 != null ? code_67392.length : 0) == 1)) {
									if (helper_67391 != null) { helper_67391.push("%0"); } else { helper_67391 = ["%0"]; };
									}
									else {
									if (helper_67391 != null) { helper_67391.push("%"); } else { helper_67391 = ["%"]; };
									}
									
									if (helper_67391 != null) { helper_67391.push(code_67392); } else { helper_67391 = [code_67392]; };
									i_67365 += 1;
										if (((s_67304 != null ? s_67304.length : 0) <= i_67365)) Tmp5 = true; else {											Tmp5 = (s_67304[i_67365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_67368 = s_67304[i_67365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_67363[j_67367] = decodeURIComponent(helper_67391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_67363[j_67367] = helper_67391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_67367 += 1;
				}
		} while(false);
		if (res_67363 === null) res_67363 = [];
               if (res_67363.length < j_67367) { for (var i=res_67363.length;i<j_67367;++i) res_67363.push(null); }
               else { res_67363.length = j_67367; };
		result_67305 = res_67363.join("");

	return result_67305;

}

function eqStrings(a_67641, b_67642) {
		    if (a_67641 == b_67642) return true;
    if (a_67641 === null && b_67642.length == 0) return true;
    if (b_67642 === null && a_67641.length == 0) return true;
    if ((!a_67641) || (!b_67642)) return false;
    var alen = a_67641.length;
    if (alen != b_67642.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_67641[i] != b_67642[i]) return false;
    return true;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_68827, src_68828, ti_68829) {
	var result_69019 = null;

		switch (ti_68829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_68801(ti_68829))) {
			result_69019 = src_68828;
			}
			else {
				result_69019 = [src_68828[0], src_68828[1]];
			}
			
			break;
		case 19:
			      if (dest_68827 === null || dest_68827 === undefined) {
        dest_68827 = {};
      }
      else {
        for (var key in dest_68827) { delete dest_68827[key]; }
      }
      for (var key in src_68828) { dest_68827[key] = src_68828[key]; }
      result_69019 = dest_68827;
    
			break;
		case 18:
		case 17:
			if (!((ti_68829.base == null))) {
			result_69019 = nimCopy(dest_68827, src_68828, ti_68829.base);
			}
			else {
			if ((ti_68829.kind == 17)) {
			result_69019 = (dest_68827 === null || dest_68827 === undefined) ? {m_type: ti_68829} : dest_68827;
			}
			else {
				result_69019 = (dest_68827 === null || dest_68827 === undefined) ? {} : dest_68827;
			}
			}
			nimCopyAux(result_69019, src_68828, ti_68829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_68828 === null) {
        result_69019 = null;
      }
      else {
        if (dest_68827 === null || dest_68827 === undefined) {
          dest_68827 = new Array(src_68828.length);
        }
        else {
          dest_68827.length = src_68828.length;
        }
        result_69019 = dest_68827;
        for (var i = 0; i < src_68828.length; ++i) {
          result_69019[i] = nimCopy(result_69019[i], src_68828[i], ti_68829.base);
        }
      }
    
			break;
		case 28:
			      if (src_68828 !== null) {
        result_69019 = src_68828.slice(0);
      }
    
			break;
		default: 
			result_69019 = src_68828;
			break;
		}

	return result_69019;

}

function raiseException(e_65618, ename_65619) {
		e_65618.name = ename_65619;
		if ((excHandler == 0)) {
		unhandledException(e_65618);
		}
		
		throw e_65618;

	
}

function nimMax(a_68221, b_68222) {
		var Tmp1;

	var result_68223 = 0;

	BeforeRet: do {
		if ((b_68222 <= a_68221)) {
		Tmp1 = a_68221;
		}
		else {
		Tmp1 = b_68222;
		}
		
		result_68223 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68223;

}

function cmpStrings(a_67605, b_67606) {
		    if (a_67605 == b_67606) return 0;
    if (!a_67605) return -1;
    if (!b_67606) return 1;
    for (var i = 0; i < a_67605.length && i < b_67606.length; i++) {
      var result = a_67605[i] - b_67606[i];
      if (result != 0) return result;
    }
    return a_67605.length - b_67606.length;
  

	
}

function reprEnum(e_69880, typ_69881) {
	var result_69882 = null;

		if (!(is_undefined_69883(typ_69881.node.sons[e_69880]))) {
		result_69882 = nimCopy(null, makeNimstrLit(typ_69881.node.sons[e_69880].name), NTI44040);
		}
		else {
			result_69882 = nimCopy(null, (cstrToNimstr((e_69880)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI44040);
		}
		

	return result_69882;

}

function mnewString(len_67463) {
		    return new Array(len_67463);
  

	
}

function rawEcho() {
		      var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

	
}
var ConstSet2 = setConstr(13, 10);

function nimMin(a_68203, b_68204) {
		var Tmp1;

	var result_68205 = 0;

	BeforeRet: do {
		if ((a_68203 <= b_68204)) {
		Tmp1 = a_68203;
		}
		else {
		Tmp1 = b_68204;
		}
		
		result_68205 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_68205;

}
var ConstSet3 = setConstr(32, 9, 11, 13, 10, 12);
		var expected_header_221581 = [makeNimstrLit("eplet"), makeNimstrLit("evidence"), makeNimstrLit("locus"), makeNimstrLit("status")];
var ConstSet4 = setConstr([65, 90]);
var ConstSet5 = setConstr(13, 10);
var ConstSet6 = setConstr(32, 9, 11, 13, 10, 12);
		var expected_header_228102 = [makeNimstrLit("allele"), makeNimstrLit("eplet"), makeNimstrLit("locus")];
						var group_240038 = [makeNimstrLit("rec"), makeNimstrLit("don")];
var nim_program_result = 0;
var global_raise_hook_62618 = [null];
var local_raise_hook_62623 = [null];
var out_of_mem_hook_62626 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var object_id_89237 = [0];
var eplets_table_240024 = [[{data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}]];
var alleles_table_240032 = [{data: null, counter: 0}];

function new_seq_67336(len_67339) {
	var result_67341 = null;

		result_67341 = new Array(len_67339); for (var i=0;i<len_67339;++i) {result_67341[i]=null;}
	return result_67341;

}

function imul_89768(a_89770, b_89771) {
	var result_89772 = 0;

		var mask_89773 = 65535;
		var a_hi_89786 = (((a_89770 >>> 0) >>> 16) & mask_89773);
		var a_lo_89792 = (a_89770 & mask_89773);
		var b_hi_89805 = (((b_89771 >>> 0) >>> 16) & mask_89773);
		var b_lo_89811 = (b_89771 & mask_89773);
		result_89772 = ((((a_lo_89792 * b_lo_89811) >>> 0) + (((((a_hi_89786 * b_lo_89811) >>> 0) + ((a_lo_89792 * b_hi_89805) >>> 0)) >>> 0) << 16)) >>> 0);

	return result_89772;

}

function rotl32_90001(x_90003, r_90004) {
	var result_90005 = 0;

		result_90005 = ((x_90003 << r_90004) | ((x_90003 >>> 0) >>> (32 - r_90004)));

	return result_90005;

}

function murmur_hash_90037(x_90040) {
	var result_90041 = 0;

	BeforeRet: do {
		var size_90051 = (x_90040 != null ? x_90040.length : 0);
		var step_size_90053 = 4;
		var n_90054 = Math.trunc(size_90051 / step_size_90053);
		var h1_90055 = 0;
		var i_90057 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_90057 < (n_90054 * step_size_90053))) break L2;
					var k1_90058 = 0;
					var j_90059 = step_size_90053;
					L3: do {
							L4: while (true) {
							if (!(0 < j_90059)) break L4;
								j_90059 -= 1;
								k1_90058 = ((k1_90058 << 8) | x_90040[(i_90057 + j_90059)]);
							}
					} while(false);
					i_90057 += step_size_90053;
					k1_90058 = imul_89768(k1_90058, 3432918353);
					k1_90058 = rotl32_90001(k1_90058, 15);
					k1_90058 = imul_89768(k1_90058, 461845907);
					h1_90055 = (h1_90055 ^ k1_90058);
					h1_90055 = rotl32_90001(h1_90055, 13);
					h1_90055 = ((((h1_90055 * 5) >>> 0) + 3864292196) >>> 0);
				}
		} while(false);
		var k1_90223 = 0;
		var rem_90224 = Math.trunc(size_90051 % step_size_90053);
		L5: do {
				L6: while (true) {
				if (!(0 < rem_90224)) break L6;
					rem_90224 -= 1;
					k1_90223 = ((k1_90223 << 8) | x_90040[(i_90057 + rem_90224)]);
				}
		} while(false);
		k1_90223 = imul_89768(k1_90223, 3432918353);
		k1_90223 = rotl32_90001(k1_90223, 15);
		k1_90223 = imul_89768(k1_90223, 461845907);
		h1_90055 = (h1_90055 ^ k1_90223);
		h1_90055 = (h1_90055 ^ size_90051);
		h1_90055 = (h1_90055 ^ ((h1_90055 >>> 0) >>> 16));
		h1_90055 = imul_89768(h1_90055, 2246822507);
		h1_90055 = (h1_90055 ^ ((h1_90055 >>> 0) >>> 13));
		h1_90055 = imul_89768(h1_90055, 3266489909);
		h1_90055 = (h1_90055 ^ ((h1_90055 >>> 0) >>> 16));
		result_90041 = (h1_90055|0);
		break BeforeRet;
	} while (false);

	return result_90041;

}

function hash_90814(x_90816) {
	var result_90817 = 0;

		result_90817 = murmur_hash_90037((x_90816.slice(0, (x_90816 != null ? (x_90816.length-1) : -1)+1)));

	return result_90817;

}

function is_filled_111018(hcode_111020) {
	var result_111021 = false;

		result_111021 = !((hcode_111020 == 0));

	return result_111021;

}

function next_try_111035(h_111037, max_hash_111038) {
	var result_111039 = 0;

		result_111039 = ((h_111037 + 1) & max_hash_111038);

	return result_111039;

}

function raw_get_228979(t_228983, key_228984, hc_228985, hc_228985_Idx) {
						var Tmp3;

	var result_228986 = 0;

	BeforeRet: do {
		hc_228985[hc_228985_Idx] = hash_90814(key_228984);
		if ((hc_228985[hc_228985_Idx] == 0)) {
		hc_228985[hc_228985_Idx] = 314159265;
		}
		
		if (((t_228983.data != null ? t_228983.data.length : 0) == 0)) {
		result_228986 = -1;
		break BeforeRet;
		}
		
		var h_229159 = (hc_228985[hc_228985_Idx] & (t_228983.data != null ? (t_228983.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_111018(t_228983.data[h_229159].Field0)) break L2;
						if (!(t_228983.data[h_229159].Field0 == hc_228985[hc_228985_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_228983.data[h_229159].Field1, key_228984);						}					if (Tmp3) {
					result_228986 = h_229159;
					break BeforeRet;
					}
					
					h_229159 = next_try_111035(h_229159, (t_228983.data != null ? (t_228983.data.length-1) : -1));
				}
		} while(false);
		result_228986 = (-1 - h_229159);
	} while (false);

	return result_228986;

}

function is_fat_pointer_68801(ti_68803) {
	var result_68804 = false;

	BeforeRet: do {
		result_68804 = !((ConstSet1[ti_68803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_68804;

}

function nimCopyAux(dest_68832, src_68833, n_68835) {
		switch (n_68835.kind) {
		case 0:
			break;
		case 1:
			      dest_68832[n_68835.offset] = nimCopy(dest_68832[n_68835.offset], src_68833[n_68835.offset], n_68835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_68835.sons.length; i++) {
      nimCopyAux(dest_68832, src_68833, n_68835.sons[i]);
    }
    
			break;
		case 3:
			      dest_68832[n_68835.offset] = nimCopy(dest_68832[n_68835.offset], src_68833[n_68835.offset], n_68835.typ);
      for (var i = 0; i < n_68835.sons.length; ++i) {
        nimCopyAux(dest_68832, src_68833, n_68835.sons[i][1]);
      }
    
			break;
		}

	
}

function add_62638(x_62641, x_62641_Idx, y_62642) {
		      if (x_62641[x_62641_Idx] === null) { x_62641[x_62641_Idx] = []; }
      var off = x_62641[x_62641_Idx].length;
      x_62641[x_62641_Idx].length += y_62642.length;
      for (var i = 0; i < y_62642.length; ++i) {
        x_62641[x_62641_Idx][off+i] = y_62642.charCodeAt(i);
      }
    

	
}

function unhandledException(e_65529) {
		var buf_65530 = [[]];
		if (!(((e_65529.message != null ? e_65529.message.length : 0) == 0))) {
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_65530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(e_65529.message); } else { buf_65530[0] = e_65529.message.slice(); };
		}
		else {
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_65530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit(" [")); } else { buf_65530[0] = makeNimstrLit(" ["); };
		add_62638(buf_65530, 0, e_65529.name);
		if (buf_65530[0] != null) { buf_65530[0] = (buf_65530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_65530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_65601 = toJSStr(buf_65530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_65601);
  }
  else {
    throw cbuf_65601;
  }
  

	
}

function HEX5BHEX5D_233723(t_233729, key_233730) {
	var result_233732 = null;
	var result_233732_Idx = 0;

		var hcHEX60gensym111565_233733 = [0];
		var indexHEX60gensym111566_233742 = raw_get_228979(t_233729, key_233730, hcHEX60gensym111565_233733, 0);
		if ((0 <= indexHEX60gensym111566_233742)) {
		result_233732 = t_233729.data[indexHEX60gensym111566_233742]; result_233732_Idx = "Field2";
		}
		else {
			var eHEX60gensym234003_234203 = null;
			eHEX60gensym234003_234203 = {m_type: NTI47454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			eHEX60gensym234003_234203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_233730 || []), NTI44040);
			eHEX60gensym234003_234203.parent = null;
			raiseException(eHEX60gensym234003_234203, "KeyError");
		}
		

	return [result_233732, result_233732_Idx];

}

function get_alleles_241276(ind_241278) {
										var Tmp7;

	var result_241280 = null;

		L1: do {
			var loc_241288 = null;
			var i_244852 = 0;
			if ((i_244852 <= 8)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						loc_241288 = loci_240041[i_244852];
						L4: do {
							var field_241296 = null;
							var i_244846 = 0;
							if ((i_244846 <= 1)) {
							L5: do {
									L6: while (true) {
									if (!true) break L6;
										field_241296 = fields_240044[i_244846];
										var id_241297 = (ind_241278 || []).concat(loc_241288 || [],field_241296 || []);
										var allele_str_241298 = cstrToNimstr(document.getElementById(toJSStr(id_241297)).value);
										if (!(eqStrings(allele_str_241298, []))) {
										if (result_241280 != null) { result_241280.push((Tmp7 = HEX5BHEX5D_233723(alleles_table_240032[0], allele_str_241298), Tmp7)[0][Tmp7[1]]); } else { result_241280 = [(Tmp7 = HEX5BHEX5D_233723(alleles_table_240032[0], allele_str_241298), Tmp7)[0][Tmp7[1]]]; };
										}
										
										if ((1 <= i_244846)) {
										break L5;
										}
										
										i_244846 += 1;
									}
							} while(false);
							}
							
						} while(false);
						if ((8 <= i_244852)) {
						break L2;
						}
						
						i_244852 += 1;
					}
			} while(false);
			}
			
		} while(false);

	return result_241280;

}

function is_filled_115418(hcode_115420) {
	var result_115421 = false;

		result_115421 = !((hcode_115420 == 0));

	return result_115421;

}

function HEX21HEX26_89031(h_89033, val_89034) {
	var result_89035 = 0;

		var h_89036 = (h_89033 >>> 0);
		var val_89037 = (val_89034 >>> 0);
		var res_89043 = ((h_89036 + val_89037) >>> 0);
		res_89043 = ((res_89043 + (res_89043 << 10)) >>> 0);
		res_89043 = (res_89043 ^ ((res_89043 >>> 0) >>> 6));
		result_89035 = (res_89043|0);

	return result_89035;

}

function hash_221486(x_221489) {
	var result_221490 = 0;

		result_221490 = x_221489;

	return result_221490;

}

function hash_221508(x_221511) {
	var result_221512 = 0;

		result_221512 = x_221511;

	return result_221512;

}

function hash_221530(x_221533) {
	var result_221534 = 0;

		result_221534 = x_221533;

	return result_221534;

}

function HEX21HEX24_89081(h_89083) {
	var result_89084 = 0;

		var h_89085 = (h_89083 >>> 0);
		var res_89098 = ((h_89085 + (h_89085 << 3)) >>> 0);
		res_89098 = (res_89098 ^ ((res_89098 >>> 0) >>> 11));
		res_89098 = ((res_89098 + (res_89098 << 15)) >>> 0);
		result_89084 = (res_89098|0);

	return result_89084;

}

function hash_221479(ep_221481) {
	var result_221482 = 0;

		var h_221483 = 0;
		h_221483 = HEX21HEX26_89031(h_221483, hash_90814(ep_221481.name));
		h_221483 = HEX21HEX26_89031(h_221483, hash_221486(ep_221481.evidence));
		h_221483 = HEX21HEX26_89031(h_221483, hash_221508(ep_221481.locus));
		h_221483 = HEX21HEX26_89031(h_221483, hash_221530(ep_221481.status));
		result_221482 = HEX21HEX24_89081(h_221483);

	return result_221482;

}

function next_try_115435(h_115437, max_hash_115438) {
	var result_115439 = 0;

		result_115439 = ((h_115437 + 1) & max_hash_115438);

	return result_115439;

}

function raw_get_235426(t_235430, key_235431, hc_235432, hc_235432_Idx) {
						var Tmp3;

	var result_235433 = 0;

	BeforeRet: do {
		hc_235432[hc_235432_Idx] = hash_221479(key_235431);
		if ((hc_235432[hc_235432_Idx] == 0)) {
		hc_235432[hc_235432_Idx] = 314159265;
		}
		
		if (((t_235430.data != null ? t_235430.data.length : 0) == 0)) {
		result_235433 = -1;
		break BeforeRet;
		}
		
		var h_235604 = (hc_235432[hc_235432_Idx] & (t_235430.data != null ? (t_235430.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_115418(t_235430.data[h_235604].Field0)) break L2;
						if (!(t_235430.data[h_235604].Field0 == hc_235432[hc_235432_Idx])) Tmp3 = false; else {							Tmp3 = (t_235430.data[h_235604].Field1 == key_235431);						}					if (Tmp3) {
					result_235433 = h_235604;
					break BeforeRet;
					}
					
					h_235604 = next_try_115435(h_235604, (t_235430.data != null ? (t_235430.data.length-1) : -1));
				}
		} while(false);
		result_235433 = (-1 - h_235604);
	} while (false);

	return result_235433;

}

function must_rehash_115453(length_115455, counter_115456) {
	var result_115457 = false;

		result_115457 = (((length_115455 * 2) < (counter_115456 * 3)) || ((length_115455 - counter_115456) < 4));

	return result_115457;

}

function raw_get_known_hc_237001(t_237005, key_237006, hc_237007) {
	var result_237008 = 0;

	BeforeRet: do {
		if (((t_237005.data != null ? t_237005.data.length : 0) == 0)) {
		result_237008 = -1;
		break BeforeRet;
		}
		
		var h_237178 = (hc_237007 & (t_237005.data != null ? (t_237005.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_115418(t_237005.data[h_237178].Field0)) break L2;
					if (((t_237005.data[h_237178].Field0 == hc_237007) && (t_237005.data[h_237178].Field1 == key_237006))) {
					result_237008 = h_237178;
					break BeforeRet;
					}
					
					h_237178 = next_try_115435(h_237178, (t_237005.data != null ? (t_237005.data.length-1) : -1));
				}
		} while(false);
		result_237008 = (-1 - h_237178);
	} while (false);

	return result_237008;

}

function raw_insert_238032(s_238037, data_238040, data_238040_Idx, key_238041, hc_238042, h_238043) {
		if (((data_238040[data_238040_Idx] != null ? data_238040[data_238040_Idx].length : 0) == 0)) {
		s_238037.counter = 0;
		s_238037.data = new Array(64); for (var i=0;i<64;++i) {s_238037.data[i]={Field0: 0, Field1: null};}		}
		
		data_238040[data_238040_Idx][h_238043].Field1 = key_238041;
		data_238040[data_238040_Idx][h_238043].Field0 = hc_238042;

	
}

function enlarge_236313(s_236318) {
		var n_236323 = null;
		n_236323 = new Array(((s_236318.data != null ? s_236318.data.length : 0) * 2)); for (var i=0;i<((s_236318.data != null ? s_236318.data.length : 0) * 2);++i) {n_236323[i]={Field0: 0, Field1: null};}		var Tmp1 = s_236318.data; s_236318.data = n_236323; n_236323 = Tmp1;		L2: do {
			var i_236513 = 0;
			var colontmp__244889 = 0;
			colontmp__244889 = (n_236323 != null ? (n_236323.length-1) : -1);
			var res_244894 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_244894 <= colontmp__244889)) break L4;
						i_236513 = res_244894;
						if (is_filled_115418(n_236323[i_236513].Field0)) {
						var j_237692 = (-1 - raw_get_known_hc_237001(s_236318, n_236323[i_236513].Field1, n_236323[i_236513].Field0));
						raw_insert_238032(s_236318, s_236318, "data", n_236323[i_236513].Field1, n_236323[i_236513].Field0, j_237692);
						}
						
						res_244894 += 1;
					}
			} while(false);
		} while(false);

	
}

function incl_234868(s_234873, key_234874) {
		if (((s_234873.data != null ? s_234873.data.length : 0) == 0)) {
		s_234873.counter = 0;
		s_234873.data = new Array(64); for (var i=0;i<64;++i) {s_234873.data[i]={Field0: 0, Field1: null};}		}
		
		var hc_235408 = [0];
		var index_236119 = raw_get_235426(s_234873, key_234874, hc_235408, 0);
		if ((index_236119 < 0)) {
		if (must_rehash_115453((s_234873.data != null ? s_234873.data.length : 0), s_234873.counter)) {
		enlarge_236313(s_234873);
		index_236119 = raw_get_known_hc_237001(s_234873, key_234874, hc_235408[0]);
		}
		
		raw_insert_238032(s_234873, s_234873, "data", key_234874, hc_235408[0], (-1 - index_236119));
		s_234873.counter += 1;
		}
		

	
}

function incl_242121(s_242126, other_242128) {
		L1: do {
			var item_242134 = null;
			L2: do {
				var h_244902 = 0;
				var colontmp__244903 = 0;
				colontmp__244903 = (other_242128.data != null ? (other_242128.data.length-1) : -1);
				var res_244904 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_244904 <= colontmp__244903)) break L4;
							h_244902 = res_244904;
							if (is_filled_115418(other_242128.data[h_244902].Field0)) {
							item_242134 = other_242128.data[h_244902].Field1;
							incl_234868(s_242126, item_242134);
							}
							
							res_244904 += 1;
						}
				} while(false);
			} while(false);
		} while(false);

	
}

function get_eplets_241489(al_241492) {
	var result_241497 = [{data: null, counter: 0}];

		var emulate_241498 = document.getElementById("emulateMatchmaker").checked;
		L1: do {
			var allele_241614 = null;
			var i_244879 = 0;
			var l_244880 = (al_241492 != null ? al_241492.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_244879 < l_244880)) break L3;
						allele_241614 = al_241492[i_244879];
						if (emulate_241498) {
						L4: do {
							var ep_241972 = null;
							var colontmp__244863 = {data: null, counter: 0};
							nimCopy(colontmp__244863, allele_241614.eplets, NTI228024);
							L5: do {
								var h_244872 = 0;
								var colontmp__244873 = 0;
								colontmp__244873 = (colontmp__244863.data != null ? (colontmp__244863.data.length-1) : -1);
								var res_244874 = 0;
								L6: do {
										L7: while (true) {
										if (!(res_244874 <= colontmp__244873)) break L7;
											h_244872 = res_244874;
											if (is_filled_115418(colontmp__244863.data[h_244872].Field0)) {
											ep_241972 = colontmp__244863.data[h_244872].Field1;
											if ((ep_241972.status == 0)) {
											incl_234868(result_241497[0], ep_241972);
											}
											
											}
											
											res_244874 += 1;
										}
								} while(false);
							} while(false);
						} while(false);
						}
						else {
						incl_242121(result_241497[0], allele_241614.eplets);
						}
						
						i_244879 += 1;
					}
			} while(false);
		} while(false);

	return result_241497[0];

}

function init_244060(s_244065, initial_size_244066) {
		s_244065.counter = 0;
		s_244065.data = new Array(initial_size_244066); for (var i=0;i<initial_size_244066;++i) {s_244065.data[i]={Field0: 0, Field1: null};}
	
}

function init_hash_set_244040(initial_size_244043) {
	var result_244045 = [{data: null, counter: 0}];

		init_244060(result_244045[0], initial_size_244043);

	return result_244045[0];

}

function contains_244588(s_244592, key_244593) {
	var result_244594 = false;

		var hc_244595 = [0];
		var index_244621 = raw_get_235426(s_244592, key_244593, hc_244595, 0);
		result_244594 = (0 <= index_244621);

	return result_244594;

}

function difference_244030(s1_244034, s2_244036) {
	var result_244038 = [{data: null, counter: 0}];

		nimCopy(result_244038[0], init_hash_set_244040(64), NTI228024);
		L1: do {
			var item_244440 = null;
			L2: do {
				var h_244910 = 0;
				var colontmp__244911 = 0;
				colontmp__244911 = (s1_244034.data != null ? (s1_244034.data.length-1) : -1);
				var res_244912 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_244912 <= colontmp__244911)) break L4;
							h_244910 = res_244912;
							if (is_filled_115418(s1_244034.data[h_244910].Field0)) {
							item_244440 = s1_244034.data[h_244910].Field1;
							if (!(contains_244588(s2_244036, item_244440))) {
							incl_234868(result_244038[0], item_244440);
							}
							
							}
							
							res_244912 += 1;
						}
				} while(false);
			} while(false);
		} while(false);

	return result_244038[0];

}

function HEX2D_244006(s1_244010, s2_244012) {
	var result_244014 = {data: null, counter: 0};

		nimCopy(result_244014, difference_244030(s1_244010, s2_244012), NTI228024);

	return result_244014;

}

function HEX2A_108019(x_108021, order_108022) {
	var result_108023 = 0;

		var y_108028 = (order_108022 - 1);
		result_108023 = ((x_108021 ^ y_108028) - y_108028);

	return result_108023;

}

function merge_242422(a_242427, b_242430, lo_242431, m_242432, hi_242433, cmp_242437, order_242438) {
	BeforeRet: do {
		if ((HEX2A_108019(cmp_242437(a_242427[m_242432], a_242427[(m_242432 + 1)]), order_242438) <= 0)) {
		break BeforeRet;
		}
		
		var j_242439 = lo_242431;
		var bb_242802 = 0;
		L1: do {
				L2: while (true) {
				if (!(j_242439 <= m_242432)) break L2;
					b_242430[bb_242802] = a_242427[j_242439];
					bb_242802 += 1;
					j_242439 += 1;
				}
		} while(false);
		var i_243014 = 0;
		var k_243015 = lo_242431;
		L3: do {
				L4: while (true) {
				if (!((k_243015 < j_242439) && (j_242439 <= hi_242433))) break L4;
					if ((HEX2A_108019(cmp_242437(b_242430[i_243014], a_242427[j_242439]), order_242438) <= 0)) {
					a_242427[k_243015] = b_242430[i_243014];
					i_243014 += 1;
					}
					else {
						a_242427[k_243015] = a_242427[j_242439];
						j_242439 += 1;
					}
					
					k_243015 += 1;
				}
		} while(false);
		L5: do {
				L6: while (true) {
				if (!(k_243015 < j_242439)) break L6;
					a_242427[k_243015] = b_242430[i_243014];
					k_243015 += 1;
					i_243014 += 1;
				}
		} while(false);
	} while (false);

	
}

function sort_242388(a_242393, cmp_242397, order_242398) {
		var n_242403 = (a_242393 != null ? a_242393.length : 0);
		var b_242405 = null;
		b_242405 = new Array(Math.trunc(n_242403 / 2)); for (var i=0;i<Math.trunc(n_242403 / 2);++i) {b_242405[i]=null;}		var s_242417 = 1;
		L1: do {
				L2: while (true) {
				if (!(s_242417 < n_242403)) break L2;
					var m_242418 = ((n_242403 - 1) - s_242417);
					L3: do {
							L4: while (true) {
							if (!(0 <= m_242418)) break L4;
								merge_242422(a_242393, b_242405, nimMax(((m_242418 - s_242417) + 1), 0), m_242418, (m_242418 + s_242417), cmp_242397, order_242398);
								m_242418 -= (s_242417 * 2);
							}
					} while(false);
					s_242417 = (s_242417 * 2);
				}
		} while(false);

	
}

function cmp_242363(x_242366, y_242367) {
	var result_242368 = 0;

	BeforeRet: do {
		if (eqStrings(x_242366, y_242367)) {
		result_242368 = 0;
		break BeforeRet;
		}
		
		if ((cmpStrings(x_242366, y_242367) < 0)) {
		result_242368 = -1;
		break BeforeRet;
		}
		
		result_242368 = 1;
		break BeforeRet;
	} while (false);

	return result_242368;

}

function sort_242353(a_242358, order_242359) {
		sort_242388(a_242358, cmp_242363, order_242359);

	
}

function set_inner_240073(id_240075, value_240076) {
		document.getElementById(toJSStr(id_240075)).innerHTML = toJSStr(value_240076);

	
}

function is_undefined_69883(x_69886) {
	var result_69887 = false;

		result_69887 = x_69886 === undefined;

	return result_69887;

}

function nsuJoinSep(a_209664, sep_209665) {
	var result_209666 = null;

		if ((0 < (a_209664 != null ? a_209664.length : 0))) {
		var l_209677 = ((sep_209665 != null ? sep_209665.length : 0) * ((a_209664 != null ? a_209664.length : 0) - 1));
		L1: do {
			var i_209691 = 0;
			var colontmp__244944 = 0;
			colontmp__244944 = (a_209664 != null ? (a_209664.length-1) : -1);
			var res_244945 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_244945 <= colontmp__244944)) break L3;
						i_209691 = res_244945;
						l_209677 += (a_209664[i_209691] != null ? a_209664[i_209691].length : 0);
						res_244945 += 1;
					}
			} while(false);
		} while(false);
		result_209666 = nimCopy(null, mnewString(0), NTI44040);
		if (result_209666 != null) { result_209666 = (result_209666).concat(a_209664[0]); } else { result_209666 = a_209664[0].slice(); };
		L4: do {
			var i_209711 = 0;
			var colontmp__244951 = 0;
			colontmp__244951 = (a_209664 != null ? (a_209664.length-1) : -1);
			var res_244952 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_244952 <= colontmp__244951)) break L6;
						i_209711 = res_244952;
						if (result_209666 != null) { result_209666 = (result_209666).concat(sep_209665); } else { result_209666 = sep_209665.slice(); };
						if (result_209666 != null) { result_209666 = (result_209666).concat(a_209664[i_209711]); } else { result_209666 = a_209664[i_209711].slice(); };
						res_244952 += 1;
					}
			} while(false);
		} while(false);
		}
		else {
			result_209666 = nimCopy(null, [], NTI44040);
		}
		

	return result_209666;

}

function output_mismatched_eplets_242258(eplets_set_242264) {
		var locus_eplets_abver_242268 = null;
		var locus_eplets_other_242270 = null;
		var abver_count_242272 = 0;
		var other_count_242274 = 0;
		L1: do {
			var loc_242309 = 0;
			L2: do {
				var v_244935 = 0;
				var res_244936 = 0;
				L3: do {
						L4: while (true) {
						if (!(res_244936 <= 5)) break L4;
							v_244935 = res_244936;
							loc_242309 = v_244935;
							if (locus_eplets_other_242270 === null) locus_eplets_other_242270 = [];
               if (locus_eplets_other_242270.length < 0) { for (var i=locus_eplets_other_242270.length;i<0;++i) locus_eplets_other_242270.push(null); }
               else { locus_eplets_other_242270.length = 0; };
							if (locus_eplets_abver_242268 === null) locus_eplets_abver_242268 = [];
               if (locus_eplets_abver_242268.length < 0) { for (var i=locus_eplets_abver_242268.length;i<0;++i) locus_eplets_abver_242268.push(null); }
               else { locus_eplets_abver_242268.length = 0; };
							L5: do {
								var eplet_242329 = null;
								L6: do {
									var h_244919 = 0;
									var colontmp__244920 = 0;
									colontmp__244920 = (eplets_set_242264.data != null ? (eplets_set_242264.data.length-1) : -1);
									var res_244921 = 0;
									L7: do {
											L8: while (true) {
											if (!(res_244921 <= colontmp__244920)) break L8;
												h_244919 = res_244921;
												if (is_filled_115418(eplets_set_242264.data[h_244919].Field0)) {
												eplet_242329 = eplets_set_242264.data[h_244919].Field1;
												if ((eplet_242329.locus == loc_242309)) {
												switch (eplet_242329.evidence) {
												case 0:
												case 1:
													var Tmp9 = nimCopy(null, eplet_242329.name, NTI44040);
													if (locus_eplets_abver_242268 != null) { locus_eplets_abver_242268.push(Tmp9); } else { locus_eplets_abver_242268 = [Tmp9]; };
													break;
												case 2:
													var Tmp10 = nimCopy(null, eplet_242329.name, NTI44040);
													if (locus_eplets_other_242270 != null) { locus_eplets_other_242270.push(Tmp10); } else { locus_eplets_other_242270 = [Tmp10]; };
													break;
												}
												}
												
												}
												
												res_244921 += 1;
											}
									} while(false);
								} while(false);
							} while(false);
							sort_242353(locus_eplets_abver_242268, 1);
							sort_242353(locus_eplets_other_242270, 1);
							var eplet_count_243879 = ((locus_eplets_abver_242268 != null ? locus_eplets_abver_242268.length : 0) + (locus_eplets_other_242270 != null ? locus_eplets_other_242270.length : 0));
							set_inner_240073((makeNimstrLit("mmEpletCount") || []).concat(reprEnum(loc_242309, NTI220044) || []), cstrToNimstr((eplet_count_243879)+""));
							set_inner_240073((makeNimstrLit("mmEpletCount") || []).concat(reprEnum(loc_242309, NTI220044) || [],makeNimstrLit("Abver") || []), cstrToNimstr(((locus_eplets_abver_242268 != null ? locus_eplets_abver_242268.length : 0))+""));
							set_inner_240073((makeNimstrLit("mmMismatchedEplets") || []).concat(reprEnum(loc_242309, NTI220044) || [],makeNimstrLit("Abver") || []), nsuJoinSep(locus_eplets_abver_242268, makeNimstrLit(", ")));
							set_inner_240073((makeNimstrLit("mmEpletCount") || []).concat(reprEnum(loc_242309, NTI220044) || [],makeNimstrLit("Other") || []), cstrToNimstr(((locus_eplets_other_242270 != null ? locus_eplets_other_242270.length : 0))+""));
							set_inner_240073((makeNimstrLit("mmMismatchedEplets") || []).concat(reprEnum(loc_242309, NTI220044) || [],makeNimstrLit("Other") || []), nsuJoinSep(locus_eplets_other_242270, makeNimstrLit(", ")));
							abver_count_242272 += (locus_eplets_abver_242268 != null ? locus_eplets_abver_242268.length : 0);
							other_count_242274 += (locus_eplets_other_242270 != null ? locus_eplets_other_242270.length : 0);
							res_244936 += 1;
						}
				} while(false);
			} while(false);
		} while(false);
		set_inner_240073(makeNimstrLit("mmEpletCountTotal"), cstrToNimstr(((abver_count_242272 + other_count_242274))+""));
		set_inner_240073(makeNimstrLit("mmEpletCountTotalAbver"), cstrToNimstr((abver_count_242272)+""));
		set_inner_240073(makeNimstrLit("mmEpletCountTotalOther"), cstrToNimstr((other_count_242274)+""));

	
}

function card_244760(s_244764) {
	var result_244765 = 0;

		result_244765 = s_244764.counter;

	return result_244765;

}

function get_wiebe_category_243946(dr_243948, dq_243949) {
			var Tmp1;
			var Tmp2;
			var Tmp3;

	var result_243950 = null;

			if (!(dr_243948 < 7)) Tmp1 = false; else {				Tmp1 = (dq_243949 < 9);			}		if (Tmp1) {
		result_243950 = nimCopy(null, makeNimstrLit("L\xC3\xA5g (low; DR <7 och DQ <9)"), NTI44040);
		}
		else {
			if (!(7 <= dr_243948)) Tmp2 = false; else {				Tmp2 = (dq_243949 <= 14);			}		if (Tmp2) {
		result_243950 = nimCopy(null, makeNimstrLit("Medel (intermediate; DR \xE2\x89\xA57 och DQ \xE2\x89\xA414)"), NTI44040);
		}
		else {
			if (!(dr_243948 < 7)) Tmp3 = false; else {				Tmp3 = (dq_243949 < 14);			}		if (Tmp3) {
		result_243950 = nimCopy(null, makeNimstrLit("Medel (intermediate; DR 0\xE2\x80\x936 och DQ 9\xE2\x80\x9314)"), NTI44040);
		}
		else {
			result_243950 = nimCopy(null, makeNimstrLit("H\xC3\xB6g (high; DR 0\xE2\x80\x9322 och DQ 15\xE2\x80\x9331)"), NTI44040);
		}
		}}

	return result_243950;

}

function output_wiebe_risk_group_243965(rec_eplets_243971, don_alleles_243973) {
		var max_drb_243975 = 0;
		var max_drballele_243976 = makeNimstrLit("ingen");
		var max_dqa1_243978 = 0;
		var max_dqa1allele_243979 = makeNimstrLit("ingen");
		var max_dqb1_243981 = 0;
		var max_dqb1allele_243982 = makeNimstrLit("ingen");
		L1: do {
			var allele_243989 = null;
			var i_244958 = 0;
			var l_244959 = (don_alleles_243973 != null ? don_alleles_243973.length : 0);
			L2: do {
					L3: while (true) {
					if (!(i_244958 < l_244959)) break L3;
						allele_243989 = don_alleles_243973[i_244958];
						var allele_eplets_243990 = nimCopy(null, allele_243989.eplets, NTI228024);
						var mm_eplet_count_244779 = card_244760(HEX2D_244006(allele_eplets_243990, rec_eplets_243971));
						switch (allele_243989.locus) {
						case 1:
							if ((max_drb_243975 < mm_eplet_count_244779)) {
							max_drballele_243976 = nimCopy(null, allele_243989.name, NTI44040);
							max_drb_243975 = mm_eplet_count_244779;
							}
							
							break;
						case 2:
							if ((max_dqa1_243978 < mm_eplet_count_244779)) {
							max_dqa1allele_243979 = nimCopy(null, allele_243989.name, NTI44040);
							max_dqa1_243978 = mm_eplet_count_244779;
							}
							
							break;
						case 3:
							if ((max_dqb1_243981 < mm_eplet_count_244779)) {
							max_dqb1allele_243982 = nimCopy(null, allele_243989.name, NTI44040);
							max_dqb1_243981 = mm_eplet_count_244779;
							}
							
							break;
						default: 
							break;
						}
						i_244958 += 1;
					}
			} while(false);
		} while(false);
		var dq_sum_244780 = (max_dqa1_243978 + max_dqb1_243981);
		var dq_name_244781 = (max_dqa1allele_243979 || []).concat(makeNimstrLit(" + ") || [],max_dqb1allele_243982 || []);
		var category_244782 = get_wiebe_category_243946(max_drb_243975, dq_sum_244780);
		document.getElementById("wiebeCategory").innerHTML = toJSStr(category_244782);
		document.getElementById("maxMismatchDRB").innerHTML = toJSStr(cstrToNimstr((max_drb_243975)+""));
		document.getElementById("maxMismatchAlleleDRB").innerHTML = toJSStr(max_drballele_243976);
		document.getElementById("maxMismatchDQAB").innerHTML = toJSStr(cstrToNimstr((dq_sum_244780)+""));
		document.getElementById("maxMismatchAlleleDQAB").innerHTML = toJSStr(dq_name_244781);

	
}

function showMismatchedEplets() {
		var rec_alleles_244798 = get_alleles_241276(makeNimstrLit("rec"));
		var rec_eplets_244799 = get_eplets_241489(rec_alleles_244798);
		var don_alleles_244800 = get_alleles_241276(makeNimstrLit("don"));
		var don_eplets_244801 = get_eplets_241489(don_alleles_244800);
		var hvg_eplets_244825 = HEX2D_244006(don_eplets_244801, rec_eplets_244799);
		output_mismatched_eplets_242258(hvg_eplets_244825);
		output_wiebe_risk_group_243965(rec_eplets_244799, don_alleles_244800);

	
}

function make_request_219014(url_219016, cb_219020) {

		function alert_contents_219030(e_219032) {
				if ((xhr_219021.readyState == 4)) {
				if ((xhr_219021.status == 200)) {
				cb_219020(xhr_219021.responseText);
				}
				else {
				rawEcho(makeNimstrLit("Could not retrieve data from "), cstrToNimstr(url_219016));
				}
				
				}
				

			
		}

	BeforeRet: do {
		var xhr_219021 = new XMLHttpRequest();
		if ((xhr_219021 == null)) {
		rawEcho(makeNimstrLit("Cannot create an XMLHTTP instance for url "), cstrToNimstr(url_219016));
		break BeforeRet;
		}
		
		xhr_219021.onreadystatechange = alert_contents_219030;
		xhr_219021.open("GET", url_219016, true, null, null);
		xhr_219021.responseType = "text";
		xhr_219021.send();
	} while (false);

	
}

function substr_74222(s_74224, first_74225, last_74226) {
	var result_74227 = null;

		var first_74228 = nimMax(first_74225, 0);
		var l_74230 = nimMax(((nimMin(last_74226, (s_74224 != null ? (s_74224.length-1) : -1)) - first_74228) + 1), 0);
		result_74227 = nimCopy(null, mnewString(l_74230), NTI44040);
		L1: do {
			var i_74239 = 0;
			var colontmp__240139 = 0;
			colontmp__240139 = (l_74230 - 1);
			var res_240140 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_240140 <= colontmp__240139)) break L3;
						i_74239 = res_240140;
						result_74227[i_74239] = s_74224[(i_74239 + first_74228)];
						res_240140 += 1;
					}
			} while(false);
		} while(false);

	return result_74227;

}

function nsuSplitCharSet(s_205500, seps_205502, maxsplit_205504) {
	var result_205506 = null;

		result_205506 = nimCopy(null, [], NTI205522);
		L1: do {
			var xHEX60gensym205507_205523 = null;
			var lastHEX60gensym204861_244987 = 0;
			var splitsHEX60gensym204862_244988 = maxsplit_205504;
			L2: do {
					L3: while (true) {
					if (!(lastHEX60gensym204861_244987 <= (s_205500 != null ? s_205500.length : 0))) break L3;
						var firstHEX60gensym204863_244990 = lastHEX60gensym204861_244987;
						L4: do {
								L5: while (true) {
								if (!((lastHEX60gensym204861_244987 < (s_205500 != null ? s_205500.length : 0)) && !((seps_205502[s_205500[lastHEX60gensym204861_244987]] != undefined)))) break L5;
									lastHEX60gensym204861_244987 += 1;
								}
						} while(false);
						if ((splitsHEX60gensym204862_244988 == 0)) {
						lastHEX60gensym204861_244987 = (s_205500 != null ? s_205500.length : 0);
						}
						
						xHEX60gensym205507_205523 = substr_74222(s_205500, firstHEX60gensym204863_244990, (lastHEX60gensym204861_244987 - 1));
						var Tmp6 = nimCopy(null, xHEX60gensym205507_205523, NTI44040);
						if (result_205506 != null) { result_205506.push(Tmp6); } else { result_205506 = [Tmp6]; };
						if ((splitsHEX60gensym204862_244988 == 0)) {
						break L2;
						}
						
						splitsHEX60gensym204862_244988 -= 1;
						lastHEX60gensym204861_244987 += 1;
					}
			} while(false);
		} while(false);

	return result_205506;

}

function HEX3DHEX3D_221584(x_221588, y_221590) {
	var result_221591 = false;

	BeforeRet: do {
		var same_object_222001 = false;
		same_object_222001 = x_221588 === y_221590
		if (same_object_222001) {
		result_221591 = true;
		break BeforeRet;
		}
		
		if (!(((x_221588 != null ? x_221588.length : 0) == (y_221590 != null ? y_221590.length : 0)))) {
		result_221591 = false;
		break BeforeRet;
		}
		
		L1: do {
			var i_222424 = 0;
			var colontmp__244993 = 0;
			colontmp__244993 = ((x_221588 != null ? x_221588.length : 0) - 1);
			var res_244994 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_244994 <= colontmp__244993)) break L3;
						i_222424 = res_244994;
						if (!(eqStrings(x_221588[i_222424], y_221590[i_222424]))) {
						result_221591 = false;
						break BeforeRet;
						}
						
						res_244994 += 1;
					}
			} while(false);
		} while(false);
		result_221591 = true;
		break BeforeRet;
	} while (false);

	return result_221591;

}

function check_eplet_header_221565(fields_221568) {
	var result_221569 = false;

		result_221569 = HEX3DHEX3D_221584(fields_221568, expected_header_221581);

	return result_221569;

}

function parse_evidence_221038(evidence_221040) {
	var result_221041 = 0;

		switch (toJSStr(evidence_221040)) {
		case "verified_eplet":
			result_221041 = 0;
			break;
		case "verified_pair":
			result_221041 = 1;
			break;
		case "other_eplet":
			result_221041 = 2;
			break;
		default: 
			var eHEX60gensym221044_221203 = null;
			eHEX60gensym221044_221203 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			eHEX60gensym221044_221203.message = nimCopy(null, (makeNimstrLit("unknown eplet evidence: ") || []).concat(evidence_221040 || []), NTI44040);
			eHEX60gensym221044_221203.parent = null;
			raiseException(eHEX60gensym221044_221203, "ValueError");
			break;
		}

	return result_221041;

}

function nsuToLowerAsciiChar(c_204380) {
	var result_204381 = 0;

		if ((ConstSet4[c_204380] != undefined)) {
		result_204381 = (c_204380 + 32);
		}
		else {
			result_204381 = c_204380;
		}
		

	return result_204381;

}

function nsuCmpIgnoreStyle(a_204649, b_204650) {
					var Tmp7;
					var Tmp8;

	var result_204651 = 0;

	BeforeRet: do {
		var i_204653 = 0;
		var j_204655 = 0;
		L1: do {
				L2: while (true) {
				if (!true) break L2;
					L3: do {
							L4: while (true) {
							if (!((i_204653 < (a_204649 != null ? a_204649.length : 0)) && (a_204649[i_204653] == 95))) break L4;
								i_204653 += 1;
							}
					} while(false);
					L5: do {
							L6: while (true) {
							if (!((j_204655 < (b_204650 != null ? b_204650.length : 0)) && (b_204650[j_204655] == 95))) break L6;
								j_204655 += 1;
							}
					} while(false);
					if ((i_204653 < (a_204649 != null ? a_204649.length : 0))) {
					Tmp7 = nsuToLowerAsciiChar(a_204649[i_204653]);
					}
					else {
					Tmp7 = 0;
					}
					
					var aa_204668 = Tmp7;
					if ((j_204655 < (b_204650 != null ? b_204650.length : 0))) {
					Tmp8 = nsuToLowerAsciiChar(b_204650[j_204655]);
					}
					else {
					Tmp8 = 0;
					}
					
					var bb_204669 = Tmp8;
					result_204651 = (aa_204668 - bb_204669);
					if (!((result_204651 == 0))) {
					break BeforeRet;
					}
					
					if (((a_204649 != null ? a_204649.length : 0) <= i_204653)) {
					if (((b_204650 != null ? b_204650.length : 0) <= j_204655)) {
					result_204651 = 0;
					break BeforeRet;
					}
					
					result_204651 = -1;
					break BeforeRet;
					}
					else {
					if (((b_204650 != null ? b_204650.length : 0) <= j_204655)) {
					result_204651 = 1;
					break BeforeRet;
					}
					}
					i_204653 += 1;
					j_204655 += 1;
				}
		} while(false);
	} while (false);

	return result_204651;

}

function parse_enum_220058(s_220061) {
	var result_220062 = 0;

	BeforeRet: do {
		L1: do {
			var e_220221 = 0;
			var res_245002 = 0;
			L2: do {
					L3: while (true) {
					if (!(res_245002 <= 5)) break L3;
						e_220221 = res_245002;
						if ((nsuCmpIgnoreStyle(s_220061, reprEnum(e_220221, NTI220044)) == 0)) {
						result_220062 = e_220221;
						break BeforeRet;
						}
						
						res_245002 += 1;
					}
			} while(false);
		} while(false);
		var eHEX60gensym220227_220403 = null;
		eHEX60gensym220227_220403 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym220227_220403.message = nimCopy(null, (makeNimstrLit("invalid enum value: ") || []).concat(s_220061 || []), NTI44040);
		eHEX60gensym220227_220403.parent = null;
		raiseException(eHEX60gensym220227_220403, "ValueError");
	} while (false);

	return result_220062;

}

function parse_locus_220051(locusstr_220053) {
	var result_220054 = 0;

		result_220054 = parse_enum_220058(locusstr_220053);

	return result_220054;

}

function parse_status_221238(status_221240) {
	var result_221241 = 0;

		switch (toJSStr(status_221240)) {
		case "both":
			result_221241 = 0;
			break;
		case "algorithm_only":
			result_221241 = 1;
			break;
		case "table_only":
			result_221241 = 2;
			break;
		default: 
			var eHEX60gensym221244_221403 = null;
			eHEX60gensym221244_221403 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			eHEX60gensym221244_221403.message = nimCopy(null, (makeNimstrLit("unknown eplet status: ") || []).concat(status_221240 || []), NTI44040);
			eHEX60gensym221244_221403.parent = null;
			raiseException(eHEX60gensym221244_221403, "ValueError");
			break;
		}

	return result_221241;

}

function new_eplet_221438(name_221440, evidence_221441, locus_221442, status_221443) {
	var result_221444 = null;

		result_221444 = {name: null, evidence: 0, locus: 0, status: 0};
		result_221444.name = nimCopy(null, name_221440, NTI44040);
		result_221444.evidence = parse_evidence_221038(evidence_221441);
		result_221444.locus = parse_locus_220051(locus_221442);
		result_221444.status = parse_status_221238(status_221443);

	return result_221444;

}

function raw_get_222946(t_222950, key_222951, hc_222952, hc_222952_Idx) {
						var Tmp3;

	var result_222953 = 0;

	BeforeRet: do {
		hc_222952[hc_222952_Idx] = hash_90814(key_222951);
		if ((hc_222952[hc_222952_Idx] == 0)) {
		hc_222952[hc_222952_Idx] = 314159265;
		}
		
		if (((t_222950.data != null ? t_222950.data.length : 0) == 0)) {
		result_222953 = -1;
		break BeforeRet;
		}
		
		var h_223095 = (hc_222952[hc_222952_Idx] & (t_222950.data != null ? (t_222950.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_111018(t_222950.data[h_223095].Field0)) break L2;
						if (!(t_222950.data[h_223095].Field0 == hc_222952[hc_222952_Idx])) Tmp3 = false; else {							Tmp3 = eqStrings(t_222950.data[h_223095].Field1, key_222951);						}					if (Tmp3) {
					result_222953 = h_223095;
					break BeforeRet;
					}
					
					h_223095 = next_try_111035(h_223095, (t_222950.data != null ? (t_222950.data.length-1) : -1));
				}
		} while(false);
		result_222953 = (-1 - h_223095);
	} while (false);

	return result_222953;

}

function has_key_222937(t_222942, key_222943) {
	var result_222944 = false;

		var hc_222945 = [0];
		result_222944 = (0 <= raw_get_222946(t_222942, key_222943, hc_222945, 0));

	return result_222944;

}

function contains_222927(t_222932, key_222933) {
	var result_222934 = false;

	BeforeRet: do {
		result_222934 = has_key_222937(t_222932, key_222933);
		break BeforeRet;
	} while (false);

	return result_222934;

}

function HEX5BHEX5D_223734(t_223740, key_223741) {
	var result_223743 = null;
	var result_223743_Idx = 0;

		var hcHEX60gensym111565_223744 = [0];
		var indexHEX60gensym111566_223753 = raw_get_222946(t_223740, key_223741, hcHEX60gensym111565_223744, 0);
		if ((0 <= indexHEX60gensym111566_223753)) {
		result_223743 = t_223740.data[indexHEX60gensym111566_223753]; result_223743_Idx = "Field2";
		}
		else {
			var eHEX60gensym224003_224203 = null;
			eHEX60gensym224003_224203 = {m_type: NTI47454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			eHEX60gensym224003_224203.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_223741 || []), NTI44040);
			eHEX60gensym224003_224203.parent = null;
			raiseException(eHEX60gensym224003_224203, "KeyError");
		}
		

	return [result_223743, result_223743_Idx];

}

function must_rehash_111053(length_111055, counter_111056) {
	var result_111057 = false;

		result_111057 = (((length_111055 * 2) < (counter_111056 * 3)) || ((length_111055 - counter_111056) < 4));

	return result_111057;

}

function raw_insert_226508(t_226514, data_226517, data_226517_Idx, key_226518, val_226519, hc_226520, h_226521) {
		data_226517[data_226517_Idx][h_226521].Field1 = nimCopy(null, key_226518, NTI44040);
		data_226517[data_226517_Idx][h_226521].Field2 = val_226519;
		data_226517[data_226517_Idx][h_226521].Field0 = hc_226520;

	
}

function enlarge_225548(t_225554) {
		var n_225562 = null;
		n_225562 = new Array(((t_225554.data != null ? t_225554.data.length : 0) * 2)); for (var i=0;i<((t_225554.data != null ? t_225554.data.length : 0) * 2);++i) {n_225562[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_225554.data; t_225554.data = n_225562; n_225562 = Tmp1;		L2: do {
			var i_225721 = 0;
			var colontmp__245012 = 0;
			colontmp__245012 = (n_225562 != null ? (n_225562.length-1) : -1);
			var res_245013 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_245013 <= colontmp__245012)) break L4;
						i_225721 = res_245013;
						var eh_225870 = n_225562[i_225721].Field0;
						if (is_filled_111018(eh_225870)) {
						var j_225877 = (eh_225870 & (t_225554.data != null ? (t_225554.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_111018(t_225554.data[j_225877].Field0)) break L6;
									j_225877 = next_try_111035(j_225877, (t_225554.data != null ? (t_225554.data.length-1) : -1));
								}
						} while(false);
						raw_insert_226508(t_225554, t_225554, "data", n_225562[i_225721].Field1, n_225562[i_225721].Field2, eh_225870, j_225877);
						}
						
						res_245013 += 1;
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_227023(t_227027, key_227028, hc_227029) {
	var result_227030 = 0;

	BeforeRet: do {
		if (((t_227027.data != null ? t_227027.data.length : 0) == 0)) {
		result_227030 = -1;
		break BeforeRet;
		}
		
		var h_227169 = (hc_227029 & (t_227027.data != null ? (t_227027.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_111018(t_227027.data[h_227169].Field0)) break L2;
					if (((t_227027.data[h_227169].Field0 == hc_227029) && eqStrings(t_227027.data[h_227169].Field1, key_227028))) {
					result_227030 = h_227169;
					break BeforeRet;
					}
					
					h_227169 = next_try_111035(h_227169, (t_227027.data != null ? (t_227027.data.length-1) : -1));
				}
		} while(false);
		result_227030 = (-1 - h_227169);
	} while (false);

	return result_227030;

}

function HEX5BHEX5DHEX3D_224380(t_224386, key_224387, val_224388) {
		if (((t_224386.data != null ? t_224386.data.length : 0) == 0)) {
		t_224386.counter = 0;
		t_224386.data = new Array(64); for (var i=0;i<64;++i) {t_224386.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_224801 = [0];
		var index_224810 = raw_get_222946(t_224386, key_224387, hc_224801, 0);
		if ((0 <= index_224810)) {
		t_224386.data[index_224810].Field2 = val_224388;
		}
		else {
			if (((t_224386.data != null ? t_224386.data.length : 0) == 0)) {
			t_224386.counter = 0;
			t_224386.data = new Array(64); for (var i=0;i<64;++i) {t_224386.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_111053((t_224386.data != null ? t_224386.data.length : 0), t_224386.counter)) {
			enlarge_225548(t_224386);
			index_224810 = raw_get_known_hc_227023(t_224386, key_224387, hc_224801[0]);
			}
			
			index_224810 = (-1 - index_224810);
			raw_insert_226508(t_224386, t_224386, "data", key_224387, val_224388, hc_224801[0], index_224810);
			t_224386.counter += 1;
		}
		

	
}

function read_eplets_222453(data_222455) {
						var Tmp6;
							var Tmp8;

	var result_222481 = [[{data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}, {data: null, counter: 0}]];

		var first_row_222482 = true;
		L1: do {
			var line_222483 = null;
			var first_244979 = 0;
			var last_244980 = 0;
			var eolpos_244981 = 0;
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						L4: do {
								L5: while (true) {
								if (!((last_244980 < (data_222455 != null ? data_222455.length : 0)) && !((ConstSet2[data_222455[last_244980]] != undefined)))) break L5;
									last_244980 += 1;
								}
						} while(false);
						eolpos_244981 = last_244980;
						if ((last_244980 < (data_222455 != null ? data_222455.length : 0))) {
						if ((data_222455[last_244980] == 10)) {
						last_244980 += 1;
						}
						else {
						if ((data_222455[last_244980] == 13)) {
						last_244980 += 1;
						if (((last_244980 < (data_222455 != null ? data_222455.length : 0)) && (data_222455[last_244980] == 10))) {
						last_244980 += 1;
						}
						
						}
						}
						}
						
						if (false) {
						Tmp6 = (last_244980 - 1);
						}
						else {
						Tmp6 = (eolpos_244981 - 1);
						}
						
						line_222483 = substr_74222(data_222455, first_244979, Tmp6);
						L7: do {
							if (((line_222483 != null ? line_222483.length : 0) == 0)) {
							break L7;
							}
							
							var fields_222484 = nsuSplitCharSet(line_222483, ConstSet3, -1);
							if (first_row_222482) {
							if (!(check_eplet_header_221565(fields_222484))) {
							var eHEX60gensym222487_222603 = null;
							eHEX60gensym222487_222603 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							eHEX60gensym222487_222603.message = nimCopy(null, makeNimstrLit("unknown file format for eplet data"), NTI44040);
							eHEX60gensym222487_222603.parent = null;
							raiseException(eHEX60gensym222487_222603, "ValueError");
							}
							else {
								first_row_222482 = false;
								break L7;
							}
							
							}
							
							if (!(((fields_222484 != null ? fields_222484.length : 0) == 4))) {
							var eHEX60gensym222617_222803 = null;
							eHEX60gensym222617_222803 = {m_type: NTI47452, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							eHEX60gensym222617_222803.message = nimCopy(null, (makeNimstrLit("unknown format of line: \'") || []).concat(line_222483 || [],makeNimstrLit("\'") || []), NTI44040);
							eHEX60gensym222617_222803.parent = null;
							raiseException(eHEX60gensym222617_222803, "ValueError");
							}
							
							var ep_222810 = new_eplet_221438(fields_222484[0], fields_222484[1], fields_222484[2], fields_222484[4]);
							if (contains_222927(result_222481[0][ep_222810.locus], ep_222810.name)) {
							switch ((Tmp8 = HEX5BHEX5D_223734(result_222481[0][ep_222810.locus], ep_222810.name), Tmp8)[0][Tmp8[1]].status) {
							case 1:
								if ((ep_222810.status == 0)) {
								HEX5BHEX5DHEX3D_224380(result_222481[0][ep_222810.locus], ep_222810.name, ep_222810);
								}
								
								break;
							case 2:
								HEX5BHEX5DHEX3D_224380(result_222481[0][ep_222810.locus], ep_222810.name, ep_222810);
								break;
							case 0:
								break;
							}
							}
							else {
							HEX5BHEX5DHEX3D_224380(result_222481[0][ep_222810.locus], ep_222810.name, ep_222810);
							}
							
						} while(false);
						if ((eolpos_244981 == last_244980)) {
						break L2;
						}
						
						first_244979 = last_244980;
					}
			} while(false);
		} while(false);

	return result_222481[0];

}

function init_table_228164(initial_size_228168) {
	var result_228170 = {data: null, counter: 0};

		result_228170.counter = 0;
		result_228170.data = new Array(initial_size_228168); for (var i=0;i<initial_size_228168;++i) {result_228170.data[i]={Field0: 0, Field1: null, Field2: null};}
	return result_228170;

}

function check_allele_header_228086(fields_228089) {
	var result_228090 = false;

		result_228090 = HEX3DHEX3D_221584(fields_228089, expected_header_228102);

	return result_228090;

}

function has_key_228970(t_228975, key_228976) {
	var result_228977 = false;

		var hc_228978 = [0];
		result_228977 = (0 <= raw_get_228979(t_228975, key_228976, hc_228978, 0));

	return result_228977;

}

function contains_228960(t_228965, key_228966) {
	var result_228967 = false;

	BeforeRet: do {
		result_228967 = has_key_228970(t_228965, key_228966);
		break BeforeRet;
	} while (false);

	return result_228967;

}

function raw_insert_232136(t_232142, data_232145, data_232145_Idx, key_232146, val_232147, hc_232148, h_232149) {
		data_232145[data_232145_Idx][h_232149].Field1 = nimCopy(null, key_232146, NTI44040);
		data_232145[data_232145_Idx][h_232149].Field2 = val_232147;
		data_232145[data_232145_Idx][h_232149].Field0 = hc_232148;

	
}

function enlarge_231179(t_231185) {
		var n_231193 = null;
		n_231193 = new Array(((t_231185.data != null ? t_231185.data.length : 0) * 2)); for (var i=0;i<((t_231185.data != null ? t_231185.data.length : 0) * 2);++i) {n_231193[i]={Field0: 0, Field1: null, Field2: null};}		var Tmp1 = t_231185.data; t_231185.data = n_231193; n_231193 = Tmp1;		L2: do {
			var i_231383 = 0;
			var colontmp__245028 = 0;
			colontmp__245028 = (n_231193 != null ? (n_231193.length-1) : -1);
			var res_245029 = 0;
			L3: do {
					L4: while (true) {
					if (!(res_245029 <= colontmp__245028)) break L4;
						i_231383 = res_245029;
						var eh_231546 = n_231193[i_231383].Field0;
						if (is_filled_111018(eh_231546)) {
						var j_231553 = (eh_231546 & (t_231185.data != null ? (t_231185.data.length-1) : -1));
						L5: do {
								L6: while (true) {
								if (!is_filled_111018(t_231185.data[j_231553].Field0)) break L6;
									j_231553 = next_try_111035(j_231553, (t_231185.data != null ? (t_231185.data.length-1) : -1));
								}
						} while(false);
						raw_insert_232136(t_231185, t_231185, "data", n_231193[i_231383].Field1, n_231193[i_231383].Field2, eh_231546, j_231553);
						}
						
						res_245029 += 1;
					}
			} while(false);
		} while(false);

	
}

function raw_get_known_hc_232678(t_232682, key_232683, hc_232684) {
	var result_232685 = 0;

	BeforeRet: do {
		if (((t_232682.data != null ? t_232682.data.length : 0) == 0)) {
		result_232685 = -1;
		break BeforeRet;
		}
		
		var h_232855 = (hc_232684 & (t_232682.data != null ? (t_232682.data.length-1) : -1));
		L1: do {
				L2: while (true) {
				if (!is_filled_111018(t_232682.data[h_232855].Field0)) break L2;
					if (((t_232682.data[h_232855].Field0 == hc_232684) && eqStrings(t_232682.data[h_232855].Field1, key_232683))) {
					result_232685 = h_232855;
					break BeforeRet;
					}
					
					h_232855 = next_try_111035(h_232855, (t_232682.data != null ? (t_232682.data.length-1) : -1));
				}
		} while(false);
		result_232685 = (-1 - h_232855);
	} while (false);

	return result_232685;

}

function HEX5BHEX5DHEX3D_229805(t_229811, key_229812, val_229813) {
		if (((t_229811.data != null ? t_229811.data.length : 0) == 0)) {
		t_229811.counter = 0;
		t_229811.data = new Array(64); for (var i=0;i<64;++i) {t_229811.data[i]={Field0: 0, Field1: null, Field2: null};}		}
		
		var hc_230401 = [0];
		var index_230410 = raw_get_228979(t_229811, key_229812, hc_230401, 0);
		if ((0 <= index_230410)) {
		t_229811.data[index_230410].Field2 = val_229813;
		}
		else {
			if (((t_229811.data != null ? t_229811.data.length : 0) == 0)) {
			t_229811.counter = 0;
			t_229811.data = new Array(64); for (var i=0;i<64;++i) {t_229811.data[i]={Field0: 0, Field1: null, Field2: null};}			}
			
			if (must_rehash_111053((t_229811.data != null ? t_229811.data.length : 0), t_229811.counter)) {
			enlarge_231179(t_229811);
			index_230410 = raw_get_known_hc_232678(t_229811, key_229812, hc_230401[0]);
			}
			
			index_230410 = (-1 - index_230410);
			raw_insert_232136(t_229811, t_229811, "data", key_229812, val_229813, hc_230401[0], index_230410);
			t_229811.counter += 1;
		}
		

	
}

function new_allele_228047(name_228049, locus_228050) {
	var result_228051 = null;

		result_228051 = {name: null, eplets: {data: null, counter: 0}, locus: 0};
		result_228051.name = nimCopy(null, name_228049, NTI44040);
		result_228051.locus = locus_228050;

	return result_228051;

}

function HEX5BHEX5D_234408(t_234413, key_234414) {
	var result_234415 = null;

		var hcHEX60gensym111547_234416 = [0];
		var indexHEX60gensym111548_234425 = raw_get_222946(t_234413, key_234414, hcHEX60gensym111547_234416, 0);
		if ((0 <= indexHEX60gensym111548_234425)) {
		result_234415 = t_234413.data[indexHEX60gensym111548_234425].Field2;
		}
		else {
			var eHEX60gensym234603_234803 = null;
			eHEX60gensym234603_234803 = {m_type: NTI47454, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
			eHEX60gensym234603_234803.message = nimCopy(null, (makeNimstrLit("key not found: ") || []).concat(key_234414 || []), NTI44040);
			eHEX60gensym234603_234803.parent = null;
			raiseException(eHEX60gensym234603_234803, "KeyError");
		}
		

	return result_234415;

}

function read_alleles_228125(data_228127, eplets_228138) {
						var Tmp6;
							var Tmp8;

	var result_228161 = [{data: null, counter: 0}];

		nimCopy(result_228161[0], init_table_228164(64), NTI228148);
		var first_row_228429 = true;
		L1: do {
			var line_228430 = null;
			var first_245021 = 0;
			var last_245022 = 0;
			var eolpos_245023 = 0;
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						L4: do {
								L5: while (true) {
								if (!((last_245022 < (data_228127 != null ? data_228127.length : 0)) && !((ConstSet5[data_228127[last_245022]] != undefined)))) break L5;
									last_245022 += 1;
								}
						} while(false);
						eolpos_245023 = last_245022;
						if ((last_245022 < (data_228127 != null ? data_228127.length : 0))) {
						if ((data_228127[last_245022] == 10)) {
						last_245022 += 1;
						}
						else {
						if ((data_228127[last_245022] == 13)) {
						last_245022 += 1;
						if (((last_245022 < (data_228127 != null ? data_228127.length : 0)) && (data_228127[last_245022] == 10))) {
						last_245022 += 1;
						}
						
						}
						}
						}
						
						if (false) {
						Tmp6 = (last_245022 - 1);
						}
						else {
						Tmp6 = (eolpos_245023 - 1);
						}
						
						line_228430 = substr_74222(data_228127, first_245021, Tmp6);
						L7: do {
							var fields_228431 = nsuSplitCharSet(line_228430, ConstSet6, -1);
							if (first_row_228429) {
							if (!(check_allele_header_228086(fields_228431))) {
							var eHEX60gensym228434_228603 = null;
							eHEX60gensym228434_228603 = {m_type: NTI47426, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							eHEX60gensym228434_228603.message = nimCopy(null, makeNimstrLit("unknown file format for allele data"), NTI44040);
							eHEX60gensym228434_228603.parent = null;
							raiseException(eHEX60gensym228434_228603, "Exception");
							}
							else {
								first_row_228429 = false;
								break L7;
							}
							
							}
							else {
							if (((line_228430 != null ? line_228430.length : 0) == 0)) {
							break L7;
							}
							else {
							if (!(((fields_228431 != null ? fields_228431.length : 0) == 3))) {
							var eHEX60gensym228617_228803 = null;
							eHEX60gensym228617_228803 = {m_type: NTI47426, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
							eHEX60gensym228617_228803.message = nimCopy(null, (makeNimstrLit("unknown format of line: \'") || []).concat(line_228430 || [],makeNimstrLit("\'") || []), NTI44040);
							eHEX60gensym228617_228803.parent = null;
							raiseException(eHEX60gensym228617_228803, "Exception");
							}
							}}
							var allelename_228810 = nimCopy(null, fields_228431[0], NTI44040);
							var epletname_228811 = nimCopy(null, fields_228431[1], NTI44040);
							var locus_228812 = parse_locus_220051(fields_228431[2]);
							if (!(contains_228960(result_228161[0], allelename_228810))) {
							HEX5BHEX5DHEX3D_229805(result_228161[0], allelename_228810, new_allele_228047(allelename_228810, locus_228812));
							}
							
							if (contains_222927(eplets_228138[locus_228812], epletname_228811)) {
							incl_234868((Tmp8 = HEX5BHEX5D_233723(result_228161[0], allelename_228810), Tmp8)[0][Tmp8[1]].eplets, HEX5BHEX5D_234408(eplets_228138[locus_228812], epletname_228811));
							}
							
						} while(false);
						if ((eolpos_245023 == last_245022)) {
						break L2;
						}
						
						first_245021 = last_245022;
					}
			} while(false);
		} while(false);

	return result_228161[0];

}

function set_inner_option_240105(id_240107, value_240108, label_240109) {
		set_inner_240073(id_240107, (makeNimstrLit("<option>") || []).concat(value_240108 || [],label_240109 || [],makeNimstrLit("</option>\x0A") || []));

	
}

function set_all_fields_240171(loc_240173, name_240174) {
		L1: do {
			var ind_240235 = null;
			var i_245058 = 0;
			if ((i_245058 <= 1)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						ind_240235 = group_240038[i_245058];
						L4: do {
							var field_240243 = null;
							var i_245056 = 0;
							if ((i_245056 <= 1)) {
							L5: do {
									L6: while (true) {
									if (!true) break L6;
										field_240243 = fields_240044[i_245056];
										set_inner_option_240105((ind_240235 || []).concat(loc_240173 || [],field_240243 || []), name_240174, name_240174);
										if ((1 <= i_245056)) {
										break L5;
										}
										
										i_245056 += 1;
									}
							} while(false);
							}
							
						} while(false);
						if ((1 <= i_245058)) {
						break L2;
						}
						
						i_245058 += 1;
					}
			} while(false);
			}
			
		} while(false);

	
}

function len_240498(t_240503) {
	var result_240504 = 0;

		result_240504 = t_240503.counter;

	return result_240504;

}

function nsuSplitChar(s_205455, sep_205456, maxsplit_205458) {
	var result_205460 = null;

		result_205460 = nimCopy(null, [], NTI205476);
		L1: do {
			var xHEX60gensym205461_205477 = null;
			var lastHEX60gensym204812_245063 = 0;
			var splitsHEX60gensym204813_245064 = maxsplit_205458;
			L2: do {
					L3: while (true) {
					if (!(lastHEX60gensym204812_245063 <= (s_205455 != null ? s_205455.length : 0))) break L3;
						var firstHEX60gensym204814_245066 = lastHEX60gensym204812_245063;
						L4: do {
								L5: while (true) {
								if (!((lastHEX60gensym204812_245063 < (s_205455 != null ? s_205455.length : 0)) && !((s_205455[lastHEX60gensym204812_245063] == sep_205456)))) break L5;
									lastHEX60gensym204812_245063 += 1;
								}
						} while(false);
						if ((splitsHEX60gensym204813_245064 == 0)) {
						lastHEX60gensym204812_245063 = (s_205455 != null ? s_205455.length : 0);
						}
						
						xHEX60gensym205461_205477 = substr_74222(s_205455, firstHEX60gensym204814_245066, (lastHEX60gensym204812_245063 - 1));
						var Tmp6 = nimCopy(null, xHEX60gensym205461_205477, NTI44040);
						if (result_205460 != null) { result_205460.push(Tmp6); } else { result_205460 = [Tmp6]; };
						if ((splitsHEX60gensym204813_245064 == 0)) {
						break L2;
						}
						
						splitsHEX60gensym204813_245064 -= 1;
						lastHEX60gensym204812_245063 += 1;
					}
			} while(false);
		} while(false);

	return result_205460;

}

function fill_select_240272() {
							var Tmp8;

		L1: do {
			var loc_240334 = null;
			var i_245036 = 0;
			if ((i_245036 <= 8)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						loc_240334 = loci_240041[i_245036];
						set_all_fields_240171(loc_240334, []);
						if ((8 <= i_245036)) {
						break L2;
						}
						
						i_245036 += 1;
					}
			} while(false);
			}
			
		} while(false);
		L4: do {
			var allele_241214 = null;
			var l_245046 = len_240498(alleles_table_240032[0]);
			L5: do {
				var h_245048 = 0;
				var colontmp__245049 = 0;
				colontmp__245049 = (alleles_table_240032[0].data != null ? (alleles_table_240032[0].data.length-1) : -1);
				var res_245050 = 0;
				L6: do {
						L7: while (true) {
						if (!(res_245050 <= colontmp__245049)) break L7;
							h_245048 = res_245050;
							if (is_filled_111018(alleles_table_240032[0].data[h_245048].Field0)) {
							allele_241214 = alleles_table_240032[0].data[h_245048].Field2;
							var loc_241215 = nimCopy(null, (Tmp8 = nsuSplitChar(allele_241214.name, 42, 1), Tmp8)[0], NTI44040);
							if ((allele_241214.locus == 1)) {
							switch (toJSStr(loc_241215)) {
							case "DRB3":
							case "DRB4":
							case "DRB5":
								loc_241215 = nimCopy(null, makeNimstrLit("DRB345"), NTI44040);
								break;
							default: 
								break;
							}
							}
							
							set_all_fields_240171(loc_241215, allele_241214.name);
							}
							
							res_245050 += 1;
						}
				} while(false);
			} while(false);
		} while(false);

	
}

function get_alleles_241234(data_241236) {
		nimCopy(alleles_table_240032[0], read_alleles_228125(cstrToNimstr(data_241236), eplets_table_240024[0]), NTI228148);
		rawEcho(makeNimstrLit("alleles loaded from \'"), makeNimstrLit("https://kitcalc.github.io/data/epitopes/alleles.txt"), makeNimstrLit("\'"));
		fill_select_240272();

	
}

function get_eplets_241255(data_241257) {
		nimCopy(eplets_table_240024[0], read_eplets_222453(cstrToNimstr(data_241257)), NTI222480);
		rawEcho(makeNimstrLit("eplets loaded from \'"), makeNimstrLit("https://kitcalc.github.io/data/epitopes/eplets.txt"), makeNimstrLit("\'"));
		make_request_219014("https://kitcalc.github.io/data/epitopes/alleles.txt", get_alleles_241234);

	
}
make_request_219014("https://kitcalc.github.io/data/epitopes/eplets.txt", get_eplets_241255);
