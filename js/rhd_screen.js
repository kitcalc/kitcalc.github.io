/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI788529191 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529169 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI788529345 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529196 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529176 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529186 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI788529184 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529227 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529226 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI788529225 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529190 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI788529213 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529180 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529170 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI788529201 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529177 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529205 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529178 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529209 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529179 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529217 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529181 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI788529185 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI788529466 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788529221 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI788529182 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI570425347 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI570425349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI872415301 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI536871232 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI570425352 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI570425351 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI570425348 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643445 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI570425405 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643591 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
NTI704643591.base = NTI33554449;
var NNI570425405 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI570425405.node = NNI570425405;
NTI704643445.base = NTI33554449;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
NTI570425351.base = NTI33554445;
NTI570425352.base = NTI33554445;
var NNI570425348 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sampleId", len: 0, typ: NTI33554449, name: "sampleId", sons: null}, 
{kind: 1, offset: "rhdCts", len: 0, typ: NTI570425351, name: "rhdCts", sons: null}, 
{kind: 1, offset: "gapdhCts", len: 0, typ: NTI570425352, name: "gapdhCts", sons: null}]};
NTI570425348.node = NNI570425348;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
NTI536871232.base = NTI33554449;
var NNI872415301 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI872415301.node = NNI872415301;
var NNI570425347 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI570425347, name: "P", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI570425347, name: "N", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI570425347, name: "I", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI570425347, name: "I", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI570425347, name: "I", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI570425347, name: "I", len: 0, sons: null}}};
NTI570425347.node = NNI570425347;
var NNI570425349 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "sampleId", len: 0, typ: NTI33554449, name: "sampleId", sons: null}, 
{kind: 1, offset: "pattern", len: 0, typ: NTI33554449, name: "pattern", sons: null}, 
{kind: 1, offset: "status", len: 0, typ: NTI570425347, name: "status", sons: null}]};
NTI570425349.node = NNI570425349;
NTI788529182.base = NTI788529221;
var NNI788529466 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI788529182, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI788529466.node = NNI788529466;
NTI788529181.base = NTI788529217;
NTI788529179.base = NTI788529209;
NTI788529178.base = NTI788529205;
NTI788529177.base = NTI788529201;
var NNI788529170 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI788529170, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI788529170, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI788529170, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI788529170, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI788529170, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI788529170, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI788529170, name: "Sunday", len: 0, sons: null}}};
NTI788529170.node = NNI788529170;
NTI788529180.base = NTI788529213;
var NNI788529225 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI788529226, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI788529227, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI788529225.node = NNI788529225;
NTI788529190.base = NTI788529225;
var NNI788529185 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI788529181, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI788529179, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI788529178, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI788529177, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI788529170, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI788529180, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI788529190, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI788529185.node = NNI788529185;
NTI788529185.base = NTI33555173;
var NNI788529184 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI788529181, name: "nanosecond", sons: null}]};
NTI788529184.node = NNI788529184;
var NNI788529186 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI788529181, name: "nanosecond", sons: null}]};
NTI788529186.node = NNI788529186;
NTI788529176.base = NTI788529196;
var NNI788529169 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI788529169, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI788529169, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI788529169, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI788529169, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI788529169, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI788529169, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI788529169, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI788529169, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI788529169, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI788529169, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI788529169, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI788529169, name: "December", len: 0, sons: null}}};
NTI788529169.node = NNI788529169;
var NNI788529345 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI788529176, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI788529169, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI788529345.node = NNI788529345;
var NNI788529191 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI788529184, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI788529191.node = NNI788529191;

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet2 = setConstr(13, 10);

function nimMax(a_33557108, b_33557109) {
    var Temporary1;

  var result_33557110 = 0;

  BeforeRet: {
    if ((b_33557109 <= a_33557108)) {
    Temporary1 = a_33557108;
    }
    else {
    Temporary1 = b_33557109;
    }
    
    result_33557110 = Temporary1;
    break BeforeRet;
  };

  return result_33557110;

}

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function nimMin(a_33557104, b_33557105) {
    var Temporary1;

  var result_33557106 = 0;

  BeforeRet: {
    if ((a_33557104 <= b_33557105)) {
    Temporary1 = a_33557104;
    }
    else {
    Temporary1 = b_33557105;
    }
    
    result_33557106 = Temporary1;
    break BeforeRet;
  };

  return result_33557106;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
var ConstSet3 = setConstr(34);
var ConstSet4 = setConstr(34);

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}
var ConstSet5 = setConstr(34);
var ConstSet6 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet7 = setConstr([97, 122], [65, 90], [48, 57], 95);

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet8 = setConstr([48, 57]);
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr(101, 69);
var ConstSet11 = setConstr([48, 57]);
var ConstSet12 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557448, number_33557449, number_33557449_Idx) {
    var Temporary1;

  var result_33557450 = 0;

  BeforeRet: {
    var sign_33557451 = false;
    var i_33557452 = 0;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    sign_33557451 = true;
    i_33557452 += 1;
    }
    }
    if (((s_33557448[i_33557452] == 78) || (s_33557448[i_33557452] == 110))) {
    if (((s_33557448[(i_33557452 + 1)] == 65) || (s_33557448[(i_33557452 + 1)] == 97))) {
    if (((s_33557448[(i_33557452 + 2)] == 78) || (s_33557448[(i_33557452 + 2)] == 110))) {
    if (!((ConstSet6[s_33557448[(i_33557452 + 3)]] != undefined))) {
    number_33557449[number_33557449_Idx] = NaN;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if (((s_33557448[i_33557452] == 73) || (s_33557448[i_33557452] == 105))) {
    if (((s_33557448[(i_33557452 + 1)] == 78) || (s_33557448[(i_33557452 + 1)] == 110))) {
    if (((s_33557448[(i_33557452 + 2)] == 70) || (s_33557448[(i_33557452 + 2)] == 102))) {
    if (!((ConstSet7[s_33557448[(i_33557452 + 3)]] != undefined))) {
    if (sign_33557451) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557449[number_33557449_Idx] = Temporary1;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    var buf_33557471 = [];
    if (sign_33557451) {
    addChar(buf_33557471, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet8[s_33557448[i_33557452]] != undefined)) break Label3;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label5;
                i_33557452 += 1;
              }
          };
        }
    };
    if ((s_33557448[i_33557452] == 46)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet9[s_33557448[i_33557452]] != undefined)) break Label7;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label9;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557471).length == (sign_33557451 ? 1 : 0))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet10[s_33557448[i_33557452]] != undefined)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    }
    }
    if (!((ConstSet11[s_33557448[i_33557452]] != undefined))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet12[s_33557448[i_33557452]] != undefined)) break Label11;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label13;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    number_33557449[number_33557449_Idx] = parseFloatNative_33557428(buf_33557471);
    result_33557450 = i_33557452;
  };

  return result_33557450;

}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function modInt(a_33557066, b_33557067) {
        if (b_33557067 == 0) raiseDivByZero();
    if (b_33557067 == -1 && a_33557066 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557066 % b_33557067);
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
    var header_570428646 = [[76,73,68], [82,101,115,117,108,116,97,116], [83,118,97,114], [75,111,109,109,101,110,116,97,114]];

function reprEnum(e_33557576, typ_33557577) {
  var result_33557578 = [];

    var tmp_33557579 = false;
    var item_33557580 = typ_33557577.node.sons[e_33557576];
    tmp_33557579 = item_33557580 !== undefined
    if (tmp_33557579) {
    result_33557578 = nimCopy(null, makeNimstrLit(item_33557580.name), NTI33554449);
    }
    else {
      result_33557578 = nimCopy(null, (HEX24_385875976(e_33557576) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557578;

}
            var codes_570425374 = [[], [], [101,110,100,97,115,116,32,101,110,32,112,111,115,105,116,105,118,32,114,101,97,107,116,105,111,110], [108,195,165,103,32,68,78,65,32,107,111,110,99], [104,195,182,103,32,68,78,65,32,107,111,110,99], [82,72,68,32,62,32,71,65,80,68,72]];

function absInt(a_33557098) {
    var Temporary1;

  var result_33557099 = 0;

    if ((a_33557098 < 0)) {
    Temporary1 = (a_33557098 * (-1));
    }
    else {
    Temporary1 = a_33557098;
    }
    
    result_33557099 = Temporary1;

  return result_33557099;

}
    var unitWeights_788529302 = new BigInt64Array([1n, 1000n, 1000000n, 1000000000n, 60000000000n, 3600000000000n, 86400000000000n, 604800000000000n]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function negInt(a_33557092) {
  var result_33557093 = 0;

    result_33557093 = (a_33557092 * (-1));

  return result_33557093;

}
    var f2_570427341 = {patterns: [24, 13, 1, 37, 1, 95, 9, 11, 17], formatStr: [121,121,121,121,77,77,100,100,39,95,39,72,72,109,109,115,115]};
    var DefaultLocale_788531049 = {MMM: [[74,97,110], [70,101,98], [77,97,114], [65,112,114], [77,97,121], [74,117,110], [74,117,108], [65,117,103], [83,101,112], [79,99,116], [78,111,118], [68,101,99]], MMMM: [[74,97,110,117,97,114,121], [70,101,98,114,117,97,114,121], [77,97,114,99,104], [65,112,114,105,108], [77,97,121], [74,117,110,101], [74,117,108,121], [65,117,103,117,115,116], [83,101,112,116,101,109,98,101,114], [79,99,116,111,98,101,114], [78,111,118,101,109,98,101,114], [68,101,99,101,109,98,101,114]], ddd: [[77,111,110], [84,117,101], [87,101,100], [84,104,117], [70,114,105], [83,97,116], [83,117,110]], dddd: [[77,111,110,100,97,121], [84,117,101,115,100,97,121], [87,101,100,110,101,115,100,97,121], [84,104,117,114,115,100,97,121], [70,114,105,100,97,121], [83,97,116,117,114,100,97,121], [83,117,110,100,97,121]]};

function modInt64(a_33557088, b_33557089) {
        if (b_33557089 == 0n) raiseDivByZero();
    if (b_33557089 == -1n && a_33557088 == 9223372036854775807n) raiseOverflow();
    return a_33557088 % b_33557089;
  

  
}

function addInt64(a_33557072, b_33557073) {
        var result = a_33557072 + b_33557073;
    checkOverflowInt64(result);
    return result;
  

  
}

function subInt64(a_33557076, b_33557077) {
        var result = a_33557076 - b_33557077;
    checkOverflowInt64(result);
    return result;
  

  
}
    var daysUntilMonthLeap_788529436 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_788529435 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var cb64_721420292 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_721420293 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);
var objectID_1207959729 = [0];
if (globalThis.utcInstance_788530805 === undefined) {
  globalThis.utcInstance_788530805 = [null];
}
if (globalThis.localInstance_788530806 === undefined) {
  globalThis.localInstance_788530806 = [null];
}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570428966 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570428966 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570428966;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570428966 = addInt(i_570428966, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet1[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function substr_33558079(s_33558080, first_33558081, last_33558082) {
  var result_33558083 = [];

    var first_33558084 = nimMax(first_33558081, 0);
    var L_33558085 = nimMax(addInt(subInt(nimMin(last_33558082, (s_33558080).length - 1), first_33558084), 1), 0);
    result_33558083 = nimCopy(null, mnewString(chckRange(L_33558085, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33558090 = 0;
      var colontmp__570425402 = 0;
      colontmp__570425402 = subInt(L_33558085, 1);
      var res_570425403 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570425403 <= colontmp__570425402)) break Label3;
            i_33558090 = res_570425403;
            result_33558083[chckIndx(i_33558090, 0, (result_33558083).length - 1)] = s_33558080[chckIndx(addInt(i_33558090, first_33558084), 0, (s_33558080).length - 1)];
            res_570425403 = addInt(res_570425403, 1);
          }
      };
    };

  return result_33558083;

}

function nsuSplitLines(s_704643755, keepEol_704643756) {
            var Temporary6;

  var result_704643757 = [];

    result_704643757 = nimCopy(null, [], NTI704643591);
    Label1: {
      var xHEX60gensym73_704643763 = [];
      var first_570428982 = 0;
      var last_570428983 = 0;
      var eolpos_570428984 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_570428983 < (s_704643755).length) && !((ConstSet2[s_704643755[chckIndx(last_570428983, 0, (s_704643755).length - 1)]] != undefined)))) break Label5;
                  last_570428983 = addInt(last_570428983, 1);
                }
            };
            eolpos_570428984 = last_570428983;
            if ((last_570428983 < (s_704643755).length)) {
            if ((s_704643755[chckIndx(last_570428983, 0, (s_704643755).length - 1)] == 10)) {
            last_570428983 = addInt(last_570428983, 1);
            }
            else {
            if ((s_704643755[chckIndx(last_570428983, 0, (s_704643755).length - 1)] == 13)) {
            last_570428983 = addInt(last_570428983, 1);
            if (((last_570428983 < (s_704643755).length) && (s_704643755[chckIndx(last_570428983, 0, (s_704643755).length - 1)] == 10))) {
            last_570428983 = addInt(last_570428983, 1);
            }
            
            }
            }
            }
            
            if (keepEol_704643756) {
            Temporary6 = subInt(last_570428983, 1);
            }
            else {
            Temporary6 = subInt(eolpos_570428984, 1);
            }
            
            xHEX60gensym73_704643763 = substr_33558079(s_704643755, first_570428982, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym73_704643763, NTI33554449);
            result_704643757.push(Temporary7);;
            if ((eolpos_570428984 == last_570428983)) {
            break Label2;
            }
            
            first_570428982 = last_570428983;
          }
      };
    };

  return result_704643757;

}

function nsuReplaceChar(s_704644958, sub_704644959, by_704644960) {
  var result_704644961 = [];

    result_704644961 = nimCopy(null, mnewString(chckRange((s_704644958).length, 0, 2147483647)), NTI33554449);
    var i_704644962 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_704644962 < (s_704644958).length)) break Label2;
          if ((s_704644958[chckIndx(i_704644962, 0, (s_704644958).length - 1)] == sub_704644959)) {
          result_704644961[chckIndx(i_704644962, 0, (result_704644961).length - 1)] = by_704644960;
          }
          else {
            result_704644961[chckIndx(i_704644962, 0, (result_704644961).length - 1)] = s_704644958[chckIndx(i_704644962, 0, (s_704644958).length - 1)];
          }
          
          i_704644962 = addInt(i_704644962, 1);
        }
    };

  return result_704644961;

}

function nsuSplitChar(s_704643617, sep_704643618, maxsplit_704643619) {
  var result_704643620 = [];

    result_704643620 = nimCopy(null, [], NTI704643445);
    Label1: {
      var xHEX60gensym67_704643626 = [];
      var lastHEX60gensym34_570428991 = 0;
      var splitsHEX60gensym34_570428992 = maxsplit_704643619;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym34_570428991 <= (s_704643617).length)) break Label3;
            var firstHEX60gensym34_570428994 = lastHEX60gensym34_570428991;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym34_570428991 < (s_704643617).length) && !((s_704643617[chckIndx(lastHEX60gensym34_570428991, 0, (s_704643617).length - 1)] == sep_704643618)))) break Label5;
                  lastHEX60gensym34_570428991 = addInt(lastHEX60gensym34_570428991, 1);
                }
            };
            if ((splitsHEX60gensym34_570428992 == 0)) {
            lastHEX60gensym34_570428991 = (s_704643617).length;
            }
            
            xHEX60gensym67_704643626 = substr_33558079(s_704643617, firstHEX60gensym34_570428994, subInt(lastHEX60gensym34_570428991, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym67_704643626, NTI33554449);
            result_704643620.push(Temporary6);;
            if ((splitsHEX60gensym34_570428992 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym34_570428992 = subInt(splitsHEX60gensym34_570428992, 1);
            lastHEX60gensym34_570428991 = addInt(lastHEX60gensym34_570428991, 1);
          }
      };
    };

  return result_704643620;

}

function nsuFindChar(s_704644756, sub_704644757, start_704644758, last_704644759) {
    var Temporary1;

  var result_704644760 = 0;

  BeforeRet: {
    result_704644760 = (-1);
    if ((last_704644759 < 0)) {
    Temporary1 = (s_704644756).length - 1;
    }
    else {
    Temporary1 = last_704644759;
    }
    
    var last_704644761 = Temporary1;
    Label2: {
      var iHEX60gensym176_704644775 = 0;
      var colontmp__570429001 = 0;
      colontmp__570429001 = start_704644758;
      var res_570429002 = colontmp__570429001;
      Label3: {
          Label4: while (true) {
          if (!(res_570429002 <= last_704644761)) break Label4;
            iHEX60gensym176_704644775 = res_570429002;
            if ((s_704644756[chckIndx(iHEX60gensym176_704644775, 0, (s_704644756).length - 1)] == sub_704644757)) {
            result_704644760 = iHEX60gensym176_704644775;
            break BeforeRet;
            }
            
            res_570429002 = addInt(res_570429002, 1);
          }
      };
    };
  };

  return result_704644760;

}

function nsuFindStrA(a_704644734, s_704644735, sub_704644736, start_704644737, last_704644738) {
    var Temporary1;

  var result_704644739 = 0;

  BeforeRet: {
    if ((last_704644738 < 0)) {
    Temporary1 = (s_704644735).length - 1;
    }
    else {
    Temporary1 = last_704644738;
    }
    
    var last_704644740 = Temporary1;
    var subLast_704644741 = subInt((sub_704644736).length, 1);
    if ((subLast_704644741 == (-1))) {
    result_704644739 = start_704644737;
    break BeforeRet;
    }
    
    result_704644739 = (-1);
    var skip_704644742 = start_704644737;
    Label2: {
        Label3: while (true) {
        if (!(subLast_704644741 <= subInt(last_704644740, skip_704644742))) break Label3;
          var i_704644743 = subLast_704644741;
          Label4: {
              Label5: while (true) {
              if (!(s_704644735[chckIndx(addInt(skip_704644742, i_704644743), 0, (s_704644735).length - 1)] == sub_704644736[chckIndx(i_704644743, 0, (sub_704644736).length - 1)])) break Label5;
                if ((i_704644743 == 0)) {
                result_704644739 = skip_704644742;
                break BeforeRet;
                }
                
                i_704644743 = subInt(i_704644743, 1);
              }
          };
          skip_704644742 = addInt(skip_704644742, a_704644734[chckIndx(s_704644735[chckIndx(addInt(skip_704644742, subLast_704644741), 0, (s_704644735).length - 1)], 0, (a_704644734).length - 1)]);
        }
    };
  };

  return result_704644739;

}

function fill_704644694(a_704644696, value_704644697) {
    var xHEX60gensym172_704644703 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_704644703 <= (a_704644696).length - 1)) break Label2;
          a_704644696[chckIndx(xHEX60gensym172_704644703, 0, (a_704644696).length - 1)] = value_704644697;
          xHEX60gensym172_704644703 = addInt(xHEX60gensym172_704644703, 1);
        }
    };

  
}

function nsuInitSkipTable(a_704644691, sub_704644692) {
    var m_704644693 = (sub_704644692).length;
    fill_704644694(a_704644691, m_704644693);
    Label1: {
      var i_704644713 = 0;
      var colontmp__570429007 = 0;
      colontmp__570429007 = subInt(m_704644693, 1);
      var i_570429008 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429008 < colontmp__570429007)) break Label3;
            i_704644713 = i_570429008;
            a_704644691[chckIndx(sub_704644692[chckIndx(i_704644713, 0, (sub_704644692).length - 1)], 0, (a_704644691).length - 1)] = subInt(subInt(m_704644693, 1), i_704644713);
            i_570429008 = addInt(i_570429008, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_704644731) {
  var result_704644732 = [new Int32Array(256)];

    nsuInitSkipTable(result_704644732[0], sub_704644731);

  return result_704644732[0];

}

function nsuFindStr(s_704644793, sub_704644794, start_704644795, last_704644796) {
  var result_704644797 = 0;

  BeforeRet: {
    if ((subInt((s_704644793).length, start_704644795) < (sub_704644794).length)) {
    result_704644797 = (-1);
    break BeforeRet;
    }
    
    if (((sub_704644794).length == 1)) {
    result_704644797 = nsuFindChar(s_704644793, sub_704644794[chckIndx(0, 0, (sub_704644794).length - 1)], start_704644795, last_704644796);
    break BeforeRet;
    }
    
    result_704644797 = nsuFindStrA(nsuInitNewSkipTable(sub_704644794), s_704644793, sub_704644794, start_704644795, last_704644796);
  };

  return result_704644797;

}

function contains_704644935(s_704644936, sub_704644937) {
  var result_704644938 = false;

  BeforeRet: {
    result_704644938 = (0 <= nsuFindStr(s_704644936, sub_704644937, 0, (-1)));
    break BeforeRet;
  };

  return result_704644938;

}

function outputAndRaise_570425377(error_570425378) {
    document.getElementById("showcontent").innerHTML = toJSStr(([60,98,62,70,101,108,32,118,105,100,32,105,110,108,195,164,115,110,105,110,103,32,97,118,32,102,105,108,101,110,58,32,60,47,98,62] || []).concat(error_570425378 || []));
    raiseException({message: nimCopy(null, error_570425378, NTI33554449), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function nsuStrip(s_704645594, leading_704645595, trailing_704645596, chars_704645597) {
  var result_704645598 = [];

    var first_704645599 = 0;
    var last_704645600 = subInt((s_704645594).length, 1);
    if (leading_704645595) {
    Label1: {
        Label2: while (true) {
        if (!((first_704645599 <= last_704645600) && (chars_704645597[s_704645594[chckIndx(first_704645599, 0, (s_704645594).length - 1)]] != undefined))) break Label2;
          first_704645599 = addInt(first_704645599, 1);
        }
    };
    }
    
    if (trailing_704645596) {
    Label3: {
        Label4: while (true) {
        if (!((first_704645599 <= last_704645600) && (chars_704645597[s_704645594[chckIndx(last_704645600, 0, (s_704645594).length - 1)]] != undefined))) break Label4;
          last_704645600 = subInt(last_704645600, 1);
        }
    };
    }
    
    result_704645598 = nimCopy(null, substr_33558079(s_704645594, first_704645599, last_704645600), NTI33554449);

  return result_704645598;

}

function find_1040187446(a_1040187449, item_1040187450) {
  var result_1040187451 = 0;

  BeforeRet: {
    result_1040187451 = 0;
    Label1: {
      var i_1040187455 = [];
      var i_570429015 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429015 < (a_1040187449).length)) break Label3;
            i_1040187455 = a_1040187449[chckIndx(i_570429015, 0, (a_1040187449).length - 1)];
            if (eqStrings(i_1040187455, item_1040187450)) {
            break BeforeRet;
            }
            
            result_1040187451 = addInt(result_1040187451, 1);
            i_570429015 = addInt(i_570429015, 1);
          }
      };
    };
    result_1040187451 = (-1);
  };

  return result_1040187451;

}

function contains_1040187441(a_1040187443, item_1040187444) {
  var result_1040187445 = false;

  BeforeRet: {
    result_1040187445 = (0 <= find_1040187446(a_1040187443, item_1040187444));
    break BeforeRet;
  };

  return result_1040187445;

}

function parseFloatNative_33557428(a_33557429) {
  var result_33557430 = 0.0;

    var str_33557431 = [];
    Label1: {
      var x_33557445 = 0;
      var i_570429025 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429025 < (a_33557429).length)) break Label3;
            x_33557445 = a_33557429[i_570429025];
            addChar(str_33557431, x_33557445);;
            i_570429025 += 1;
          }
      };
    };
    var cstr_33557446 = toJSStr(str_33557431);
      result_33557430 = Number(cstr_33557446);
  

  return result_33557430;

}

function npuParseFloat(s_855638582, number_855638583, number_855638583_Idx) {
  var result_855638584 = 0;

    var bf_855638585 = [0.0];
    result_855638584 = nimParseBiggestFloat(s_855638582, bf_855638585, 0);
    if (!((result_855638584 == 0))) {
    number_855638583[number_855638583_Idx] = bf_855638585[0];
    }
    

  return result_855638584;

}

function parseFloat_855638984(s_855638985, number_855638986, number_855638986_Idx, start_855638987) {
  var result_855638988 = 0;

    result_855638988 = npuParseFloat((s_855638985.slice(start_855638987, (s_855638985).length - 1 + 1)), number_855638986, number_855638986_Idx);

  return result_855638988;

}

function nsuParseFloat(s_704643949) {
  var result_704643950 = [0.0];

    result_704643950[0] = 0.0;
    var L_704643951 = parseFloat_855638984(s_704643949, result_704643950, 0, 0);
    if ((!((L_704643951 == (s_704643949).length)) || (L_704643951 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_704643949 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_704643950[0];

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function imul_1207959864(a_1207959865, b_1207959866) {
  var result_1207959867 = 0;

    var mask_1207959868 = 65535;
    var aHi_1207959873 = (((a_1207959865 >>> 16) & mask_1207959868) >>> 0);
    var aLo_1207959874 = ((a_1207959865 & mask_1207959868) >>> 0);
    var bHi_1207959879 = (((b_1207959866 >>> 16) & mask_1207959868) >>> 0);
    var bLo_1207959880 = ((b_1207959866 & mask_1207959868) >>> 0);
    result_1207959867 = ((((aLo_1207959874 * bLo_1207959880) >>> 0) + ((((((aHi_1207959873 * bLo_1207959880) >>> 0) + ((aLo_1207959874 * bHi_1207959879) >>> 0)) >>> 0) << 16) >>> 0)) >>> 0);

  return result_1207959867;

}

function rotl32_1207959885(x_1207959886, r_1207959887) {
  var result_1207959888 = 0;

    result_1207959888 = ((((x_1207959886 << r_1207959887) >>> 0) | (x_1207959886 >>> subInt(32, r_1207959887))) >>> 0);

  return result_1207959888;

}

function murmurHash_1207959897(x_1207959898) {
  var result_1207959899 = 0;

  BeforeRet: {
    var size_1207959908 = (x_1207959898).length;
    var stepSize_1207959909 = 4;
    var n_1207959910 = divInt(size_1207959908, stepSize_1207959909);
    var h1_1207959911 = 0;
    var i_1207959912 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1207959912 < mulInt(n_1207959910, stepSize_1207959909))) break Label2;
          var k1_1207959913 = 0;
          var j_1207959914 = stepSize_1207959909;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1207959914)) break Label4;
                j_1207959914 = subInt(j_1207959914, 1);
                k1_1207959913 = ((((k1_1207959913 << 8) >>> 0) | x_1207959898[chckIndx(addInt(i_1207959912, j_1207959914), 0, (x_1207959898).length - 1)]) >>> 0);
              }
          };
          i_1207959912 = addInt(i_1207959912, stepSize_1207959909);
          k1_1207959913 = imul_1207959864(k1_1207959913, 3432918353);
          k1_1207959913 = rotl32_1207959885(k1_1207959913, 15);
          k1_1207959913 = imul_1207959864(k1_1207959913, 461845907);
          h1_1207959911 = ((h1_1207959911 ^ k1_1207959913) >>> 0);
          h1_1207959911 = rotl32_1207959885(h1_1207959911, 13);
          h1_1207959911 = ((((h1_1207959911 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1207959933 = 0;
    var rem_1207959934 = modInt(size_1207959908, stepSize_1207959909);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1207959934)) break Label6;
          rem_1207959934 = subInt(rem_1207959934, 1);
          k1_1207959933 = ((((k1_1207959933 << 8) >>> 0) | x_1207959898[chckIndx(addInt(i_1207959912, rem_1207959934), 0, (x_1207959898).length - 1)]) >>> 0);
        }
    };
    k1_1207959933 = imul_1207959864(k1_1207959933, 3432918353);
    k1_1207959933 = rotl32_1207959885(k1_1207959933, 15);
    k1_1207959933 = imul_1207959864(k1_1207959933, 461845907);
    h1_1207959911 = ((h1_1207959911 ^ k1_1207959933) >>> 0);
    h1_1207959911 = ((h1_1207959911 ^ size_1207959908) >>> 0);
    h1_1207959911 = ((h1_1207959911 ^ (h1_1207959911 >>> 16)) >>> 0);
    h1_1207959911 = imul_1207959864(h1_1207959911, 2246822507);
    h1_1207959911 = ((h1_1207959911 ^ (h1_1207959911 >>> 13)) >>> 0);
    h1_1207959911 = imul_1207959864(h1_1207959911, 3266489909);
    h1_1207959911 = ((h1_1207959911 ^ (h1_1207959911 >>> 16)) >>> 0);
    result_1207959899 = Number(BigInt.asIntN(32, BigInt(h1_1207959911)));
    break BeforeRet;
  };

  return result_1207959899;

}

function hash_1207959999(x_1207960000) {
  var result_1207960001 = 0;

    result_1207960001 = murmurHash_1207959897((x_1207960000.slice(0, (x_1207960000).length - 1 + 1)));

  return result_1207960001;

}

function isFilled_771751967(hcode_771751968) {
  var result_771751969 = false;

    result_771751969 = !((hcode_771751968 == 0));

  return result_771751969;

}

function nextTry_771751970(h_771751971, maxHash_771751972) {
  var result_771751973 = 0;

    result_771751973 = (addInt(h_771751971, 1) & maxHash_771751972);

  return result_771751973;

}

function rawGet_570425593(t_570425596, key_570425597, hc_570425598, hc_570425598_Idx) {
  var result_570425599 = 0;

  BeforeRet: {
    hc_570425598[hc_570425598_Idx] = hash_1207959999(key_570425597);
    if ((hc_570425598[hc_570425598_Idx] == 0)) {
    hc_570425598[hc_570425598_Idx] = 314159265;
    }
    
    if (((t_570425596.data).length == 0)) {
    result_570425599 = (-1);
    break BeforeRet;
    }
    
    var h_570425651 = (hc_570425598[hc_570425598_Idx] & (t_570425596.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_771751967(t_570425596.data[chckIndx(h_570425651, 0, (t_570425596.data).length - 1)].Field0)) break Label2;
          if (((t_570425596.data[chckIndx(h_570425651, 0, (t_570425596.data).length - 1)].Field0 == hc_570425598[hc_570425598_Idx]) && eqStrings(t_570425596.data[chckIndx(h_570425651, 0, (t_570425596.data).length - 1)].Field1, key_570425597))) {
          result_570425599 = h_570425651;
          break BeforeRet;
          }
          
          h_570425651 = nextTry_771751970(h_570425651, (t_570425596.data).length - 1);
        }
    };
    result_570425599 = subInt((-1), h_570425651);
  };

  return result_570425599;

}

function hasKey_570425586(t_570425589, key_570425590) {
  var result_570425591 = false;

    var hc_570425592 = [0];
    result_570425591 = (0 <= rawGet_570425593(t_570425589, key_570425590, hc_570425592, 0));

  return result_570425591;

}

function contains_570425580(t_570425583, key_570425584) {
  var result_570425585 = false;

  BeforeRet: {
    result_570425585 = hasKey_570425586(t_570425583, key_570425584);
    break BeforeRet;
  };

  return result_570425585;

}

function nextPowerOfTwo_838861047(x_838861048) {
  var result_838861049 = 0;

    result_838861049 = (x_838861048 - 1);
    result_838861049 = (result_838861049 | (result_838861049 >> 16));
    result_838861049 = (result_838861049 | (result_838861049 >> 8));
    result_838861049 = (result_838861049 | (result_838861049 >> 4));
    result_838861049 = (result_838861049 | (result_838861049 >> 2));
    result_838861049 = (result_838861049 | (result_838861049 >> 1));
    result_838861049 += (1 + ((x_838861048 <= 0) ? 1 : 0));

  return result_838861049;

}

function slotsNeeded_771751978(count_771751979) {
  var result_771751980 = 0;

    result_771751980 = nextPowerOfTwo_838861047(addInt(divInt(mulInt(count_771751979, 3), 2), 4));

  return result_771751980;

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function mustRehash_570426066(t_570426068) {
  var result_570426069 = false;

    if (!((t_570426068.counter < (t_570426068.data).length))) {
    failedAssertImpl_268435541([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_570426069 = ((mulInt((t_570426068.data).length, 2) < mulInt(t_570426068.counter, 3)) || (subInt((t_570426068.data).length, t_570426068.counter) < 4));

  return result_570426069;

}

function rawInsert_570426515(t_570426519, data_570426520, data_570426520_Idx, key_570426521, val_570426522, hc_570426523, h_570426524) {
    data_570426520[data_570426520_Idx][chckIndx(h_570426524, 0, (data_570426520[data_570426520_Idx]).length - 1)].Field1 = nimCopy(null, key_570426521, NTI33554449);
    data_570426520[data_570426520_Idx][chckIndx(h_570426524, 0, (data_570426520[data_570426520_Idx]).length - 1)].Field2 = nimCopy(data_570426520[data_570426520_Idx][chckIndx(h_570426524, 0, (data_570426520[data_570426520_Idx]).length - 1)].Field2, val_570426522, NTI570425348);
    data_570426520[data_570426520_Idx][chckIndx(h_570426524, 0, (data_570426520[data_570426520_Idx]).length - 1)].Field0 = hc_570426523;

  
}

function enlarge_570426221(t_570426224) {
    var n_570426227 = [];
    n_570426227 = new Array(chckRange(mulInt((t_570426224.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_570426224.data).length, 2), 0, 2147483647) ; ++i) { n_570426227[i] = {Field0: 0, Field1: [], Field2: ({sampleId: [], rhdCts: [], gapdhCts: []})}; }    var Temporary1 = t_570426224.data; t_570426224.data = n_570426227; n_570426227 = Temporary1;    Label2: {
      var i_570426291 = 0;
      var colontmp__570429033 = 0;
      colontmp__570429033 = (n_570426227).length - 1;
      var res_570429035 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_570429035 <= colontmp__570429033)) break Label4;
            i_570426291 = res_570429035;
            var eh_570426345 = n_570426227[chckIndx(i_570426291, 0, (n_570426227).length - 1)].Field0;
            if (isFilled_771751967(eh_570426345)) {
            var j_570426349 = (eh_570426345 & (t_570426224.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_771751967(t_570426224.data[chckIndx(j_570426349, 0, (t_570426224.data).length - 1)].Field0)) break Label6;
                  j_570426349 = nextTry_771751970(j_570426349, (t_570426224.data).length - 1);
                }
            };
            rawInsert_570426515(t_570426224, t_570426224, "data", n_570426227[chckIndx(i_570426291, 0, (n_570426227).length - 1)].Field1, n_570426227[chckIndx(i_570426291, 0, (n_570426227).length - 1)].Field2, eh_570426345, j_570426349);
            }
            
            res_570429035 = addInt(res_570429035, 1);
          }
      };
    };

  
}

function rawGetKnownHC_570426702(t_570426705, key_570426706, hc_570426707) {
  var result_570426708 = 0;

  BeforeRet: {
    if (((t_570426705.data).length == 0)) {
    result_570426708 = (-1);
    break BeforeRet;
    }
    
    var h_570426759 = (hc_570426707 & (t_570426705.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_771751967(t_570426705.data[chckIndx(h_570426759, 0, (t_570426705.data).length - 1)].Field0)) break Label2;
          if (((t_570426705.data[chckIndx(h_570426759, 0, (t_570426705.data).length - 1)].Field0 == hc_570426707) && eqStrings(t_570426705.data[chckIndx(h_570426759, 0, (t_570426705.data).length - 1)].Field1, key_570426706))) {
          result_570426708 = h_570426759;
          break BeforeRet;
          }
          
          h_570426759 = nextTry_771751970(h_570426759, (t_570426705.data).length - 1);
        }
    };
    result_570426708 = subInt((-1), h_570426759);
  };

  return result_570426708;

}

function HEX5BHEX5DHEX3D_570425893(t_570425896, key_570425897, val_570425898) {
    if (((t_570425896.data).length == 0)) {
    var correctSizeHEX60gensym9_570425947 = slotsNeeded_771751978(32);
    t_570425896.counter = 0;
    t_570425896.data = new Array(chckRange(correctSizeHEX60gensym9_570425947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_570425947, 0, 2147483647) ; ++i) { t_570425896.data[i] = {Field0: 0, Field1: [], Field2: ({sampleId: [], rhdCts: [], gapdhCts: []})}; }    }
    
    var hc_570425952 = [0];
    var index_570425959 = rawGet_570425593(t_570425896, key_570425897, hc_570425952, 0);
    if ((0 <= index_570425959)) {
    t_570425896.data[chckIndx(index_570425959, 0, (t_570425896.data).length - 1)].Field2 = nimCopy(t_570425896.data[chckIndx(index_570425959, 0, (t_570425896.data).length - 1)].Field2, val_570425898, NTI570425348);
    }
    else {
      if (((t_570425896.data).length == 0)) {
      var correctSizeHEX60gensym12_570426061 = slotsNeeded_771751978(32);
      t_570425896.counter = 0;
      t_570425896.data = new Array(chckRange(correctSizeHEX60gensym12_570426061, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_570426061, 0, 2147483647) ; ++i) { t_570425896.data[i] = {Field0: 0, Field1: [], Field2: ({sampleId: [], rhdCts: [], gapdhCts: []})}; }      }
      
      if (mustRehash_570426066(t_570425896)) {
      enlarge_570426221(t_570425896);
      index_570425959 = rawGetKnownHC_570426702(t_570425896, key_570425897, hc_570425952[0]);
      }
      
      index_570425959 = subInt((-1), index_570425959);
      rawInsert_570426515(t_570425896, t_570425896, "data", key_570425897, val_570425898, hc_570425952[0], index_570425959);
      t_570425896.counter = addInt(t_570425896.counter, 1);
    }
    

  
}

function raiseKeyError_570427060(key_570427062) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_570427062 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_570426993(t_570426996, key_570426997) {
  var result_570426998 = null;

    var hcHEX60gensym22_570426999 = [0];
    var indexHEX60gensym22_570427006 = rawGet_570425593(t_570426996, key_570426997, hcHEX60gensym22_570426999, 0);
    if ((0 <= indexHEX60gensym22_570427006)) {
    result_570426998 = t_570426996.data[chckIndx(indexHEX60gensym22_570427006, 0, (t_570426996.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_570427060(key_570426997);
    }
    

  return result_570426998;

}

function parseExportFile_570425428(contents_570425429) {
              var Temporary5;

  var result_570425437 = [({data: [], counter: 0})];

    Label1: {
      var i_570425478 = 0;
      var line_570425479 = [];
      var colontmp__570428972 = [];
      colontmp__570428972 = nsuSplitLines(contents_570425429, false);
      var i_570428974 = 0;
      var L_570428975 = (colontmp__570428972).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570428974 < L_570428975)) break Label3;
            var colontmp__570428978 = nimCopy(null, {Field0: i_570428974, Field1: nimCopy(null, colontmp__570428972[chckIndx(i_570428974, 0, (colontmp__570428972).length - 1)], NTI33554449)}, NTI570425405);
            i_570425478 = colontmp__570428978["Field0"];
            line_570425479 = colontmp__570428978["Field1"];
            Label4: {
              if (((line_570425479).length == 0)) {
              break Label4;
              }
              
              if ((line_570425479[chckIndx(0, 0, (line_570425479).length - 1)] == 35)) {
              rawEcho(line_570425479);
              break Label4;
              }
              
              var normalized_570425480 = nsuReplaceChar(line_570425479, 59, 44);
              var fields_570425481 = nsuSplitChar(normalized_570425480, 44, (-1));
              if (contains_704644935(fields_570425481[chckIndx(0, 0, (fields_570425481).length - 1)], [87,101,108,108,32,80,111,115,105,116,105,111,110])) {
              break Label4;
              }
              
              if (((fields_570425481).length < 4)) {
              outputAndRaise_570425377(([102,101,108,32,97,110,116,97,108,32,102,195,164,108,116,32,40,110,61] || []).concat(HEX24_385875976((fields_570425481).length) || [],[41,32,112,195,165,32,114,97,100,32] || [],HEX24_385875976(i_570425478) || [],[58,32] || [],line_570425479 || []));
              }
              
              var sampleId_570425488 = nsuStrip(fields_570425481[chckIndx(1, 0, (fields_570425481).length - 1)], true, true, ConstSet3);
              var gene_570425489 = nsuStrip(fields_570425481[chckIndx(2, 0, (fields_570425481).length - 1)], true, true, ConstSet4);
              if (!(contains_1040187441([[82,72,68], [71,65,80,68,72]], gene_570425489))) {
              outputAndRaise_570425377(([111,107,195,164,110,100,32,103,101,110,32,34] || []).concat(gene_570425489 || [],[34,32,112,195,165,32,114,97,100,32] || [],HEX24_385875976(i_570425478) || [],[58,32] || [],line_570425479 || []));
              }
              
              var ctRaw_570425536 = nsuStrip(fields_570425481[chckIndx(3, 0, (fields_570425481).length - 1)], true, true, ConstSet5);
              if (eqStrings(ctRaw_570425536, [85,110,100,101,116,101,114,109,105,110,101,100])) {
              Temporary5 = NaN;
              }
              else {
              Temporary5 = nsuParseFloat(ctRaw_570425536);
              }
              
              var ct_570425537 = Temporary5;
              if (!(contains_570425580(result_570425437[0], sampleId_570425488))) {
              HEX5BHEX5DHEX3D_570425893(result_570425437[0], sampleId_570425488, {sampleId: nimCopy(null, sampleId_570425488, NTI33554449), rhdCts: [], gapdhCts: []});
              }
              
              switch (toJSStr(gene_570425489)) {
              case "RHD":
                HEX5BHEX5D_570426993(result_570425437[0], sampleId_570425488).rhdCts.push(ct_570425537);;
                break;
              case "GAPDH":
                HEX5BHEX5D_570426993(result_570425437[0], sampleId_570425488).gapdhCts.push(ct_570425537);;
                break;
              default: 
                outputAndRaise_570425377(([105,110,116,101,114,110,116,32,102,101,108,58,32,111,107,195,164,110,100,32,103,101,110,32,34] || []).concat(gene_570425489 || [],[34,32,112,195,165,32,114,97,100,32] || [],HEX24_385875976(i_570425478) || [],[58,32] || [],line_570425479 || []));
                break;
              }
            };
            i_570428974 = addInt(i_570428974, 1);
            if (!(((colontmp__570428972).length == L_570428975))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (!(contains_570425580(result_570425437[0], [78,84,67]))) {
    outputAndRaise_570425377(makeNimstrLit("f\xC3\xB6rv\xC3\xA4ntades en negativ kontroll \"NTC\" men det fanns ingen i filen"));
    }
    else {
    if (!(contains_570425580(result_570425437[0], [80,67]))) {
    outputAndRaise_570425377(makeNimstrLit("f\xC3\xB6rv\xC3\xA4ntades en positiv kontroll \"PC\" men det fanns ingen i filen"));
    }
    }

  return result_570425437[0];

}

function sum_570428542(x_570428544) {
  var result_570428545 = 0.0;

    Label1: {
      var i_570428559 = 0.0;
      var i_570429072 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429072 < (x_570428544).length)) break Label3;
            i_570428559 = x_570428544[chckIndx(i_570429072, 0, (x_570428544).length - 1)];
            result_570428545 = (result_570428545 + i_570428559);
            i_570429072 = addInt(i_570429072, 1);
          }
      };
    };

  return result_570428545;

}

function HEX5BHEX5D_570428345(t_570428348, key_570428349) {
  var result_570428350 = ({sampleId: [], rhdCts: [], gapdhCts: []});

    var hcHEX60gensym20_570428351 = [0];
    var indexHEX60gensym20_570428358 = rawGet_570425593(t_570428348, key_570428349, hcHEX60gensym20_570428351, 0);
    if ((0 <= indexHEX60gensym20_570428358)) {
    result_570428350 = nimCopy(result_570428350, t_570428348.data[chckIndx(indexHEX60gensym20_570428358, 0, (t_570428348.data).length - 1)].Field2, NTI570425348);
    }
    else {
    raiseKeyError_570427060(key_570428349);
    }
    

  return result_570428350;

}

function nimFloatToString_402653337(a_402653338) {
  var result_402653339 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_402653338))
      result_402653339 = a_402653338 === 0 && 1 / a_402653338 < 0 ? "-0.0" : a_402653338+".0"
    else {
      result_402653339 = a_402653338+""
      if(nimOnlyDigitsOrMinus(result_402653339)){
        result_402653339 = a_402653338+".0"
      }
    }
  

  return result_402653339;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_402653337(x_33557566));

  
}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

    addFloat_33557563(result_33557562, 0, x_33557561);

  return result_33557562[0];

}

function verifyNegativeControl_570428463(ntcsample_570428464) {
    Label1: {
      var res_570428468 = 0.0;
      var i_570429076 = 0;
      var L_570429077 = (ntcsample_570428464.rhdCts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570429076 < L_570429077)) break Label3;
            res_570428468 = ntcsample_570428464.rhdCts[chckIndx(i_570429076, 0, (ntcsample_570428464.rhdCts).length - 1)];
            if (!(isNaN(res_570428468))) {
            outputAndRaise_570425377(([110,101,103,97,116,105,118,32,82,72,68,45,107,111,110,116,114,111,108,108,32,195,164,114,32,112,111,115,105,116,105,118,58,32] || []).concat(HEX24_33557559(res_570428468) || []));
            }
            
            i_570429076 = addInt(i_570429076, 1);
            if (!(((ntcsample_570428464.rhdCts).length == L_570429077))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var res_570428475 = 0.0;
      var i_570429080 = 0;
      var L_570429081 = (ntcsample_570428464.gapdhCts).length;
      Label5: {
          Label6: while (true) {
          if (!(i_570429080 < L_570429081)) break Label6;
            res_570428475 = ntcsample_570428464.gapdhCts[chckIndx(i_570429080, 0, (ntcsample_570428464.gapdhCts).length - 1)];
            if (!(isNaN(res_570428475))) {
            outputAndRaise_570425377(([110,101,103,97,116,105,118,32,71,65,80,68,72,45,107,111,110,116,114,111,108,108,32,195,164,114,32,112,111,115,105,116,105,118,58,32] || []).concat(HEX24_33557559(res_570428475) || []));
            }
            
            i_570429080 = addInt(i_570429080, 1);
            if (!(((ntcsample_570428464.gapdhCts).length == L_570429081))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function newSeq_536871460(len_536871462) {
  var result_536871463 = [];

    result_536871463 = new Array(len_536871462); for (var i = 0 ; i < len_536871462 ; ++i) { result_536871463[i] = []; }
  return result_536871463;

}

function HEX2A_805306376(x_805306377, order_805306378) {
  var result_805306379 = 0;

    var y_805306384 = subInt(order_805306378, 1);
    result_805306379 = subInt((x_805306377 ^ y_805306384), y_805306384);

  return result_805306379;

}

function mergeAlt_570428227(a_570428229, b_570428230, lo_570428231, m_570428232, hi_570428233, cmp_570428236, order_570428237) {
  BeforeRet: {
    if ((HEX2A_805306376(cmp_570428236(a_570428229[chckIndx(m_570428232, 0, (a_570428229).length - 1)], a_570428229[chckIndx(addInt(m_570428232, 1), 0, (a_570428229).length - 1)]), order_570428237) <= 0)) {
    break BeforeRet;
    }
    
    var j_570428238 = lo_570428231;
    if (!((j_570428238 <= m_570428232))) {
    failedAssertImpl_268435541([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_570428244 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_570428238 <= m_570428232)) break Label2;
          b_570428230[chckIndx(bb_570428244, 0, (b_570428230).length - 1)] = a_570428229[chckIndx(j_570428238, 0, (a_570428229).length - 1)];
          bb_570428244 = addInt(bb_570428244, 1);
          j_570428238 = addInt(j_570428238, 1);
        }
    };
    var i_570428255 = 0;
    var k_570428256 = lo_570428231;
    Label3: {
        Label4: while (true) {
        if (!((k_570428256 < j_570428238) && (j_570428238 <= hi_570428233))) break Label4;
          if ((HEX2A_805306376(cmp_570428236(b_570428230[chckIndx(i_570428255, 0, (b_570428230).length - 1)], a_570428229[chckIndx(j_570428238, 0, (a_570428229).length - 1)]), order_570428237) <= 0)) {
          a_570428229[chckIndx(k_570428256, 0, (a_570428229).length - 1)] = b_570428230[chckIndx(i_570428255, 0, (b_570428230).length - 1)];
          i_570428255 = addInt(i_570428255, 1);
          }
          else {
            a_570428229[chckIndx(k_570428256, 0, (a_570428229).length - 1)] = a_570428229[chckIndx(j_570428238, 0, (a_570428229).length - 1)];
            j_570428238 = addInt(j_570428238, 1);
          }
          
          k_570428256 = addInt(k_570428256, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_570428256 < j_570428238)) break Label6;
          a_570428229[chckIndx(k_570428256, 0, (a_570428229).length - 1)] = b_570428230[chckIndx(i_570428255, 0, (b_570428230).length - 1)];
          k_570428256 = addInt(k_570428256, 1);
          i_570428255 = addInt(i_570428255, 1);
        }
    };
  };

  
}

function sort_570428210(a_570428212, cmp_570428215, order_570428216) {
    var n_570428220 = (a_570428212).length;
    var b_570428224 = newSeq_536871460(chckRange(divInt(n_570428220, 2), 0, 2147483647));
    var s_570428225 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_570428225 < n_570428220)) break Label2;
          var m_570428226 = subInt(subInt(n_570428220, 1), s_570428225);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_570428226)) break Label4;
                mergeAlt_570428227(a_570428212, b_570428224, nimMax(addInt(subInt(m_570428226, s_570428225), 1), 0), m_570428226, addInt(m_570428226, s_570428225), cmp_570428215, order_570428216);
                m_570428226 = subInt(m_570428226, mulInt(s_570428225, 2));
              }
          };
          s_570428225 = mulInt(s_570428225, 2);
        }
    };

  
}

function sorted_570428188(a_570428190, cmp_570428193, order_570428194) {
  var result_570428195 = [];

    result_570428195 = nimCopy(null, newSeq_536871460(chckRange((a_570428190).length, 0, 2147483647)), NTI536871232);
    Label1: {
      var i_570428209 = 0;
      var colontmp__570429084 = 0;
      colontmp__570429084 = (a_570428190).length - 1;
      var res_570429085 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570429085 <= colontmp__570429084)) break Label3;
            i_570428209 = res_570429085;
            result_570428195[chckIndx(i_570428209, 0, (result_570428195).length - 1)] = nimCopy(null, a_570428190[chckIndx(i_570428209, 0, (a_570428190).length - 1)], NTI33554449);
            res_570429085 = addInt(res_570429085, 1);
          }
      };
    };
    sort_570428210(result_570428195, cmp_570428193, order_570428194);

  return result_570428195;

}

function len_570428003(t_570428006) {
  var result_570428007 = 0;

    result_570428007 = t_570428006.counter;

  return result_570428007;

}

function cmpStrings(a_33557033, b_33557034) {
        if (a_33557033 == b_33557034) return 0;
    if (!a_33557033) return -1;
    if (!b_33557034) return 1;
    for (var i = 0; i < a_33557033.length && i < b_33557034.length; i++) {
      var result = a_33557033[i] - b_33557034[i];
      if (result != 0) return result;
    }
    return a_33557033.length - b_33557034.length;
  

  
}

function cmp_33555881(x_33555882, y_33555883) {
  var result_33557039 = 0;

    result_33557039 = cmpStrings(x_33555882, y_33555883);

  return result_33557039;

}

function HEX5BHEX5D_704644351(s_704644354, x_704644355) {
  var result_704644356 = [];

    var a_704644358 = x_704644355.a;
    var L_704644360 = addInt(subInt(x_704644355.b, a_704644358), 1);
    result_704644356 = nimCopy(null, mnewString(chckRange(L_704644360, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_704644365 = 0;
      var i_570429093 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429093 < L_704644360)) break Label3;
            i_704644365 = i_570429093;
            result_704644356[chckIndx(i_704644365, 0, (result_704644356).length - 1)] = s_704644354[chckIndx(addInt(i_704644365, a_704644358), 0, (s_704644354).length - 1)];
            i_570429093 = addInt(i_570429093, 1);
          }
      };
    };

  return result_704644356;

}

function HEX2EHEX2E_1124073520(a_1124073523, b_1124073524) {
  var result_1124073525 = ({a: 0, b: 0});

    result_1124073525 = nimCopy(result_1124073525, {a: a_1124073523, b: b_1124073524}, NTI872415301);

  return result_1124073525;

}

function cmpSampleId_570427671(s1_570427672, s2_570427673) {
  var result_570427674 = 0;

    var s1start_570427675 = nimMax(subInt((s1_570427672).length, 11), 0);
    var s2start_570427676 = nimMax(subInt((s2_570427673).length, 11), 0);
    result_570427674 = cmp_33555881(HEX5BHEX5D_704644351(s1_570427672, HEX2EHEX2E_1124073520(s1start_570427675, subInt((s1_570427672).length, 1))), HEX5BHEX5D_704644351(s2_570427673, HEX2EHEX2E_1124073520(s2start_570427676, subInt((s2_570427673).length, 1))));

  return result_570427674;

}

function checkPosNeg_570427343(sample_570427344, rawSample_570427345) {
    var npos_570427346 = 0;
    Label1: {
      var res_570427369 = 0.0;
      var i_570429096 = 0;
      var L_570429097 = (rawSample_570427345.rhdCts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570429096 < L_570429097)) break Label3;
            res_570427369 = rawSample_570427345.rhdCts[chckIndx(i_570429096, 0, (rawSample_570427345.rhdCts).length - 1)];
            if ((isNaN(res_570427369) || (45.0 <= res_570427369))) {
            sample_570427344.pattern.push.apply(sample_570427344.pattern, [45,32]);;
            }
            else {
            if ((res_570427369 < 45.0)) {
            npos_570427346 = addInt(npos_570427346, 1);
            sample_570427344.pattern.push.apply(sample_570427344.pattern, [43,32]);;
            }
            }
            i_570429096 = addInt(i_570429096, 1);
            if (!(((rawSample_570427345.rhdCts).length == L_570429097))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sample_570427344.pattern = nimCopy(null, HEX5BHEX5D_704644351(sample_570427344.pattern, HEX2EHEX2E_1124073520(0, 4)), NTI33554449);
    if ((npos_570427346 == 0)) {
    sample_570427344.status = 1;
    }
    else {
    if ((npos_570427346 == 1)) {
    sample_570427344.status = 2;
    }
    else {
    if ((1 < npos_570427346)) {
    sample_570427344.status = 0;
    }
    }}

  
}

function find_570427483(a_570427486, item_570427487) {
  var result_570427488 = 0;

  BeforeRet: {
    result_570427488 = 0;
    Label1: {
      var i_570427502 = 0;
      var i_570429105 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570429105 < (a_570427486).length)) break Label3;
            i_570427502 = a_570427486[chckIndx(i_570429105, 0, (a_570427486).length - 1)];
            if ((i_570427502 == item_570427487)) {
            break BeforeRet;
            }
            
            result_570427488 = addInt(result_570427488, 1);
            i_570429105 = addInt(i_570429105, 1);
          }
      };
    };
    result_570427488 = (-1);
  };

  return result_570427488;

}

function contains_570427478(a_570427480, item_570427481) {
  var result_570427482 = false;

  BeforeRet: {
    result_570427482 = (0 <= find_570427483(a_570427480, item_570427481));
    break BeforeRet;
  };

  return result_570427482;

}

function checkDnaIsLow_570427431(sample_570427432, rawSample_570427433, gapdhMax_570427434) {
  var result_570427435 = false;

  BeforeRet: {
    if (contains_570427478(new Uint8Array([1, 2]), sample_570427432.status)) {
    Label1: {
      var ct_570427532 = 0.0;
      var i_570429100 = 0;
      var L_570429101 = (rawSample_570427433.gapdhCts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570429100 < L_570429101)) break Label3;
            ct_570427532 = rawSample_570427433.gapdhCts[chckIndx(i_570429100, 0, (rawSample_570427433.gapdhCts).length - 1)];
            if ((gapdhMax_570427434 < ct_570427532)) {
            sample_570427432.status = 3;
            result_570427435 = true;
            break BeforeRet;
            }
            
            i_570429100 = addInt(i_570429100, 1);
            if (!(((rawSample_570427433.gapdhCts).length == L_570429101))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  };

  return result_570427435;

}

function checkDnaIsHigh_570427564(sample_570427565, rawSample_570427566, gapdhMin_570427567) {
  var result_570427568 = false;

  BeforeRet: {
    if (contains_570427478(new Uint8Array([1, 2]), sample_570427565.status)) {
    Label1: {
      var ct_570427618 = 0.0;
      var i_570429108 = 0;
      var L_570429109 = (rawSample_570427566.gapdhCts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570429108 < L_570429109)) break Label3;
            ct_570427618 = rawSample_570427566.gapdhCts[chckIndx(i_570429108, 0, (rawSample_570427566.gapdhCts).length - 1)];
            if ((ct_570427618 < gapdhMin_570427567)) {
            sample_570427565.status = 4;
            result_570427568 = true;
            break BeforeRet;
            }
            
            i_570429108 = addInt(i_570429108, 1);
            if (!(((rawSample_570427566.gapdhCts).length == L_570429109))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
  };

  return result_570427568;

}

function min_570427627(x_570427629) {
  var result_570427630 = 0.0;

    result_570427630 = x_570427629[chckIndx(0, 0, (x_570427629).length - 1)];
    Label1: {
      var i_570427638 = 0;
      var colontmp__570429112 = 0;
      colontmp__570429112 = (x_570427629).length - 1;
      var res_570429113 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570429113 <= colontmp__570429112)) break Label3;
            i_570427638 = res_570429113;
            if ((x_570427629[chckIndx(i_570427638, 0, (x_570427629).length - 1)] < result_570427630)) {
            result_570427630 = x_570427629[chckIndx(i_570427638, 0, (x_570427629).length - 1)];
            }
            
            res_570429113 = addInt(res_570429113, 1);
          }
      };
    };

  return result_570427630;

}

function max_570427639(x_570427641) {
  var result_570427642 = 0.0;

    result_570427642 = x_570427641[chckIndx(0, 0, (x_570427641).length - 1)];
    Label1: {
      var i_570427650 = 0;
      var colontmp__570429116 = 0;
      colontmp__570429116 = (x_570427641).length - 1;
      var res_570429117 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570429117 <= colontmp__570429116)) break Label3;
            i_570427650 = res_570429117;
            if ((result_570427642 < x_570427641[chckIndx(i_570427650, 0, (x_570427641).length - 1)])) {
            result_570427642 = x_570427641[chckIndx(i_570427650, 0, (x_570427641).length - 1)];
            }
            
            res_570429117 = addInt(res_570429117, 1);
          }
      };
    };

  return result_570427642;

}

function checkRhdHigh_570427619(sample_570427620, rawSample_570427621) {
  var result_570427622 = false;

  BeforeRet: {
    if ((sample_570427620.status == 0)) {
    if ((min_570427627(rawSample_570427621.rhdCts) < max_570427639(rawSample_570427621.gapdhCts))) {
    sample_570427620.status = 5;
    result_570427622 = true;
    break BeforeRet;
    }
    
    }
    
  };

  return result_570427622;

}

function analyzeSample_570427666(rawSample_570427667, gapdhMin_570427668, gapdhMax_570427669) {
  var result_570427670 = [({sampleId: [], pattern: [], status: 0})];

  BeforeRet: {
    result_570427670[0].sampleId = nimCopy(null, rawSample_570427667.sampleId, NTI33554449);
    checkPosNeg_570427343(result_570427670[0], rawSample_570427667);
    if (checkDnaIsLow_570427431(result_570427670[0], rawSample_570427667, gapdhMax_570427669)) {
    break BeforeRet;
    }
    
    if (checkDnaIsHigh_570427564(result_570427670[0], rawSample_570427667, gapdhMin_570427668)) {
    break BeforeRet;
    }
    
    if (checkRhdHigh_570427619(result_570427670[0], rawSample_570427667)) {
    break BeforeRet;
    }
    
  };

  return result_570427670[0];

}

function analyzeResults_570428479(samples_570428482) {
  var result_570428483 = [];

    var gapdhSum_570428560 = sum_570428542(HEX5BHEX5D_570428345(samples_570428482, [80,67]).gapdhCts);
    var gapdhMean_570428561 = (gapdhSum_570428560 / 2.0);
    var gapdhMin_570428562 = (gapdhMean_570428561 - 1.5);
    var gapdhMax_570428563 = (gapdhMean_570428561 + 6.4);
    verifyNegativeControl_570428463(HEX5BHEX5D_570428345(samples_570428482, [78,84,67]));
    Label1: {
      var sample_570428622 = ({sampleId: [], rhdCts: [], gapdhCts: []});
      var resultHEX60gensym33_570429056 = [];
      Label2: {
        var xHEX60gensym33_570429058 = [];
        var L_570429059 = len_570428003(samples_570428482);
        Label3: {
          var h_570429061 = 0;
          var colontmp__570429062 = 0;
          colontmp__570429062 = (samples_570428482.data).length - 1;
          var res_570429063 = 0;
          Label4: {
              Label5: while (true) {
              if (!(res_570429063 <= colontmp__570429062)) break Label5;
                h_570429061 = res_570429063;
                if (isFilled_771751967(samples_570428482.data[chckIndx(h_570429061, 0, (samples_570428482.data).length - 1)].Field0)) {
                xHEX60gensym33_570429058 = samples_570428482.data[chckIndx(h_570429061, 0, (samples_570428482.data).length - 1)]["Field1"];
                var Temporary6 = nimCopy(null, xHEX60gensym33_570429058, NTI33554449);
                resultHEX60gensym33_570429056.push(Temporary6);;
                if (!((len_570428003(samples_570428482) == L_570429059))) {
                failedAssertImpl_268435541(makeNimstrLit("tables.nim(742, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_570429063 = addInt(res_570429063, 1);
              }
          };
        };
      };
      var sampleIds_570429055 = sorted_570428188(resultHEX60gensym33_570429056, cmpSampleId_570427671, 1);
      Label7: {
        var sampleId_570429066 = [];
        var i_570429067 = 0;
        var L_570429068 = (sampleIds_570429055).length;
        Label8: {
            Label9: while (true) {
            if (!(i_570429067 < L_570429068)) break Label9;
              sampleId_570429066 = sampleIds_570429055[chckIndx(i_570429067, 0, (sampleIds_570429055).length - 1)];
              sample_570428622 = nimCopy(sample_570428622, HEX5BHEX5D_570428345(samples_570428482, sampleId_570429066), NTI570425348);
              Label10: {
                if ((eqStrings(sample_570428622.sampleId, [78,84,67]) || eqStrings(sample_570428622.sampleId, [80,67]))) {
                break Label10;
                }
                
                var final_570428623 = analyzeSample_570427666(sample_570428622, gapdhMin_570428562, gapdhMax_570428563);
                var Temporary11 = nimCopy(null, final_570428623, NTI570425349);
                result_570428483.push(Temporary11);;
              };
              i_570429067 = addInt(i_570429067, 1);
              if (!(((sampleIds_570429055).length == L_570429068))) {
              failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };

  return result_570428483;

}

function nsuJoinSep(a_704644651, sep_704644652) {
  var result_704644653 = [];

    if ((0 < (a_704644651).length)) {
    var L_704644660 = mulInt((sep_704644652).length, subInt((a_704644651).length, 1));
    Label1: {
      var i_704644668 = 0;
      var colontmp__570429125 = 0;
      colontmp__570429125 = (a_704644651).length - 1;
      var res_570429126 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_570429126 <= colontmp__570429125)) break Label3;
            i_704644668 = res_570429126;
            L_704644660 = addInt(L_704644660, (a_704644651[chckIndx(i_704644668, 0, (a_704644651).length - 1)]).length);
            res_570429126 = addInt(res_570429126, 1);
          }
      };
    };
    result_704644653 = nimCopy(null, mnewString(0), NTI33554449);
    result_704644653.push.apply(result_704644653, a_704644651[chckIndx(0, 0, (a_704644651).length - 1)]);;
    Label4: {
      var i_704644681 = 0;
      var colontmp__570429129 = 0;
      colontmp__570429129 = (a_704644651).length - 1;
      var res_570429130 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_570429130 <= colontmp__570429129)) break Label6;
            i_704644681 = res_570429130;
            result_704644653.push.apply(result_704644653, sep_704644652);;
            result_704644653.push.apply(result_704644653, a_704644651[chckIndx(i_704644681, 0, (a_704644651).length - 1)]);;
            res_570429130 = addInt(res_570429130, 1);
          }
      };
    };
    }
    else {
      result_704644653 = nimCopy(null, [], NTI33554449);
    }
    

  return result_704644653;

}

function toResultTable_570428647(samples_570428648) {
  var result_570428649 = [];

    result_570428649 = nimCopy(null, nsuJoinSep(header_570428646, [9]), NTI33554449);
    result_570428649.push.apply(result_570428649, [10]);;
    Label1: {
      var sample_570428672 = ({sampleId: [], pattern: [], status: 0});
      var i_570429121 = 0;
      var L_570429122 = (samples_570428648).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570429121 < L_570429122)) break Label3;
            sample_570428672 = samples_570428648[chckIndx(i_570429121, 0, (samples_570428648).length - 1)];
            result_570428649.push.apply(result_570428649, sample_570428672.sampleId);;
            result_570428649.push.apply(result_570428649, [9]);;
            result_570428649.push.apply(result_570428649, sample_570428672.pattern);;
            result_570428649.push.apply(result_570428649, [9]);;
            result_570428649.push.apply(result_570428649, reprEnum(sample_570428672.status, NTI570425347));;
            result_570428649.push.apply(result_570428649, [9]);;
            result_570428649.push.apply(result_570428649, codes_570425374[chckIndx(sample_570428672.status, 0, (codes_570425374).length - 1)]);;
            result_570428649.push.apply(result_570428649, [10]);;
            i_570429121 = addInt(i_570429121, 1);
            if (!(((samples_570428648).length == L_570429122))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_570428649;

}

function encode_721420340(s_721420342, safe_721420343) {
      var Temporary2;
      var Temporary3;

  var result_721420344 = [];

    Label1: {
      if (safe_721420343) {
      Temporary2 = cb64safe_721420293;
      }
      else {
      Temporary2 = cb64_721420292;
      }
      
      var lookupTable_721420526 = Temporary2;
      if (result_721420344.length < (Temporary3 = chckRange(addInt(divInt(mulInt((s_721420342).length, 4), 3), 6), 0, 2147483647), Temporary3)) { for (var i = result_721420344.length; i < Temporary3; ++i) result_721420344.push(0); }
         else {result_721420344.length = Temporary3; };
      var paddingHEX60gensym39_721420542 = modInt((s_721420342).length, 3);
      var inputEndsHEX60gensym39_721420546 = subInt((s_721420342).length, paddingHEX60gensym39_721420542);
      var inputIndexHEX60gensym39_721420547 = 0;
      var outputIndexHEX60gensym39_721420548 = 0;
      var nHEX60gensym39_721420549 = 0;
      var bHEX60gensym39_721420550 = 0;
      Label4: {
          Label5: while (true) {
          if (!!((inputIndexHEX60gensym39_721420547 == inputEndsHEX60gensym39_721420546))) break Label5;
            bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
            nHEX60gensym39_721420549 = ((bHEX60gensym39_721420550 << 16) >>> 0);
            inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
            bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
            nHEX60gensym39_721420549 = ((nHEX60gensym39_721420549 | ((bHEX60gensym39_721420550 << 8) >>> 0)) >>> 0);
            inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
            bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
            nHEX60gensym39_721420549 = ((nHEX60gensym39_721420549 | ((bHEX60gensym39_721420550 << 0) >>> 0)) >>> 0);
            inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
            result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 18) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
            outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
            result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 12) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
            outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
            result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 6) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
            outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
            result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 0) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
            outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
          }
      };
      if ((paddingHEX60gensym39_721420542 == 1)) {
      bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
      nHEX60gensym39_721420549 = ((bHEX60gensym39_721420550 << 16) >>> 0);
      inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 18) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 12) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = 61;
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = 61;
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      }
      else {
      if ((paddingHEX60gensym39_721420542 == 2)) {
      bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
      nHEX60gensym39_721420549 = ((bHEX60gensym39_721420550 << 16) >>> 0);
      inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
      bHEX60gensym39_721420550 = s_721420342[chckIndx(inputIndexHEX60gensym39_721420547, 0, (s_721420342).length - 1)];
      nHEX60gensym39_721420549 = ((nHEX60gensym39_721420549 | ((bHEX60gensym39_721420550 << 8) >>> 0)) >>> 0);
      inputIndexHEX60gensym39_721420547 = addInt(inputIndexHEX60gensym39_721420547, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 18) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 12) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = lookupTable_721420526[chckIndx((((nHEX60gensym39_721420549 >>> 6) & 63) >>> 0), 0, (lookupTable_721420526).length - 1)];
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      result_721420344[chckIndx(outputIndexHEX60gensym39_721420548, 0, (result_721420344).length - 1)] = 61;
      outputIndexHEX60gensym39_721420548 = addInt(outputIndexHEX60gensym39_721420548, 1);
      }
      }
      if (result_721420344.length < chckRange(outputIndexHEX60gensym39_721420548, 0, 2147483647)) { for (var i = result_721420344.length; i < chckRange(outputIndexHEX60gensym39_721420548, 0, 2147483647); ++i) result_721420344.push(0); }
         else {result_721420344.length = chckRange(outputIndexHEX60gensym39_721420548, 0, 2147483647); };
    };

  return result_721420344;

}

function toDataUrl_570427324(contents_570427325) {
  var result_570427326 = [];

    result_570427326 = nimCopy(null, ([100,97,116,97,58,116,101,120,116,47,112,108,97,105,110,59,98,97,115,101,54,52,44] || []).concat(encode_721420340(contents_570427325, false) || []), NTI33554449);

  return result_570427326;

}

function nsuEndsWith(s_704644546, suffix_704644547) {
  var result_704644548 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_704644554 = (suffix_704644547).length;
    var sLenHEX60gensym153_704644555 = (s_704644546).length;
    var iHEX60gensym153_704644556 = 0;
    var jHEX60gensym153_704644557 = subInt(sLenHEX60gensym153_704644555, suffixLenHEX60gensym153_704644554);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557)) && (addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557) < sLenHEX60gensym153_704644555))) break Label2;
          if (!((s_704644546[chckIndx(addInt(iHEX60gensym153_704644556, jHEX60gensym153_704644557), 0, (s_704644546).length - 1)] == suffix_704644547[chckIndx(iHEX60gensym153_704644556, 0, (suffix_704644547).length - 1)]))) {
          result_704644548 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_704644556 = addInt(iHEX60gensym153_704644556, 1);
        }
    };
    if ((suffixLenHEX60gensym153_704644554 <= iHEX60gensym153_704644556)) {
    result_704644548 = true;
    break BeforeRet;
    }
    
  };

  return result_704644548;

}

function nsuRemoveSuffixString(s_704644618, s_704644618_Idx, suffix_704644619) {
    var newLen_704644620 = (s_704644618[s_704644618_Idx]).length;
    if (nsuEndsWith(s_704644618[s_704644618_Idx], suffix_704644619)) {
    newLen_704644620 = subInt(newLen_704644620, (suffix_704644619).length);
    if (s_704644618[s_704644618_Idx].length < chckRange(newLen_704644620, 0, 2147483647)) { for (var i = s_704644618[s_704644618_Idx].length; i < chckRange(newLen_704644620, 0, 2147483647); ++i) s_704644618[s_704644618_Idx].push(0); }
         else {s_704644618[s_704644618_Idx].length = chckRange(newLen_704644620, 0, 2147483647); };
    }
    

  
}

function monthday_788530507(dt_788530508) {
  var result_788530509 = 0;

    if (!(!((dt_788530508.monthdayZero == 0)))) {
    failedAssertImpl_268435541(makeNimstrLit("times.nim(1078, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_788530509 = dt_788530508.monthdayZero;

  return result_788530509;

}

function nsuIntToStr(x_704643920, minchars_704643921) {
  var result_704643922 = [];

    result_704643922 = nimCopy(null, HEX24_385875976(absInt(x_704643920)), NTI33554449);
    Label1: {
      var i_704643927 = 0;
      var colontmp__570429143 = 0;
      colontmp__570429143 = subInt(minchars_704643921, (result_704643922).length);
      var res_570429144 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570429144 <= colontmp__570429143)) break Label3;
            i_704643927 = res_570429144;
            result_704643922 = nimCopy(null, [48].concat(result_704643922 || []), NTI33554449);
            res_570429144 = addInt(res_570429144, 1);
          }
      };
    };
    if ((x_704643920 < 0)) {
    result_704643922 = nimCopy(null, [45].concat(result_704643922 || []), NTI33554449);
    }
    

  return result_704643922;

}

function HEX2B_788529174(a_788529175, b_788529176) {
  var result_788529177 = 0;

    result_788529177 = (a_788529175 + b_788529176);

  return result_788529177;

}

function HEX2D_788529182(a_788529183, b_788529184) {
  var result_788529185 = 0;

    result_788529185 = (a_788529183 - b_788529184);

  return result_788529185;

}

function getWeeksInIsoYear_788529516(y_788529517) {
    var Temporary1;
    var Temporary2;

  var result_788529518 = 0;

    var y_788529519 = y_788529517;
    if ((y_788529519 < 0)) {
    Temporary1 = HEX2B_788529174(400, modInt(y_788529519, 400));
    }
    else {
    Temporary1 = y_788529519;
    }
    
    y_788529519 = Temporary1;
    var p_788529520 = modInt(HEX2B_788529174(HEX2D_788529182(HEX2B_788529174(y_788529519, divInt(y_788529519, 4)), divInt(y_788529519, 100)), divInt(y_788529519, 400)), 7);
    var y1_788529521 = HEX2D_788529182(y_788529519, 1);
    var p1_788529522 = modInt(HEX2B_788529174(HEX2D_788529182(HEX2B_788529174(y1_788529521, divInt(y1_788529521, 4)), divInt(y1_788529521, 100)), divInt(y1_788529521, 400)), 7);
    if (((p_788529520 == 4) || (p1_788529522 == 3))) {
    Temporary2 = 53;
    }
    else {
    Temporary2 = 52;
    }
    
    result_788529518 = Temporary2;

  return result_788529518;

}

function getIsoWeekAndYear_788529558(dt_788529559) {
    var Temporary1;

  var result_788529562 = {Field0: 0, Field1: 0};

    var w_788529563 = divInt(HEX2B_788529174(HEX2D_788529182(dt_788529559.yearday, ((dt_788529559.weekday) | 0)), 10), 7);
    if ((w_788529563 < 1)) {
    Temporary1 = {Field0: getWeeksInIsoYear_788529516(HEX2D_788529182(dt_788529559.year, 1)), Field1: HEX2D_788529182(dt_788529559.year, 1)};
    }
    else {
    if ((getWeeksInIsoYear_788529516(dt_788529559.year) < w_788529563)) {
    Temporary1 = {Field0: 1, Field1: HEX2B_788529174(dt_788529559.year, 1)};
    }
    else {
    Temporary1 = {Field0: nimCopy(null, chckRange(w_788529563, 1, 53), NTI788529182), Field1: dt_788529559.year};
    }
    }
    result_788529562 = nimCopy(result_788529562, Temporary1, NTI788529466);

  return result_788529562;

}

function month_788530515(dt_788530516) {
  var result_788530517 = 0;

    if (!(!((dt_788530516.monthdayZero == 0)))) {
    failedAssertImpl_268435541(makeNimstrLit("times.nim(1085, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_788530517 = dt_788530516.monthZero;

  return result_788530517;

}

function HEX2A_788529162(a_788529163, b_788529164) {
  var result_788529165 = 0n;

    result_788529165 = (a_788529163 * b_788529164);

  return result_788529165;

}

function convert_788529960(unitFrom_788529962, unitTo_788529963, quantity_788529964) {
    var Temporary1;

  var result_788529965 = 0;

    if ((unitFrom_788529962 < unitTo_788529963)) {
    Temporary1 = chckRange(Number(divInt64(BigInt(quantity_788529964), divInt64(unitWeights_788529302[chckIndx(unitTo_788529963, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitFrom_788529962, 0, (unitWeights_788529302).length - 1)]))), 0, 999999999);
    }
    else {
    Temporary1 = chckRange(Number(HEX2A_788529162(divInt64(unitWeights_788529302[chckIndx(unitFrom_788529962, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitTo_788529963, 0, (unitWeights_788529302).length - 1)]), BigInt(quantity_788529964))), 0, 999999999);
    }
    
    result_788529965 = Temporary1;

  return result_788529965;

}

function HEX3DHEX3D_788530746(zone1_788530747, zone2_788530748) {
  var result_788530749 = false;

  BeforeRet: {
    if ((zone1_788530747 == zone2_788530748)) {
    result_788530749 = true;
    break BeforeRet;
    }
    
    if (((zone1_788530747 == null) || (zone2_788530748 == null))) {
    result_788530749 = false;
    break BeforeRet;
    }
    
    result_788530749 = eqStrings(zone1_788530747.name, zone2_788530748.name);
  };

  return result_788530749;

}

function formatPattern_788531345(dt_788531346, pattern_788531347, result_788531348, result_788531348_Idx, loc_788531349) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary7;
          var Temporary8;
          var Temporary9;
      var Temporary10;

    switch (pattern_788531347) {
    case 0:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(monthday_788530507(dt_788531346)));;
      break;
    case 1:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(monthday_788530507(dt_788531346), 2));;
      break;
    case 2:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], loc_788531349.ddd[chckIndx(dt_788531346.weekday, 0, (loc_788531349.ddd).length - 1)]);;
      break;
    case 3:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], loc_788531349.dddd[chckIndx(dt_788531346.weekday, 0, (loc_788531349.dddd).length - 1)]);;
      break;
    case 4:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(modInt(getIsoWeekAndYear_788529558(dt_788531346).Field1, 100), 2));;
      break;
    case 5:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(getIsoWeekAndYear_788529558(dt_788531346).Field1));;
      break;
    case 6:
      if ((dt_788531346.hour == 0)) {
      Temporary1 = [49,50];
      }
      else {
      if ((12 < dt_788531346.hour)) {
      Temporary1 = HEX24_385875976(HEX2D_788529182(dt_788531346.hour, 12));
      }
      else {
      Temporary1 = HEX24_385875976(dt_788531346.hour);
      }
      }
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], Temporary1);;
      break;
    case 7:
      if ((dt_788531346.hour == 0)) {
      Temporary2 = [49,50];
      }
      else {
      if ((12 < dt_788531346.hour)) {
      Temporary2 = nsuIntToStr(HEX2D_788529182(dt_788531346.hour, 12), 2);
      }
      else {
      Temporary2 = nsuIntToStr(dt_788531346.hour, 2);
      }
      }
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], Temporary2);;
      break;
    case 8:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(dt_788531346.hour));;
      break;
    case 9:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(dt_788531346.hour, 2));;
      break;
    case 10:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(dt_788531346.minute));;
      break;
    case 11:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(dt_788531346.minute, 2));;
      break;
    case 12:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(month_788530515(dt_788531346)));;
      break;
    case 13:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(month_788530515(dt_788531346), 2));;
      break;
    case 14:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], loc_788531349.MMM[chckIndx(month_788530515(dt_788531346), 1, (loc_788531349.MMM).length + (1) - 1) - (1)]);;
      break;
    case 15:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], loc_788531349.MMMM[chckIndx(month_788530515(dt_788531346), 1, (loc_788531349.MMMM).length + (1) - 1) - (1)]);;
      break;
    case 16:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(dt_788531346.second));;
      break;
    case 17:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(dt_788531346.second, 2));;
      break;
    case 18:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(convert_788529960(0, 2, dt_788531346.nanosecond), 3));;
      break;
    case 19:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(convert_788529960(0, 1, dt_788531346.nanosecond), 6));;
      break;
    case 20:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(dt_788531346.nanosecond, 9));;
      break;
    case 21:
      if ((12 <= dt_788531346.hour)) {
      Temporary3 = [80];
      }
      else {
      Temporary3 = [65];
      }
      
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], Temporary3);;
      break;
    case 22:
      if ((12 <= dt_788531346.hour)) {
      Temporary4 = [80,77];
      }
      else {
      Temporary4 = [65,77];
      }
      
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], Temporary4);;
      break;
    case 23:
      if ((dt_788531346.year <= 0)) {
      Temporary5 = HEX2B_788529174(absInt(dt_788531346.year), 1);
      }
      else {
      Temporary5 = dt_788531346.year;
      }
      
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(modInt(Temporary5, 100), 2));;
      break;
    case 24:
      if ((dt_788531346.year <= 0)) {
      Temporary6 = HEX2B_788529174(absInt(dt_788531346.year), 1);
      }
      else {
      Temporary6 = dt_788531346.year;
      }
      
      var year_788531368 = Temporary6;
      if ((year_788531368 < 10000)) {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(year_788531368, 4));;
      }
      else {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], [43].concat(HEX24_385875976(year_788531368) || []));;
      }
      
      break;
    case 25:
      if ((dt_788531346.year < 1)) {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(HEX2B_788529174(absInt(dt_788531346.year), 1)));;
      }
      else {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(dt_788531346.year));;
      }
      
      break;
    case 26:
      var year_788531369 = dt_788531346.year;
      if (((year_788531369 < 10000) || (year_788531369 < 0))) {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(year_788531369, 4));;
      }
      else {
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], [43].concat(HEX24_385875976(year_788531369) || []));;
      }
      
      break;
    case 27:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(dt_788531346.year));;
      break;
    case 28:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(getIsoWeekAndYear_788529558(dt_788531346).Field0));;
      break;
    case 29:
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(getIsoWeekAndYear_788529558(dt_788531346).Field0, 2));;
      break;
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      if ((!(HEX3DHEX3D_788530746(dt_788531346.timezone, null)) && eqStrings(dt_788531346.timezone.name, [69,116,99,47,85,84,67]))) {
      addChar(result_788531348[result_788531348_Idx], 90);;
      }
      else {
        if ((0 <= negInt(dt_788531346.utcOffset))) {
        Temporary7 = 43;
        }
        else {
        Temporary7 = 45;
        }
        
        addChar(result_788531348[result_788531348_Idx], Temporary7);;
        var absOffset_788531370 = absInt(dt_788531346.utcOffset);
        switch (pattern_788531347) {
        case 30:
          result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], HEX24_385875976(divInt(absOffset_788531370, 3600)));;
          break;
        case 31:
          result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], nsuIntToStr(divInt(absOffset_788531370, 3600), 2));;
          break;
        case 32:
        case 34:
          var h_788531371 = nsuIntToStr(divInt(absOffset_788531370, 3600), 2);
          var m_788531372 = nsuIntToStr(modInt(divInt(absOffset_788531370, 60), 60), 2);
          if ((pattern_788531347 == 32)) {
          Temporary8 = [58];
          }
          else {
          Temporary8 = [];
          }
          
          var sep_788531378 = nimCopy(null, Temporary8, NTI33554449);
          result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], (h_788531371 || []).concat(sep_788531378 || [],m_788531372 || []));;
          break;
        case 33:
        case 35:
          var absOffset_788531379 = absInt(dt_788531346.utcOffset);
          var h_788531380 = nsuIntToStr(divInt(absOffset_788531379, 3600), 2);
          var m_788531381 = nsuIntToStr(modInt(divInt(absOffset_788531379, 60), 60), 2);
          var s_788531382 = nsuIntToStr(modInt(absOffset_788531379, 60), 2);
          if ((pattern_788531347 == 33)) {
          Temporary9 = [58];
          }
          else {
          Temporary9 = [];
          }
          
          var sep_788531387 = nimCopy(null, Temporary9, NTI33554449);
          result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], (h_788531380 || []).concat(sep_788531387 || [],m_788531381 || [],sep_788531387 || [],s_788531382 || []));;
          break;
        default: 
          if (true) {
          failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,49,56,57,51,44,32,49,51,41,32,96,102,97,108,115,101,96,32]);
          }
          
          break;
        }
      }
      
      break;
    case 36:
      if ((dt_788531346.year < 1)) {
      Temporary10 = [66,67];
      }
      else {
      Temporary10 = [65,68];
      }
      
      result_788531348[result_788531348_Idx].push.apply(result_788531348[result_788531348_Idx], Temporary10);;
      break;
    case 37:
      if (true) {
      failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,49,56,57,54,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }

  
}

function format_788532760(dt_788532761, f_788532762, loc_788532763) {
  var result_788532764 = [[]];

    if (!(!((dt_788532761.monthdayZero == 0)))) {
    failedAssertImpl_268435541([116,105,109,101,115,46,110,105,109,40,50,49,56,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_788532764[0] = nimCopy(null, [], NTI33554449);
    var idx_788532770 = 0;
    Label1: {
        Label2: while (true) {
        if (!(idx_788532770 <= (f_788532762.patterns).length - 1)) break Label2;
          switch (chckRange(f_788532762.patterns[chckIndx(idx_788532770, 0, (f_788532762.patterns).length - 1)], 0, 37)) {
          case 37:
            idx_788532770 = addInt(idx_788532770, 1);
            var len_788532779 = f_788532762.patterns[chckIndx(idx_788532770, 0, (f_788532762.patterns).length - 1)];
            Label3: {
              var i_788532791 = 0;
              var res_570429140 = 1;
              Label4: {
                  Label5: while (true) {
                  if (!(res_570429140 <= ((len_788532779) | 0))) break Label5;
                    i_788532791 = res_570429140;
                    idx_788532770 = addInt(idx_788532770, 1);
                    addChar(result_788532764[0], f_788532762.patterns[chckIndx(idx_788532770, 0, (f_788532762.patterns).length - 1)]);;
                    res_570429140 = addInt(res_570429140, 1);
                  }
              };
            };
            idx_788532770 = addInt(idx_788532770, 1);
            break;
          default: 
            formatPattern_788531345(dt_788532761, chckRange(f_788532762.patterns[chckIndx(idx_788532770, 0, (f_788532762.patterns).length - 1)], 0, 37), result_788532764, 0, loc_788532763);
            idx_788532770 = addInt(idx_788532770, 1);
            break;
          }
        }
    };

  return result_788532764[0];

}

function format_570427336(dt_570427338) {
  var result_570427340 = [];

    result_570427340 = nimCopy(null, format_788532760(dt_570427338, f2_570427341, DefaultLocale_788531049), NTI33554449);

  return result_570427340;

}

function HEX2B_788529170(a_788529171, b_788529172) {
  var result_788529173 = 0n;

    result_788529173 = (a_788529171 + b_788529172);

  return result_788529173;

}

function convert_788529654(unitFrom_788529656, unitTo_788529657, quantity_788529658) {
    var Temporary1;

  var result_788529659 = 0n;

    if ((unitFrom_788529656 < unitTo_788529657)) {
    Temporary1 = divInt64(quantity_788529658, divInt64(unitWeights_788529302[chckIndx(unitTo_788529657, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitFrom_788529656, 0, (unitWeights_788529302).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_788529162(divInt64(unitWeights_788529302[chckIndx(unitFrom_788529656, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitTo_788529657, 0, (unitWeights_788529302).length - 1)]), quantity_788529658);
    }
    
    result_788529659 = Temporary1;

  return result_788529659;

}

function convert_788529721(unitFrom_788529723, unitTo_788529724, quantity_788529725) {
    var Temporary1;

  var result_788529726 = 0;

    if ((unitFrom_788529723 < unitTo_788529724)) {
    Temporary1 = chckRange(Number(divInt64(BigInt(quantity_788529725), divInt64(unitWeights_788529302[chckIndx(unitTo_788529724, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitFrom_788529723, 0, (unitWeights_788529302).length - 1)]))), (-2147483648), 2147483647);
    }
    else {
    Temporary1 = chckRange(Number(HEX2A_788529162(divInt64(unitWeights_788529302[chckIndx(unitFrom_788529723, 0, (unitWeights_788529302).length - 1)], unitWeights_788529302[chckIndx(unitTo_788529724, 0, (unitWeights_788529302).length - 1)]), BigInt(quantity_788529725))), (-2147483648), 2147483647);
    }
    
    result_788529726 = Temporary1;

  return result_788529726;

}

function checkOverflowInt64(a_33557070) {
        if (a_33557070 > 9223372036854775807n || a_33557070 < -9223372036854775808n) raiseOverflow();
  

  
}

function normalize_788530369(seconds_788530371, nanoseconds_788530372) {
  var result_788530373 = ({seconds: 0n, nanosecond: 0});

    result_788530373.seconds = HEX2B_788529170(seconds_788530371, convert_788529654(0, 3, nanoseconds_788530372));
    var nanosecond_788530384 = modInt64(nanoseconds_788530372, BigInt(convert_788529721(3, 0, 1)));
    if ((nanosecond_788530384 < 0n)) {
    nanosecond_788530384 = addInt64(nanosecond_788530384, BigInt(BigInt(convert_788529721(3, 0, 1))));
    result_788530373.seconds = subInt64(result_788530373.seconds, BigInt(1));
    }
    
    result_788530373.nanosecond = chckRange(chckRange(Number(nanosecond_788530384), (-2147483648), 2147483647), 0, 999999999);

  return result_788530373;

}

function HEX2D_788529178(a_788529179, b_788529180) {
  var result_788529181 = 0n;

    result_788529181 = (a_788529179 - b_788529180);

  return result_788529181;

}

function ntSubTime(a_788530399, b_788530400) {
  var result_788530401 = ({seconds: 0n, nanosecond: 0});

    result_788530401 = nimCopy(result_788530401, normalize_788530369(HEX2D_788529178(a_788530399.seconds, b_788530400.seconds), BigInt(HEX2D_788529182(a_788530399.nanosecond, b_788530400.nanosecond))), NTI788529184);

  return result_788530401;

}

function normalize_788529711(seconds_788529713, nanoseconds_788529714) {
  var result_788529715 = ({seconds: 0n, nanosecond: 0});

    result_788529715.seconds = HEX2B_788529170(seconds_788529713, convert_788529654(0, 3, nanoseconds_788529714));
    var nanosecond_788529731 = modInt64(nanoseconds_788529714, BigInt(convert_788529721(3, 0, 1)));
    if ((nanosecond_788529731 < 0n)) {
    nanosecond_788529731 = addInt64(nanosecond_788529731, BigInt(BigInt(convert_788529721(3, 0, 1))));
    result_788529715.seconds = subInt64(result_788529715.seconds, BigInt(1));
    }
    
    result_788529715.nanosecond = chckRange(chckRange(Number(nanosecond_788529731), (-2147483648), 2147483647), 0, 999999999);

  return result_788529715;

}

function initDuration_788529644(nanoseconds_788529645, microseconds_788529646, milliseconds_788529647, seconds_788529648, minutes_788529649, hours_788529650, days_788529651, weeks_788529652) {
  var result_788529653 = ({seconds: 0n, nanosecond: 0});

    var seconds_788529699 = HEX2B_788529170(HEX2B_788529170(HEX2B_788529170(HEX2B_788529170(HEX2B_788529170(HEX2B_788529170(HEX2B_788529170(convert_788529654(7, 3, weeks_788529652), convert_788529654(6, 3, days_788529651)), convert_788529654(4, 3, minutes_788529649)), convert_788529654(5, 3, hours_788529650)), convert_788529654(3, 3, seconds_788529648)), convert_788529654(2, 3, milliseconds_788529647)), convert_788529654(1, 3, microseconds_788529646)), convert_788529654(0, 3, nanoseconds_788529645));
    var nanoseconds_788529710 = chckRange(Number(HEX2B_788529170(HEX2B_788529170(convert_788529654(2, 0, modInt64(milliseconds_788529647, 1000n)), convert_788529654(1, 0, modInt64(microseconds_788529646, 1000000n))), modInt64(nanoseconds_788529645, 1000000000n))), (-2147483648), 2147483647);
    result_788529653 = nimCopy(result_788529653, normalize_788529711(seconds_788529699, BigInt(nanoseconds_788529710)), NTI788529186);

  return result_788529653;

}

function floorDiv_788529475(x_788529477, y_788529478) {
  var result_788529479 = 0n;

    result_788529479 = x_788529477 / y_788529478;
    var r_788529480 = x_788529477 % y_788529478;
    if ((((0n < r_788529480) && (y_788529478 < 0n)) || ((r_788529480 < 0n) && (0n < y_788529478)))) {
    result_788529479 = BigInt.asIntN(64, result_788529479 - BigInt(1));
    }
    

  return result_788529479;

}

function inc_788529194(a_788529195, a_788529195_Idx, b_788529196) {
    a_788529195[a_788529195_Idx] = BigInt.asIntN(64, a_788529195[a_788529195_Idx] + BigInt(b_788529196));

  
}

function fromEpochDay_788529378(epochday_788529379) {
    var Temporary1;
    var Temporary2;

  var result_788529383 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_788529384 = [epochday_788529379];
    inc_788529194(z_788529384, 0, 719468);
    if ((0n <= z_788529384[0])) {
    Temporary1 = z_788529384[0];
    }
    else {
    Temporary1 = HEX2D_788529178(z_788529384[0], 146096n);
    }
    
    var era_788529385 = divInt64(Temporary1, 146097n);
    var doe_788529386 = HEX2D_788529178(z_788529384[0], HEX2A_788529162(era_788529385, 146097n));
    var yoe_788529387 = divInt64(HEX2D_788529178(HEX2B_788529170(HEX2D_788529178(doe_788529386, divInt64(doe_788529386, 1460n)), divInt64(doe_788529386, 36524n)), divInt64(doe_788529386, 146096n)), 365n);
    var y_788529388 = HEX2B_788529170(yoe_788529387, HEX2A_788529162(era_788529385, 400n));
    var doy_788529389 = HEX2D_788529178(doe_788529386, HEX2D_788529178(HEX2B_788529170(HEX2A_788529162(365n, yoe_788529387), divInt64(yoe_788529387, 4n)), divInt64(yoe_788529387, 100n)));
    var mp_788529390 = divInt64(HEX2B_788529170(HEX2A_788529162(5n, doy_788529389), 2n), 153n);
    var d_788529391 = HEX2B_788529170(HEX2D_788529178(doy_788529389, divInt64(HEX2B_788529170(HEX2A_788529162(153n, mp_788529390), 2n), 5n)), 1n);
    if ((mp_788529390 < 10n)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = (-9);
    }
    
    var m_788529392 = HEX2B_788529170(mp_788529390, BigInt(Temporary2));
    var colontmp__570429146 = chckRange(Number(d_788529391), 1, 31);
    var colontmp__570429147 = chckRange(Number(m_788529392), 1, 12);
    var colontmp__570429148 = chckRange(Number(HEX2B_788529170(y_788529388, BigInt(((m_788529392 <= 2n) ? 1 : 0)))), (-2147483648), 2147483647);
    result_788529383 = nimCopy(result_788529383, {Field0: nimCopy(null, colontmp__570429146, NTI788529176), Field1: colontmp__570429147, Field2: colontmp__570429148}, NTI788529345);
    break BeforeRet;
  };

  return result_788529383;

}

function isLeapYear_788529322(year_788529323) {
  var result_788529324 = false;

    result_788529324 = ((modInt(year_788529323, 4) == 0) && (!((modInt(year_788529323, 100) == 0)) || (modInt(year_788529323, 400) == 0)));

  return result_788529324;

}

function getDaysInMonth_788529325(month_788529326, year_788529327) {
      var Temporary1;

  var result_788529328 = 0;

    switch (month_788529326) {
    case 2:
      if (isLeapYear_788529322(year_788529327)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_788529328 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_788529328 = 30;
      break;
    default: 
      result_788529328 = 31;
      break;
    }

  return result_788529328;

}

function assertValidDate_788529329(monthday_788529330, month_788529331, year_788529332) {
    if (!((monthday_788529330 <= getDaysInMonth_788529325(month_788529331, year_788529332)))) {
    failedAssertImpl_268435541(([116,105,109,101,115,46,110,105,109,40,52,55,55,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_385875976(year_788529332) || [],[45] || [],nsuIntToStr(month_788529331, 2) || [],[45] || [],HEX24_385875976(monthday_788529330) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_788529166(a_788529167, b_788529168) {
  var result_788529169 = 0;

    result_788529169 = (a_788529167 * b_788529168);

  return result_788529169;

}

function toEpochDay_788529358(monthday_788529359, month_788529360, year_788529361) {
    var Temporary1;
    var Temporary2;

  var result_788529362 = 0n;

  BeforeRet: {
    assertValidDate_788529329(monthday_788529359, month_788529360, year_788529361);
    var y_788529366 = year_788529361;
    var m_788529367 = month_788529360;
    var d_788529368 = monthday_788529359;
    if ((m_788529367 <= 2)) {
    y_788529366 = subInt(y_788529366, 1);
    }
    
    if ((0 <= y_788529366)) {
    Temporary1 = y_788529366;
    }
    else {
    Temporary1 = HEX2D_788529182(y_788529366, 399);
    }
    
    var era_788529374 = divInt(Temporary1, 400);
    var yoe_788529375 = HEX2D_788529182(y_788529366, HEX2A_788529166(era_788529374, 400));
    if ((2 < m_788529367)) {
    Temporary2 = (-3);
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_788529376 = HEX2D_788529182(HEX2B_788529174(divInt(HEX2B_788529174(HEX2A_788529166(153, HEX2B_788529174(m_788529367, Temporary2)), 2), 5), d_788529368), 1);
    var doe_788529377 = HEX2B_788529174(HEX2D_788529182(HEX2B_788529174(HEX2A_788529166(yoe_788529375, 365), divInt(yoe_788529375, 4)), divInt(yoe_788529375, 100)), doy_788529376);
    result_788529362 = BigInt(HEX2D_788529182(HEX2B_788529174(HEX2A_788529166(era_788529374, 146097), doe_788529377), 719468));
    break BeforeRet;
  };

  return result_788529362;

}

function getDayOfWeek_788529469(monthday_788529470, month_788529471, year_788529472) {
    var Temporary1;

  var result_788529473 = 0;

    assertValidDate_788529329(monthday_788529470, month_788529471, year_788529472);
    var days_788529474 = HEX2D_788529178(toEpochDay_788529358(monthday_788529470, month_788529471, year_788529472), 3n);
    var weeks_788529486 = floorDiv_788529475(days_788529474, 7n);
    var wd_788529487 = HEX2D_788529178(days_788529474, HEX2A_788529162(weeks_788529486, 7n));
    if ((wd_788529487 == 0n)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(Number(HEX2D_788529178(wd_788529487, 1n)), 0, 6);
    }
    
    result_788529473 = Temporary1;

  return result_788529473;

}

function getDayOfYear_788529430(monthday_788529431, month_788529432, year_788529433) {
  var result_788529434 = 0;

    assertValidDate_788529329(monthday_788529431, month_788529432, year_788529433);
    if (isLeapYear_788529322(year_788529433)) {
    result_788529434 = chckRange(HEX2D_788529182(HEX2B_788529174(daysUntilMonthLeap_788529436[chckIndx(month_788529432, 1, (daysUntilMonthLeap_788529436).length + (1) - 1) - (1)], monthday_788529431), 1), 0, 365);
    }
    else {
      result_788529434 = chckRange(HEX2D_788529182(HEX2B_788529174(daysUntilMonth_788529435[chckIndx(month_788529432, 1, (daysUntilMonth_788529435).length + (1) - 1) - (1)], monthday_788529431), 1), 0, 365);
    }
    

  return result_788529434;

}

function initDateTime_788530621(zt_788530622, zone_788530623) {
  var result_788530624 = ({m_type: NTI788529185, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_788530625 = ntSubTime(zt_788530622.time, initDuration_788529644(0n, 0n, 0n, BigInt(zt_788530622.utcOffset), 0n, 0n, 0n, 0n));
    var s_788530626 = adjTime_788530625.seconds;
    var epochday_788530631 = floorDiv_788529475(s_788530626, 86400n);
    var rem_788530632 = HEX2D_788529178(s_788530626, HEX2A_788529162(epochday_788530631, 86400n));
    var hour_788530633 = divInt64(rem_788530632, 3600n);
    rem_788530632 = HEX2D_788529178(rem_788530632, HEX2A_788529162(hour_788530633, 3600n));
    var minute_788530634 = divInt64(rem_788530632, 60n);
    rem_788530632 = HEX2D_788529178(rem_788530632, HEX2A_788529162(minute_788530634, 60n));
    var second_788530635 = rem_788530632;
    var tmpTuple_788530636 = fromEpochDay_788529378(epochday_788530631);
    var d_788530637 = tmpTuple_788530636["Field0"];
    var m_788530638 = tmpTuple_788530636["Field1"];
    var y_788530639 = tmpTuple_788530636["Field2"];
    result_788530624 = nimCopy(result_788530624, {year: y_788530639, monthZero: ((m_788530638) | 0), monthdayZero: d_788530637, hour: nimCopy(null, chckRange(Number(hour_788530633), 0, 23), NTI788529177), minute: nimCopy(null, chckRange(Number(minute_788530634), 0, 59), NTI788529178), second: nimCopy(null, chckRange(Number(second_788530635), 0, 60), NTI788529179), nanosecond: nimCopy(null, zt_788530622.time.nanosecond, NTI788529181), weekday: getDayOfWeek_788529469(d_788530637, m_788530638, y_788530639), yearday: getDayOfYear_788529430(d_788530637, m_788530638, y_788530639), isDst: zt_788530622.isDst, timezone: zone_788530623, utcOffset: zt_788530622.utcOffset, m_type: NTI788529185}, NTI788529185);

  return result_788530624;

}

function zonedTimeFromTime_788530710(zone_788530711, time_788530712) {
  var result_788530713 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_788530713 = nimCopy(result_788530713, zone_788530711.zonedTimeFromTimeImpl(time_788530712), NTI788529191);

  return result_788530713;

}

function inZone_788530760(time_788530761, zone_788530762) {
  var result_788530763 = ({m_type: NTI788529185, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_788530763 = nimCopy(result_788530763, initDateTime_788530621(zonedTimeFromTime_788530710(zone_788530762, time_788530761), zone_788530762), NTI788529185);

  return result_788530763;

}

function newTimezone_788530667(name_788530668, zonedTimeFromTimeImpl_788530671, zonedTimeFromAdjTimeImpl_788530674) {
  var result_788530675 = null;

    result_788530675 = {name: nimCopy(null, name_788530668, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_788530671, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_788530674};

  return result_788530675;

}

function localZonedTimeFromTime_788530778(time_788530779) {
  var result_788530780 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_788530781 = new Date(Number(HEX2A_788529162(time_788530779.seconds, 1000n)));
    var offset_788530782 = HEX2A_788529166(jsDate_788530781.getTimezoneOffset(), 60);
    result_788530780.time = nimCopy(result_788530780.time, time_788530779, NTI788529184);
    result_788530780.utcOffset = offset_788530782;
    result_788530780.isDst = false;

  return result_788530780;

}

function contains_788530795(s_788530799, value_788530800) {
  var result_788530801 = false;

    result_788530801 = ((s_788530799.a <= value_788530800) && (value_788530800 <= s_788530799.b));

  return result_788530801;

}

function ntAddTime(a_788530363, b_788530364) {
  var result_788530365 = ({seconds: 0n, nanosecond: 0});

    result_788530365 = nimCopy(result_788530365, normalize_788530369(HEX2B_788529170(a_788530363.seconds, b_788530364.seconds), BigInt(HEX2B_788529174(a_788530363.nanosecond, b_788530364.nanosecond))), NTI788529184);

  return result_788530365;

}

function localZonedTimeFromAdjTime_788530783(adjTime_788530784) {
  var result_788530785 = ({time: ({seconds: 0n, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_788530786 = new Date(Number(HEX2A_788529162(adjTime_788530784.seconds, 1000n)));
    var localDate_788530787 = new Date(utcDate_788530786.getUTCFullYear(),utcDate_788530786.getUTCMonth(),utcDate_788530786.getUTCDate(),utcDate_788530786.getUTCHours(),utcDate_788530786.getUTCMinutes(),utcDate_788530786.getUTCSeconds(),0);
    if (contains_788530795(HEX2EHEX2E_1124073520(0, 99), utcDate_788530786.getUTCFullYear())) {
    localDate_788530787.setFullYear(utcDate_788530786.getUTCFullYear());
    }
    
    result_788530785.utcOffset = HEX2A_788529166(localDate_788530787.getTimezoneOffset(), 60);
    result_788530785.time = nimCopy(result_788530785.time, ntAddTime(adjTime_788530784, initDuration_788529644(0n, 0n, 0n, BigInt(result_788530785.utcOffset), 0n, 0n, 0n, 0n)), NTI788529184);
    result_788530785.isDst = false;

  return result_788530785;

}

function local_788530828() {
  var result_788530829 = null;

    if ((localInstance_788530806[0] == null)) {
    localInstance_788530806[0] = newTimezone_788530667([76,79,67,65,76], localZonedTimeFromTime_788530778, localZonedTimeFromAdjTime_788530783);
    }
    
    result_788530829 = localInstance_788530806[0];

  return result_788530829;

}

function local_788530842(t_788530843) {
  var result_788530844 = ({m_type: NTI788529185, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_788530844 = nimCopy(result_788530844, inZone_788530760(t_788530843, local_788530828()), NTI788529185);

  return result_788530844;

}

function initTime_788530233(unix_788530234, nanosecond_788530235) {
  var result_788530236 = ({seconds: 0n, nanosecond: 0});

    result_788530236.seconds = unix_788530234;
    result_788530236.nanosecond = nanosecond_788530235;

  return result_788530236;

}

function getTime_788530311() {
  var result_788530312 = ({seconds: 0n, nanosecond: 0});

    var millis_788530317 = new Date().getTime();
    var seconds_788530323 = convert_788529721(2, 3, millis_788530317);
    var nanos_788530334 = convert_788529721(2, 0, modInt(millis_788530317, convert_788529721(3, 2, 1)));
    result_788530312 = nimCopy(result_788530312, initTime_788530233(BigInt(seconds_788530323), chckRange(nanos_788530334, 0, 999999999)), NTI788529184);

  return result_788530312;

}

function now_788530845() {
  var result_788530846 = ({m_type: NTI788529185, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_788530846 = nimCopy(result_788530846, local_788530842(getTime_788530311()), NTI788529185);

  return result_788530846;

}

function linkFileName_570427332(file_570427333) {
  var result_570427334 = [];

    var trimmed_570427335 = [nimCopy(null, file_570427333, NTI33554449)];
    nsuRemoveSuffixString(trimmed_570427335, 0, [46,99,115,118]);
    var currTime_570427342 = format_570427336(now_788530845());
    result_570427334 = nimCopy(null, (trimmed_570427335[0] || []).concat([95] || [],currTime_570427342 || [],[46,116,120,116] || []), NTI33554449);

  return result_570427334;

}

function substr_33558091(s_33558092, first_33558093) {
  var result_33558094 = [];

    result_33558094 = nimCopy(null, substr_33558079(s_33558092, first_33558093, (s_33558092).length - 1), NTI33554449);

  return result_33558094;

}

function nsuReplaceStr(s_704644944, sub_704644945, by_704644946) {
  var result_704644947 = [];

    result_704644947 = nimCopy(null, [], NTI33554449);
    var subLen_704644948 = (sub_704644945).length;
    if ((subLen_704644948 == 0)) {
    result_704644947 = nimCopy(null, s_704644944, NTI33554449);
    }
    else {
    if ((subLen_704644948 == 1)) {
    var c_704644949 = sub_704644945[chckIndx(0, 0, (sub_704644945).length - 1)];
    var last_704644950 = (s_704644944).length - 1;
    var i_704644951 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_704644952 = nsuFindChar(s_704644944, c_704644949, chckRange(i_704644951, 0, 2147483647), last_704644950);
          if ((j_704644952 < 0)) {
          break Label1;
          }
          
          result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644951, subInt(j_704644952, 1)));;
          result_704644947.push.apply(result_704644947, by_704644946);;
          i_704644951 = addInt(j_704644952, subLen_704644948);
        }
    };
    result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644951));;
    }
    else {
      var a_704644953 = nsuInitNewSkipTable(sub_704644945);
      var last_704644954 = (s_704644944).length - 1;
      var i_704644955 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_704644956 = nsuFindStrA(a_704644953, s_704644944, sub_704644945, chckRange(i_704644955, 0, 2147483647), last_704644954);
            if ((j_704644956 < 0)) {
            break Label3;
            }
            
            result_704644947.push.apply(result_704644947, substr_33558079(s_704644944, i_704644955, subInt(j_704644956, 1)));;
            result_704644947.push.apply(result_704644947, by_704644946);;
            i_704644955 = addInt(j_704644956, subLen_704644948);
          }
      };
      result_704644947.push.apply(result_704644947, substr_33558091(s_704644944, i_704644955));;
    }
    }

  return result_704644947;

}

function sampleHtml_570428724(sample_570428725) {
  var result_570428726 = [];

    var pattern_570428727 = nsuReplaceStr(sample_570428725.pattern, [45], [38,109,105,110,117,115,59]);
    result_570428726 = nimCopy(null, ([60,116,114,62,60,116,100,62] || []).concat(sample_570428725.sampleId || [],[60,47,116,100,62,60,116,100,62] || [],pattern_570428727 || [],[60,47,116,100,62,60,116,100,62] || [],reprEnum(sample_570428725.status, NTI570425347) || [],[60,47,116,100,62,60,116,100,62] || [],codes_570425374[chckIndx(sample_570428725.status, 0, (codes_570425374).length - 1)] || [],[60,47,116,100,62,60,47,116,114,62] || []), NTI33554449);

  return result_570428726;

}

function toHtmlTable_570428731(samples_570428732) {
  var result_570428733 = [];

    var body_570428734 = [];
    var row_570428735 = [];
    Label1: {
      var field_570428818 = [];
      var i_570429151 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            field_570428818 = header_570428646[chckIndx(i_570429151, 0, (header_570428646).length - 1)];
            row_570428735.push.apply(row_570428735, ([60,116,104,62] || []).concat(field_570428818 || [],[60,47,116,104,62] || []));;
            if ((3 <= i_570429151)) {
            break Label2;
            }
            
            i_570429151 = addInt(i_570429151, 1);
          }
      };
    };
    body_570428734 = nimCopy(null, ([60,116,114,62] || []).concat(row_570428735 || [],[60,47,116,114,62] || []), NTI33554449);
    Label4: {
      var sample_570428822 = ({sampleId: [], pattern: [], status: 0});
      var i_570429154 = 0;
      var L_570429155 = (samples_570428732).length;
      Label5: {
          Label6: while (true) {
          if (!(i_570429154 < L_570429155)) break Label6;
            sample_570428822 = samples_570428732[chckIndx(i_570429154, 0, (samples_570428732).length - 1)];
            body_570428734.push.apply(body_570428734, sampleHtml_570428724(sample_570428822));;
            i_570429154 = addInt(i_570429154, 1);
            if (!(((samples_570428732).length == L_570429155))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_570428733 = nimCopy(null, ([60,116,97,98,108,101,62] || []).concat(body_570428734 || [],[60,47,116,97,98,108,101,62] || []), NTI33554449);

  return result_570428733;

}

function htmlResult_570428823(contents_570428824, file_570428825) {
  var result_570428826 = null;

    var sampleTable_570428827 = parseExportFile_570425428(contents_570428824);
    var samples_570428828 = analyzeResults_570428479(sampleTable_570428827);
    var resultTable_570428829 = toResultTable_570428647(samples_570428828);
    var dataUrl_570428830 = toDataUrl_570427324(resultTable_570428829);
    var linkText_570428831 = linkFileName_570427332(file_570428825);
    var htmlTable_570428832 = toHtmlTable_570428731(samples_570428828);
    var s_570428833 = [];
    s_570428833.push.apply(s_570428833, ([60,112,62] || []).concat(htmlTable_570428832 || [],[60,47,112,62] || []));;
    s_570428833.push.apply(s_570428833, [60,104,51,62,76,195,164,110,107,32,116,105,108,108,32,114,101,115,117,108,116,97,116,102,105,108,60,47,104,51,62]);;
    s_570428833.push.apply(s_570428833, ([60,112,62,60,97,32,104,114,101,102,61,34] || []).concat(dataUrl_570428830 || [],[34,32,100,111,119,110,108,111,97,100,61,34] || [],linkText_570428831 || [],[34,62] || [],linkText_570428831 || [],[60,47,97,62,60,47,112,62] || []));;
    s_570428833.push.apply(s_570428833, ([60,112,62,60,100,101,116,97,105,108,115,62,60,115,117,109,109,97,114,121,62,86,105,115,97,32,102,105,108,101,110,115,32,105,110,110,101,104,195,165,108,108,60,47,115,117,109,109,97,114,121,62,60,112,114,101,62,60,99,111,100,101,62] || []).concat(resultTable_570428829 || [],[60,47,99,111,100,101,62,60,47,112,114,101,62,60,47,100,101,116,97,105,108,115,62,60,47,112,62] || []));;
    result_570428826 = toJSStr(s_570428833);

  return result_570428826;

}

function parseAndOutput_570428848(c_570428849, file_570428850) {
    document.getElementById("showcontent").innerHTML = htmlResult_570428823(c_570428849, file_570428850);

  
}

function fileLoaded() {
    
function HEX3Aanonymous_570428859(ev_570428860) {
        parseAndOutput_570428848(cstrToNimstr(reader_570428858.result), cstrToNimstr(file_570428857.name));

      
    }

  BeforeRet: {
    var fileInput_570428852 = document.getElementById("fileInput");
    if (((fileInput_570428852.files).length == 0)) {
    break BeforeRet;
    }
    
    var file_570428857 = fileInput_570428852.files[chckIndx(0, 0, (fileInput_570428852.files).length - 1)];
    var reader_570428858 = new FileReader();
    reader_570428858.addEventListener("load", HEX3Aanonymous_570428859, false);
    reader_570428858.readAsText(file_570428857, "UTF-8");
  };

  
}
